<?xml version="1.0" encoding="UTF-8"?>
<XMI verified="false" xmi.version="1.2" timestamp="2012-05-30T12:06:47" xmlns:UML="http://schema.omg.org/spec/UML/1.3">
 <XMI.header>
  <XMI.documentation>
   <XMI.exporter>umbrello uml modeller http://uml.sf.net</XMI.exporter>
   <XMI.exporterVersion>1.5.8</XMI.exporterVersion>
   <XMI.exporterEncoding>UnicodeUTF8</XMI.exporterEncoding>
  </XMI.documentation>
  <XMI.metamodel xmi.version="1.3" href="UML.xml" xmi.name="UML"/>
 </XMI.header>
 <XMI.content>
  <UML:Model isSpecification="false" isAbstract="false" isLeaf="false" xmi.id="m1" isRoot="false" name="UML Model">
   <UML:Namespace.ownedElement>
    <UML:Stereotype visibility="public" isSpecification="false" namespace="m1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="folder" name="folder"/>
    <UML:Stereotype visibility="public" isSpecification="false" namespace="m1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="datatype" name="datatype"/>
    <UML:Stereotype visibility="public" isSpecification="false" namespace="m1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="constructor" name="constructor"/>
    <UML:Stereotype visibility="public" isSpecification="false" namespace="m1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="friend" name="friend"/>
    <UML:Stereotype visibility="public" isSpecification="false" namespace="m1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="virtual" name="virtual"/>
    <UML:Model stereotype="folder" visibility="public" isSpecification="false" namespace="m1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Logical View" name="Logical View">
     <UML:Namespace.ownedElement>
      <UML:Package stereotype="folder" visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Datatypes" name="Datatypes">
       <UML:Namespace.ownedElement>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="7jtkNnFIgmcs" name="int"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="2eRbSgTHDDTi" name="char"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="bzTTHzQNiJ53" name="bool"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="4LMl5yd8a4h3" name="float"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="kAKxLlfxk7Q0" name="double"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="4qNk8QoCj8xp" name="short"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="4YvfdciLl0H4" name="long"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="lu1WzQU3EpoM" name="unsigned int"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="FaXzgUmk1fNe" name="unsigned short"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="F3xy3E3n72J6" name="unsigned long"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="SnAfcwzpWWmA" name="string"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="DNuggPjPsyP5" isRoot="false" xmi.id="lf13peG8Sm4e" name="vector&lt; float >*"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="DNuggPjPsyP5" isRoot="false" xmi.id="y7NqBT61wDln" name="const vector&lt; float >*"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="DNuggPjPsyP5" isRoot="false" xmi.id="DOICD6ntJvUO" name="vector&lt; float >"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="DNuggPjPsyP5" isRoot="false" xmi.id="oki70cAhXjbn" name="vector&lt; vector &lt; float > >"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="DNuggPjPsyP5" isRoot="false" xmi.id="6NtXQnVdx14t" name="vector&lt; int >"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="DNuggPjPsyP5" isRoot="false" xmi.id="Q68cBM6Z9X6c" name="vector&lt; Perceptron * >"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="DNuggPjPsyP5" isRoot="false" xmi.id="288UtG3EFnzS" name="vector&lt; NeuralLayer * >"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="DNuggPjPsyP5" isRoot="false" xmi.id="bG9pIY2XNcKQ" name="vector&lt; float >&amp;"/>
       </UML:Namespace.ownedElement>
      </UML:Package>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="DNuggPjPsyP5" name="vector"/>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ej9ph9SFjM5c" name="unsigned"/>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="G0qEJmlsjgee" xmi.id="7JzxVcLldBzu" parent="hwD8QbZLtYF3" name=""/>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="ggcgZ9UaCwWF" xmi.id="tPtq1iRhM3Mv" parent="lUmu57t5oVVF" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="6YoRMCWA94QR" client="ggcgZ9UaCwWF" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="CtHKxhjwrq7O" client="ggcgZ9UaCwWF" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="ZB1EI6q44PRO" client="ggcgZ9UaCwWF" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="eMrgmG48HNuK" client="ggcgZ9UaCwWF" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="tmH9HEVP8iF6" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="HYLPEYUl3x8U" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="DGe6mdUMKPDS" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="pGm7gxZ6WSym" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="5mpPc0Vc4tR3" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="iJPkDqnuOAV2" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="qjKwvxOZWHLl" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="P3dtJyeGvMHn" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="8vle595jeHYe" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="NZh1qDd0fc3c" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="hQngPwCRcc2U" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="bPED0EftHNeh" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="wbwKzMi5jgl0" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="jOKR45R0wdRw" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="m72PuMH4NvGc" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="0XFNQVzSOiYi" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="r8KRGWvIisnf" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="2eJkX4OKvsgK" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="NoGC3X1Piyok" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="iJQOHE7Atenw" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="tXXU69NqpNU8" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="it3WEXeQZxeQ" client="dETz9cSzCHmb" name=""/>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="G0qEJmlsjgee" xmi.id="eS4MpAs79rJo" parent="hwD8QbZLtYF3" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="jKxWdCmcejj3" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="DNuggPjPsyP5" xmi.id="SRW6BD8vT7e7" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="mgeDmILretdS" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="40q8WYvLcYoU" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="DNuggPjPsyP5" xmi.id="csnERbhEK2RG" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="P5li8CwBE6wC" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="63VhN0RqPHVv" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="lgQ9xv44H3i2" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="q5ZJULmmCGL4" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="uUu5kD9C9FDd" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="Bjf3CFWFpRzy" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="Jpg9Eg7GU5N0" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="cnNIn3EUpOag" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="qYDdulJnRyXe" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="XQoOZLhtI480" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="KWqaaybN45OJ" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="Vt7NXbW0tycN" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="6u7zqiKOBqBC" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="EfXP6N3Gcj2K" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="dYIFFIX1Cfg2" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="eeeomHZmPh76" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="dETz9cSzCHmb" xmi.id="7q0UY7algCfy" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="es3I3jG7MsC4" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="z3XK2QIIkntj" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="mlOUWHBvh8xk" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="uPPDY1fjSH1F" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="qafIpfW74HBE" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="vS7AYzJ470K1" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="XbYcbsd43MBN" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="KeBrjlZPnR1O" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="XYlLxmhTw9hn" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="FCUqNoKKqJD0" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="fauVu5WpswdX" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="Aax9MtKBBwCL" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="AnMLjWeUImgY" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="5mNX9LuknQh7" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="Z1s60PigJGw5" xmi.id="zq2mGhslQbMU" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="6t9WSTzD2VIw" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="KQOSSpy1mmpX" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="zi9kTyFP2vsP" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="LXqgqH1QUehs" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="ZgE3KtuKx8Sb" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="fqJgOVFJWi8X" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="BBjhrrFXMD3q" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="e8FjjeOVUMJ2" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="uhPP3iPGI7Vp" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="H1X0c4nr0lO3" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="qQ0oBOrR8BkK" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="rhm4Js9H9xnI" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="BouIjfa4tPb6" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="SXC5fnRQyQWR" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="J8jGWDhXQitF" client="JzGsbheTUlAY" name=""/>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="ggcgZ9UaCwWF" xmi.id="hpwlYRgdv6Og" parent="lUmu57t5oVVF" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="qJ2BUox1wzCq" client="ggcgZ9UaCwWF" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="7o54nIsLqFHf" client="ggcgZ9UaCwWF" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="rMrFjkDZT15k" client="ggcgZ9UaCwWF" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="RvOuxTc2pQcn" client="ggcgZ9UaCwWF" name=""/>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="6XvCF0AVyt7M" xmi.id="2kJPCJfGoYR1" parent="Yhu5mh83d9O0" name=""/>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="iBZSGKLq62FS" xmi.id="AFvo9pCr0jIE" parent="sLOKTXIZwIMh" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="PvJJsD4l5PmG" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="znx4CkJLV6qh" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="YSVTXYrPEojB" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="2c8ERpNl6ZFg" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="wYUjHw0DIqwY" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="x7zDxtlR9FNZ" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="tsBMzvG59XeR" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="Os2XPhwJgbi0" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="afjhr8IAo8S0" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="Gr92yb2bIaaJ" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="hpKkeImDI1NP" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="qkU8jsYEylRy" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="ke6YG3yfansE" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="8QsgDluBCjsp" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="FhAKeQLtgmTl" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="XaFDKjxxOtqn" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="EwDb2NQP5NAe" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="wvZzHjd6jlng" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="McCdQKkXOF8V" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="gHI2WQYcsXFO" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="OarsLRtXYVZA" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="3jpZCOjWPl2o" client="dETz9cSzCHmb" name=""/>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="G0qEJmlsjgee" xmi.id="rtUCUJ7NTkOK" parent="hwD8QbZLtYF3" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="yKNEk3qMf05i" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="DNuggPjPsyP5" xmi.id="cJUHHXxydZt5" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="3uugTnlK3Cal" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="7xt13YPux6oX" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="DNuggPjPsyP5" xmi.id="LEnHKcoe3xdM" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="P0oRxRlIcvdP" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="zNqggmKOSEi2" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="YdVzrB1aYIYv" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="kdsJ3VVa8NYX" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="bIMjfuHDTmYa" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="lhBNh4nnDjeT" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="1hUCR8drQvJk" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="tXMmU85WYG0r" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="WPY2eYtNjnv5" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="Nb82jTKun9dY" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="X4kKEMqXkbJQ" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="uJhRwYuJidUl" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="0sIiVkTdULCz" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="3XYM6HHQkkph" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="UIaF0PuAbVZP" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="KhjVfGg3fz0Z" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="dETz9cSzCHmb" xmi.id="BjaqjYPXvbvG" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="v3OpcJ5zPMOo" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="XYTN1jF2p4O9" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="m9oZDCiVCLgZ" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="nJgNy60q7BXC" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="EXQLgvXvtZP7" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="fmMwlZIiZA30" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="BmbkuckBlwMt" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="HW17JzsUGBq8" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="9buNkkTeqe4n" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="eZ1ZG4EgbVvj" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="IXhr2casXxyk" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="SinOSATPmH6c" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="9N8udEW40H89" client="Z1s60PigJGw5" name=""/>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="ggcgZ9UaCwWF" xmi.id="D8QqHGWzGk0H" parent="lUmu57t5oVVF" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="TKwQxfCuYm3r" client="ggcgZ9UaCwWF" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="cmUAXVzw2M5V" client="ggcgZ9UaCwWF" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="QEEYvsu9CPDr" client="ggcgZ9UaCwWF" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="umh6Btx1UJMl" client="ggcgZ9UaCwWF" name=""/>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="6XvCF0AVyt7M" xmi.id="kUcxnhJwhfa1" parent="Yhu5mh83d9O0" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="cwhugliDieEb" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="1tQiVeHXmPlS" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="pQhMW1VWxyGN" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="SwlPszlaEysl" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="53eSeDo93kTp" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="YHBZzcOAUBzv" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="9lm28jusPp4Q" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="WUCvHEJTVGK9" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="MHrk5BbIZ4ek" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="ZXM8ZyqjHERQ" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="JI1bhtBlCdxD" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="LDUVoRgpJbzW" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="HTFgOkIgmbfU" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="65Pqh4KKV210" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="Ob9r6zZ3HH7R" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="2XdHmkhKz0nV" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="wXPPgMZRJnIL" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="imi1Z0KFydLZ" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="3Pp2k6EPvUx0" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="tCqmemmnAlkM" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="cliJkFeYYjSa" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="jp0HWSq69xEl" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="WRbmKi8ZwtUV" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="KaSHUum1PQGy" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="Qzal7IeyruVp" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="EAy32SqHBcBo" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="nPyFEUpNePyH" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="FGwtdvB5KWSk" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="PnylAOXXcWGb" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="xY2Z2I8zrxaf" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="aPP3KDRoa6aY" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="axGA3rjnjAku" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="vkPRtgh4KJ9f" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="rpJC6QrRcI5c" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="oEOtOvSLxkz3" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="OBNLuMMMaHlG" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="tOHeKSQjQmch" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="KIyk4YQrXGWF" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="4ZFWiMZAhFiY" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="jODOetvKXOpm" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="wyVeY5ZI356m" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="cWrdZyOItjvH" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="5aKEaYxV9wIW" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="c7nm13GpMSYa" client="dETz9cSzCHmb" name=""/>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="G0qEJmlsjgee" xmi.id="9keilJw33xJl" parent="hwD8QbZLtYF3" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="2erxmZTDy2nW" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="DNuggPjPsyP5" xmi.id="8h17hpbmJFRC" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="KKmeaDqfLfed" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="BbBQh0F0fhcx" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="DNuggPjPsyP5" xmi.id="xjiaRKXD9YNA" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="KVcT1zbJJ1wY" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="QIqUyubba0VF" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="9SijQEwh9y63" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="2CtJoxXISAxA" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="Z3CzD79pmAOs" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="YsRwwKYuvNy9" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="yaMtvJ2dDvlG" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="ft0yNO9BpyAB" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="ROzGM9PvYRYp" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="HI7BO2l11b71" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="v63ufAvLCLT8" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="fckRaZQOPcA5" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="jkj8KuD40duH" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="MFcZAVyFqG8N" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="B161FDO2c16x" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="LDDMQkfrfvpb" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="dETz9cSzCHmb" xmi.id="upVZkKA25fQy" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="dYRjErfxnqiD" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="bS1m42ddD6rE" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="wCi8IZMqmy84" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="vx9iRWlWnchx" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="fYXQADMA9Oo2" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="CzAW9ASR740i" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="0YF6aDoACMCj" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="u8detXoM8ZSY" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="x3j5a9bySXip" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="BJKigmlAnp5J" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="AOKvDPEjCzMC" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="ot5WBB0bQRW3" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="Y9oyYIz2qotk" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="gt9vL9i57Tfs" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="Z1s60PigJGw5" xmi.id="bmZiFFbODYXp" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="eJcpp9fJyils" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="FZxcV4Xoi3aF" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="H2dx4BDFP2TG" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="yBogJa4EaNSn" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="Ta33xVp9y298" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="Z2oRGyQki64L" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="X51F93ZK9h9u" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="X0pmSqgvemMy" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="0GUc0oaWqPpZ" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="72cUg7r4EiKi" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="BYWOHp4ixbwu" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="7WNAdihaAjaZ" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="EC4MwcvyPa8v" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="a2WmK7CupzN3" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="dGNTDiUSz0AA" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="7ub2FLMLPFDw" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="bFTySfuN70XM" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="mvs5O40Vm3QV" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="8HGuIeOzcdsJ" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="2PaL0Qe6V7xz" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="OYBte6sW98Vg" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="fIUwyXlM09qR" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="Wo2UvqwKCDZG" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="tHsE5j1H8yBU" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="v9m25yUzfpdz" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="LtXi59EHKlbk" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="qGV804sL7Jon" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="DfFiKf4zBbmW" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="y3n9cXdAGVLL" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="ZDayfHnnKBSi" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="Xm0ryTYfCl4B" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="ZQFqmDpkxuNr" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="k2tiwEXZOlRa" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="tmMPG7E0LrS6" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="mJ659W9wAmcO" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="kgBvA7EBBUM1" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="yEm8h7710fQo" client="dETz9cSzCHmb" name=""/>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="G0qEJmlsjgee" xmi.id="Fg8Gcy7ONs4t" parent="hwD8QbZLtYF3" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="tC2xyduSCPya" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="DNuggPjPsyP5" xmi.id="v107OwhJtuNu" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="R66I0TAxxFSw" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="zjCbRSBauiia" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="DNuggPjPsyP5" xmi.id="ISBC8tlobsix" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="0RabHGWQHsic" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="6J7nA2jGW6do" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="HDulJVXS5kiO" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="PPPtAa06vqWR" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="BLi5BCWMlj6D" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="gp3Qz3DFJVu7" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="6syNLtUR6eSH" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="voLZ0OX3wwC6" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="PeMKaWQK5ZUd" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="8BJJq7D4afc3" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="ZeoAJQBYq41V" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="bS11IY4Taz7e" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="oqJNpOzLuD99" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="AOHWWJ4nZLe6" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="iCzGWdKvxiFF" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="WJECecLdMQWn" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="dETz9cSzCHmb" xmi.id="jDN3brpMTkf7" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="dO368jBHcj7J" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="uYGMqSdhMSCD" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="3NsQq4dc6iUm" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="lsdH9ZGFsghm" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="pdfiJMU7cETL" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="QwKQVlAQJdwm" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="4DtNrp7lDjI4" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="yh041sTOmVly" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="ORgAwP6YyHWK" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="WQfzmgNYoIHC" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="lBxYTCk8TOtx" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="JTeEYOVuXftk" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="IUOo9IYmbGZG" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="CYciLaMM7nyr" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="aFwf0vUnkWVt" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="ZuHtFf9u9fEg" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="LYhVCv9zKV4W" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="cRPqpyseeNIm" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="qJmUg4E0rIBZ" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="pDY77pRvZO69" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="tyiQMma5A9We" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="CQ1DLqskDwmd" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="qD837sfcSciS" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="MzUpHk145pZd" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="Y9qdwPFBER7f" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="Q4cje53qcnuu" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="2bkeOcWgU1eU" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="rkj2dzzqfX1e" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="zs0eN1JFZSfr" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="W7VXXnP9yy74" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="4Ul0Sq2YFtf7" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="sp27GYI1YsxA" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="C2gktdvi5krF" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="MZF3AKcPKqf0" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="AKMSA2S4BBHV" client="dETz9cSzCHmb" name=""/>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="G0qEJmlsjgee" xmi.id="SHSR0EDQa4Od" parent="hwD8QbZLtYF3" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="aNGiacKduyef" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="DNuggPjPsyP5" xmi.id="tIsnEVRf37Si" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="6vWA2wqyEjXS" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="iFORy5BectVq" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="DNuggPjPsyP5" xmi.id="CiwoZRefH745" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="9CNOJQUPrY1C" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="qypEYUuZb0OE" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="wseXs2muSA3w" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="x9ywxZsLnVGS" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="rjMcEa4Mr5wj" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="l9gREq8FJkK6" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="xBZGvsLAG1d1" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="DehHTLEBKK6L" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="6RsQjyjk0z4j" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="KRh5x1a7O0WV" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="n08B1egfENMo" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="TSEUJxX8yIXh" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="UJEQbl5twWpS" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="A2BGUNFKqbxo" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="0LFouCdcsrmV" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="NDzwAXQHiUFk" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="dETz9cSzCHmb" xmi.id="9ENpiaX0FH7A" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="Mq6c5Bk2Cm4r" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="O7wSoQJwqB3g" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="fEXTQb9e7ckD" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="e0Vlp41Nyml5" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="1hjyRU3wCpPT" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="fgpXh6P6vinj" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="LVqGDezIl3Hp" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="8QLhfnBJhF1q" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="5M5mc6a2as6L" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="gv6L3HcI3r7g" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="jm5mdASpObRj" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="aLRTYYXc3QN1" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="ueGx4dwWaeoB" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="3iCOWJkxMeu1" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="Z1s60PigJGw5" xmi.id="Hu3bZxbsz2Qo" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="QijNi9BKqn0g" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="QaYDOZQJY36U" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="IecoiiJzWwHX" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="cQvZ4ZA7Nm5u" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="daYyMdsz0a8G" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="6FfgHGAMzXxR" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="oJRnpOF7jtiB" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="ysSkTTyhNelp" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="NH2kulYOgez8" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="LEorh6Ewx0pP" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="CLv7LiW4VC5v" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="miMMHVkx1ybB" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="Mg4NefWgoaxg" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="9LOWSgkhVbp9" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="Xg41GrAeuISB" client="JzGsbheTUlAY" name=""/>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="lq5kDDwdDmaM" xmi.id="hVuRLgpwoYP5" parent="sLOKTXIZwIMh" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="gD0SlPYwV9Kd" client="lq5kDDwdDmaM" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="4ACXHU8Q5cO7" client="lq5kDDwdDmaM" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="gGLHLpNh0eWn" client="lq5kDDwdDmaM" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="e8aek5PGg3qZ" client="lq5kDDwdDmaM" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="EMDiERtROnYS" client="lq5kDDwdDmaM" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="9YpXKNxCG7aS" client="lq5kDDwdDmaM" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="iJYJDMgwj0mm" client="lq5kDDwdDmaM" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="wY3dYnPWoNzp" client="lq5kDDwdDmaM" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="70cbaReR39gv" client="lq5kDDwdDmaM" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="txew6Ip1MU9e" client="lq5kDDwdDmaM" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="vXoPbAZKMPe0" client="lq5kDDwdDmaM" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="ez4zNjztvTWF" client="lq5kDDwdDmaM" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="kELoUAESzZKH" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="gmnfJ7xfWs52" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="ckKB6kdVgRYD" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="UAr8cOL1ZnaS" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="ColpTmVpadt9" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="ErSoTJxYfwqI" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="eoqax0vTqn89" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="GRF6EOFGmtMx" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="QA0EMgNemToA" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="yPfkqRtuBd57" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="0GRf3HyZlx9W" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="UclDZukqYmlW" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="FHpmk3QjP0ZY" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="rWAEXhml1Cd2" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="tuw4RWkByLLD" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="nnvj8EuIAcUc" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="9sKb7osc91v0" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="WE5gF0e0CRPi" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="wswxOWJPR8wi" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="oOlEUhwlFBee" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="z6vuN3JJ6RVJ" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="rXEwzhFB1o4s" client="dETz9cSzCHmb" name=""/>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="G0qEJmlsjgee" xmi.id="f3jAtABD3XHD" parent="hwD8QbZLtYF3" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="oSGCtSLQmZfX" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="DNuggPjPsyP5" xmi.id="NqJ7Qxdlj2cd" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="Jww3xWeeRe9R" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="QNM0cXVKKfUl" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="DNuggPjPsyP5" xmi.id="ouF6XhrVkVyM" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="ZVVHzTd3JWdf" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="DXA3PLpkAfMT" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="LxqTaBwfnxN4" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="tTDmgQW7TOEV" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="PzpsL3NgUDvy" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="Wo3kUyrlec7I" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="4ujgWqyPzIU3" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="53lL8V71DHu9" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="bIBma5vVuXCf" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="HFFhSqqblrok" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="RRfAISuLbEqF" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="0p72EAb1X4KM" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="r7KOCciu1n4f" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="nJhUrogfZLYy" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="OM0viXuFG75U" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="HdtNINAUl9uC" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="dETz9cSzCHmb" xmi.id="Kiq3rkE6Wqm4" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="Q0TwrFyrHZ7Q" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="ftsXDdgP0Jq5" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="rOCsf0xMlRSU" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="oS0eY43OVcqC" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="G5ljfbtWgb1C" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="XORcEisG8pKR" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="HWvOJFpvErJx" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="1VrQWmLcsJAW" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="9ep0xxWrJvsn" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="bRsHmlv4APeU" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="AtlLGPnzQBHO" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="P7LFoEB0eq9T" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="3mwib5B25cwh" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="bGuWIo1QtYcZ" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="Z1s60PigJGw5" xmi.id="MHOEpznoTJs8" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="JO2lhutTnAg5" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="wDNF8fbZxSqt" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="OCtLeiCINycD" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="j5A1WRm03rgL" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="oCEp4sBdaB5A" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="8VzQEUVPTVMM" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="XEV0jqMrYEUZ" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="gzQqpbD6qrH7" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="88lw003GVw8m" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="SmmFja3eN728" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="u1UF6WLNgp6Y" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="FmoWGKLxDFRH" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="FjzRyQipMbda" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="TgGEEOfje13r" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="orlStmHf9axo" client="JzGsbheTUlAY" name=""/>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="ggcgZ9UaCwWF" xmi.id="3iyzIeyU2hzG" parent="lUmu57t5oVVF" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="Tjh6u0yPUlBU" client="ggcgZ9UaCwWF" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="QSmsDwNb5tHC" client="ggcgZ9UaCwWF" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="ppH79zrC8hCJ" client="ggcgZ9UaCwWF" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="nbcvImCC5cuj" client="ggcgZ9UaCwWF" name=""/>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="6XvCF0AVyt7M" xmi.id="S5EALnAOaNVx" parent="Yhu5mh83d9O0" name=""/>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="iBZSGKLq62FS" xmi.id="pGdomGmZwFxI" parent="sLOKTXIZwIMh" name=""/>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="PVxsSYZCgFsg" name="RecurrentNetwork"/>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="JsQorP4xUzr8" xmi.id="oelkd25uuUhj" parent="PVxsSYZCgFsg" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="uozNaDKlZ90r" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="tXCTeAKwBK1j" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="cR3DY73SlFwj" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="CL5vazdHAy97" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="7yN20n28S1TZ" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="Bvgbu89gey50" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="CBGNl0L0n9qv" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="l6oWGcS9qfe7" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="gMiec4rjuTrW" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="Z5fTYX0RKqoq" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="ROrllqTa86wK" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="ejwkps3xDyYS" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="z7bSEnHxatRy" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="IDyq7NoBA0ul" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="mYSrNW56uR3T" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="8LY0maTtEO0h" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="6WuHH8mm8gNl" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="jGkpw7YFs8A9" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="HsIyWkuFrIwQ" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="JekAxeYQvL3y" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="4a4VDTsXQeji" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="Q79qjsWAlRmX" client="dETz9cSzCHmb" name=""/>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="G0qEJmlsjgee" xmi.id="LRKtSqJAdYIq" parent="hwD8QbZLtYF3" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="vRWYMyRNsIl6" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="DNuggPjPsyP5" xmi.id="qu3iAnm14S9c" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="YEMbfVD38gd9" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="eXKMIIiXT6vJ" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="DNuggPjPsyP5" xmi.id="2owWurpxI0is" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="GoLYm1PfjJvy" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="o08J6rYDyS2N" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="MEuJeugwiTjz" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="SrblCHgEHxqp" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="cd1tarjS2PUR" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="e9Q8xaOXWsmm" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="9ZadRNPiA465" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="R97Rpqrpzz0D" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="WujVrhi2tWW9" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="RBFNK5TSXDkd" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="dS58fnmeh3KV" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="PiQHRPisv0Wr" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="HRJCRp3vx9jk" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="I17M1jUJo3cm" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="nc9bdlLw5LvR" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="QkGRes4Iqdy9" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="dETz9cSzCHmb" xmi.id="jxvZZugg0pGq" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="UDvU0BJaZFXe" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="VgNgEqsBLcLw" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="aYot99pnEQz3" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="hQqH2GKP7NDh" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="6LbDgounSl7M" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="okVKGYaJreIo" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="2n4rPLfKeork" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="lmahEYmVWkJv" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="xMoR67M2yjvR" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="cm0lf6zdWFXd" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="E6MkJtLhlUQq" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="q7S8rrBsNe04" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="3z9Rd7TnuPar" client="Z1s60PigJGw5" name=""/>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="VNPkKjaMVEIi" xmi.id="5rugU0ra5vQ5" parent="Yhu5mh83d9O0" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="rPA9HtkcxjFH" client="VNPkKjaMVEIi" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="kIHhzWwjDkNi" client="VNPkKjaMVEIi" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="YACGKUTVW89P" client="VNPkKjaMVEIi" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="uMVQUcnp1nc0" client="VNPkKjaMVEIi" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="GdX2IjGWkKmW" client="VNPkKjaMVEIi" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="JGM1Y9XXAv5V" client="VNPkKjaMVEIi" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="ExOD84wEmbr5" client="VNPkKjaMVEIi" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="L2s5dhAqyrv3" client="VNPkKjaMVEIi" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="LILQsSvrvA2B" client="VNPkKjaMVEIi" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="ymcrwf0noXmy" client="VNPkKjaMVEIi" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="xdPp32o4sF2C" client="VNPkKjaMVEIi" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="mVielioLSG1X" client="VNPkKjaMVEIi" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="DuAqlvfwOquU" client="VNPkKjaMVEIi" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="ivy4lqYjWpCf" client="VNPkKjaMVEIi" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="fhBtqKNO4HFb" client="VNPkKjaMVEIi" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="hwZlCmNbvC2q" client="VNPkKjaMVEIi" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="jNXq2UAQn0jF" client="VNPkKjaMVEIi" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="gKcRJLfCCeGg" client="VNPkKjaMVEIi" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="HmomcLtIXJ7v" client="VNPkKjaMVEIi" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="vQfSimLatIMf" client="VNPkKjaMVEIi" name=""/>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="lUmu57t5oVVF" name="ContinuousPerceptron"/>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="ggcgZ9UaCwWF" xmi.id="obIbj3xtZ3ri" parent="lUmu57t5oVVF" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="ei1dZSi4CXaW" client="ggcgZ9UaCwWF" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="fXZr49OVq0Mv" client="ggcgZ9UaCwWF" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="pem1Id0T1moE" client="ggcgZ9UaCwWF" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="HaJGK6SxHTCE" client="ggcgZ9UaCwWF" name=""/>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="6XvCF0AVyt7M" xmi.id="Nbl5UC7P34cN" parent="Yhu5mh83d9O0" name=""/>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="vDoENs1imyWU" name="RecurrentLayer"/>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="453xLErUIRsu" xmi.id="1rhiLKmONjhZ" parent="vDoENs1imyWU" name=""/>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Cd3ZMk7tuypu" name="DistributedNeuralLayer"/>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="453xLErUIRsu" xmi.id="i9rcF1uBBstK" parent="Cd3ZMk7tuypu" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="Wjjh3UmMLgjg" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="7SzQ7j7IDZmG" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="j3tT8TCo8gm0" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="kXxqDjpFlguB" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="dWdISGiyy7Dl" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="DkY9pjvA6cqL" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="P4qQKBZEsRHW" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="iJ4akJ76BR3C" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="dvdf2Ogeq4lq" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="ssMiu7W2q0db" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="7wRRHCXZHHf2" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="oxw5EZ5Yzclv" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="yn4FLNQtbUGb" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="WbB55PgQiFaq" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="EkLrjZ4oEReW" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="OlQbA35QIe2h" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="Gl8DQbSD8yvD" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="cJPiFIuBSo2G" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="bDqLR3TiXpWB" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="WeD1TjAP7zkK" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="C2ygJSbG8tJl" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="vbO3UhpRMVaH" client="dETz9cSzCHmb" name=""/>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="G0qEJmlsjgee" xmi.id="qsKbNOIt0b9U" parent="hwD8QbZLtYF3" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="225OIiMAUurs" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="DNuggPjPsyP5" xmi.id="MUoqOgi441xw" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="ghziguc57mVn" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="qJJiGoG9ts5k" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="DNuggPjPsyP5" xmi.id="eZAVQFGN3Hr5" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="55y8NnBxuTUU" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="YKURW7hWwsPC" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="bDaW5xibfZaT" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="HttdjYXoFXQO" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="4mQHHpgOunEG" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="muKT0cW4XC6u" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="ylQUyUM3Cimv" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="aJ5KFF3dkmDw" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="bMlL7yFLh4TL" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="BPXvba7RyJAj" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="aTiYmtHasKGU" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="wyP8ZKXmUsEl" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="mewHUA04ua2d" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="402ajEA7Ti8B" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="U5OwoW7ApknF" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="hLOaAJHUH6ez" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="dETz9cSzCHmb" xmi.id="6uEN1rKit3EA" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="4EMvHY5mQZvg" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="ANfMLGETNUYy" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="IdPg6xederQH" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="6Qp6hWyFaxSi" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="Rx82tYiC6pTC" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="GudSY3XVjbjg" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="Mhr4JakUcUxw" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="C8e6YcSrEYzB" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="tFf7ndJc3mQn" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="Xu4iG5hDNGDO" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="UJ1pYCDlBEMI" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="WmM2yjuoSgAX" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="P7RpnbKsqRcD" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="DwjKYrDiJvkB" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="Z1s60PigJGw5" xmi.id="GGuZ9cjPYeXW" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="NbztFUPZYvBL" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="bF4WCpgz5xsz" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="DUgISZFxWh88" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="4JKwCoXRdPEu" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="fC7IbJCh2Xwu" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="I3y0rhlvsaSe" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="wX0n7SRwahwL" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="lWB24JpplQoR" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="2ptlDiAxWBaL" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="7JkgPfUEjEWy" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="ERAvdft8nf6D" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="ogKU8FFe1yBs" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="SA5S6EI25Ky5" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="kXVWexuOIkRs" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="4N0M7RDcL4zl" client="JzGsbheTUlAY" name=""/>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="sLOKTXIZwIMh" name="NeuralNetwork"/>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="hhb49XgyNuc9" xmi.id="AgINkiUqJv5g" parent="sLOKTXIZwIMh" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="iuVry7D456B2" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="G9ZLFiNOhBTK" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="TgoWVuyChDmQ" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="iwoQ9Yq22yJZ" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="euImYmLFKGW8" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="w9tGPPOSn1A7" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="RNKGjYXIeuzv" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="N8q12nu66wWc" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="XzJsND6Eahvo" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="ZKT7zMwqTI1i" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="boBSEXWPmMgP" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="oMkaiRxiRcCd" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="aDAdbuYioSlF" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="Fet16cFAAleX" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="7I07U4Edcn2K" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="Ua06N0QwZ1eN" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="SsAlREXZAkap" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="kI2u2chBHNQL" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="p6kmMgHD406H" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="RlIWjPn08tId" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="oINDNLMp5WPk" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="wh71DWk88QxM" client="dETz9cSzCHmb" name=""/>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="G0qEJmlsjgee" xmi.id="vz7Jf3KoPfdC" parent="hwD8QbZLtYF3" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="VkhT7ZynZKem" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="DNuggPjPsyP5" xmi.id="k8VJQ93SAuLV" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="qA214NUBxhcw" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="isi6BtXrV9Tn" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="DNuggPjPsyP5" xmi.id="wYUSfvDysPXL" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="Ej468ZQIs1DC" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="69zOBfqlkWAn" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="sUCbyMMP7Cya" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="dQJCctvwgwXf" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="pnNThs7EScuH" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="xMjvN8yrBf88" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="rvl0au6pi0Nc" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="FVuhMik7abZS" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="q53QfcsRCGMH" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="J27C9yUL5R8M" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="iXinxo8ffYkH" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="KtO7Rj5UkBEF" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="OOV6ZjL7Rr0v" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="mlaOt3tina7C" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="ibBU9IegqcaI" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="v2wiLFgtBIJj" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="dETz9cSzCHmb" xmi.id="unx33HkYFSaF" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="yyUBO4Q2dCyI" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="HoJgTUg5Tp7o" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="mbhFQm1Cyu82" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="8VR5fCxCx3u0" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="cUBZY5XaKJBa" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="KHN5BQMUD7g4" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="aMdoSHqrOg7f" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="Tko3qJIfZPS1" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="aoD9DfBk2Bjw" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="4nHGxSdlmiaH" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="5hxrPX6vtqyj" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="GmICdhpxTIZt" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="o3vGJT96qX3x" client="Z1s60PigJGw5" name=""/>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Yhu5mh83d9O0" name="NeuralLayer"/>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="VNPkKjaMVEIi" xmi.id="2mbCiF9Gk79K" parent="Yhu5mh83d9O0" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="hj9GQdWRDhUT" client="VNPkKjaMVEIi" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="NdgZKA2Dy5Fz" client="VNPkKjaMVEIi" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="c6WyXOU5vvT8" client="VNPkKjaMVEIi" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="B6W52zDV8wAb" client="VNPkKjaMVEIi" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="OjwQKISur0YJ" client="VNPkKjaMVEIi" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="GJe5HDPwzxZZ" client="VNPkKjaMVEIi" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="QBwU6Oakq8pE" client="VNPkKjaMVEIi" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="LBn9KcNrIF1T" client="VNPkKjaMVEIi" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="on8XdsrTPozy" client="VNPkKjaMVEIi" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="aDgx2et4CyGO" client="VNPkKjaMVEIi" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="cbnkVpzGT3ap" client="VNPkKjaMVEIi" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="W64zAdmghWsz" client="VNPkKjaMVEIi" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="GZrXqyAEdpDO" client="VNPkKjaMVEIi" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="YuqBh3YLaWwB" client="VNPkKjaMVEIi" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="6O5PUcesr52h" client="VNPkKjaMVEIi" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="12rr5tYIkZVD" client="VNPkKjaMVEIi" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="bizcJvjlN7wO" client="VNPkKjaMVEIi" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="3WTQbPoZjKko" client="VNPkKjaMVEIi" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="tcFTE0bZwuJ2" client="VNPkKjaMVEIi" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="uyDrqWrpEzPs" client="VNPkKjaMVEIi" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="OP32rtUnWlxB" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="lBlHujQMgrdR" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="0CUh1czuSoye" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="zhWSVS4iXsAD" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="EYE78fUblBmf" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="EGexPRbJCMvo" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="l8RrOCN3HZdu" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="HCgYkJRGa9y7" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="wRjBxhfbJ9T0" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="CAZTK0Ul0ThD" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="P08J5dSy15ov" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="cODdR1Y2tmVn" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="yMzzNdFgL7JA" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="VLOoSfxM5Cun" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="xRKIZeFPANU1" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="xMt7jN6YKJxD" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="MrEj73CpfCYL" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="2g9fsfzhmZnE" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="S2gj5rTODi4h" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="5jAJPE0p0dIV" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="RiLDiyMvdI7s" client="dETz9cSzCHmb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="7JzxVcLldBzu" xmi.id="KNvvg2lDnImk" client="dETz9cSzCHmb" name=""/>
      <UML:Package visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="QFWQXDQLlPLZ" name="NeuralNET">
       <UML:Namespace.ownedElement>
        <UML:Class visibility="public" isSpecification="false" namespace="QFWQXDQLlPLZ" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="lq5kDDwdDmaM" name="ElmanNetwork">
         <UML:GeneralizableElement.generalization>
          <UML:Generalization xmi.idref="hVuRLgpwoYP5"/>
         </UML:GeneralizableElement.generalization>
         <UML:Classifier.feature>
          <UML:Attribute visibility="private" isSpecification="false" xmi.id="jTjo55ulSb3S" type="DOICD6ntJvUO" name="hiddenCopy"/>
          <UML:Attribute visibility="private" isSpecification="false" xmi.id="Yn0EooloUsDg" type="DOICD6ntJvUO" name="tmpHiddenCopy"/>
          <UML:Attribute visibility="private" isSpecification="false" xmi.id="K6X5GOdjkjks" type="ej9ph9SFjM5c" name="hiddenSize"/>
          <UML:Operation stereotype="constructor" visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="acfZ31GZpGod" name="ElmanNetwork">
           <UML:BehavioralFeature.parameter>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="2XPVNaBihilx" type="ej9ph9SFjM5c" value="" name="layerCount"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="4Ogo7OffyIE2" type="ej9ph9SFjM5c" value="" name="sizes[]"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="JSb6hNijt7EG" type="ej9ph9SFjM5c" value="" name="dimension"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="iOyP4jK970xC" type="4LMl5yd8a4h3" value="" name="alpha"/>
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="MarKs3KAWuGD" name="updateCopy"/>
          <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Fyu647NkVJ7Z" name="resetCopy"/>
          <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="1Ri8PeJlEA35" name="train">
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="seWFrqSjBCV5" type="4LMl5yd8a4h3"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="Oj0epY4B3kEA" type="DOICD6ntJvUO" value="" name="input"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="lpDXBDNJWcr5" type="6NtXQnVdx14t" value="" name="target"/>
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="oQuzMLh88udJ" name="classify">
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="yrLtIp6g58EB" type="DOICD6ntJvUO"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="SHBnjIRLb8T0" type="DOICD6ntJvUO" value="" name="input"/>
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
         </UML:Classifier.feature>
        </UML:Class>
        <UML:Class visibility="public" isSpecification="false" namespace="QFWQXDQLlPLZ" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="iBZSGKLq62FS" name="RecurrentNetwork">
         <UML:GeneralizableElement.generalization>
          <UML:Generalization xmi.idref="AFvo9pCr0jIE"/>
          <UML:Generalization xmi.idref="pGdomGmZwFxI"/>
          <UML:Generalization xmi.idref="oITwvyB1NLf5"/>
         </UML:GeneralizableElement.generalization>
         <UML:Classifier.feature>
          <UML:Attribute visibility="private" isSpecification="false" xmi.id="kUBkDTxE51Oj" type="ej9ph9SFjM5c" name="recurrentLayerIndex"/>
          <UML:Operation stereotype="constructor" visibility="protected" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="LvDxr01F5ecQ" name="RecurrentNetwork">
           <UML:BehavioralFeature.parameter>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="bevqZDAJfM2s" type="ej9ph9SFjM5c" value="" name="recurrentLayerIndex"/>
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation stereotype="constructor" visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="pz5uyTbHMnDD" name="RecurrentNetwork">
           <UML:BehavioralFeature.parameter>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="nETqq3ERg9ID" type="ej9ph9SFjM5c" value="" name="layerCount"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="LQX0mXraWwSS" type="ej9ph9SFjM5c" value="" name="sizes[]"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="N4kjpxvc9MQz" type="ej9ph9SFjM5c" value="" name="dimension"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="NeQ3lgH67m5r" type="4LMl5yd8a4h3" value="" name="alpha"/>
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="JwRnsuFFwzwl" name="update"/>
          <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="urL3Bl0ZPRc8" name="reset"/>
         </UML:Classifier.feature>
        </UML:Class>
        <UML:Class visibility="public" isSpecification="false" namespace="QFWQXDQLlPLZ" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="JsQorP4xUzr8" name="DistributedRecurrentNetwork">
         <UML:GeneralizableElement.generalization>
          <UML:Generalization xmi.idref="oelkd25uuUhj"/>
          <UML:Generalization xmi.idref="CWvIDkiPihPi"/>
         </UML:GeneralizableElement.generalization>
         <UML:Classifier.feature>
          <UML:Operation stereotype="constructor" visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="3McxqJfi4L1m" name="DistributedRecurrentNetwork">
           <UML:BehavioralFeature.parameter>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="pTsqsrHnOvR9" type="ej9ph9SFjM5c" value="" name="layerCount"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="OgkXh1FkNrhC" type="ej9ph9SFjM5c" value="" name="sizes[]"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="9KuBetyTMqJE" type="ej9ph9SFjM5c" value="" name="firstLayerW"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="fa02UPBs5vNm" type="ej9ph9SFjM5c" value="" name="firstLayerH"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="ucWHRCTaWLmA" type="ej9ph9SFjM5c" value="" name="dimensionW"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="FidZYuoBVmDx" type="ej9ph9SFjM5c" value="" name="dimensionH"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="BOpGHC3BoXTF" type="4LMl5yd8a4h3" value="" name="alpha"/>
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
         </UML:Classifier.feature>
        </UML:Class>
        <UML:Class visibility="public" isSpecification="false" namespace="QFWQXDQLlPLZ" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ggcgZ9UaCwWF" name="RecurrentPerceptron">
         <UML:GeneralizableElement.generalization>
          <UML:Generalization xmi.idref="tPtq1iRhM3Mv"/>
          <UML:Generalization xmi.idref="hpwlYRgdv6Og"/>
          <UML:Generalization xmi.idref="D8QqHGWzGk0H"/>
          <UML:Generalization xmi.idref="3iyzIeyU2hzG"/>
          <UML:Generalization xmi.idref="obIbj3xtZ3ri"/>
          <UML:Generalization xmi.idref="hozEdZiVGwSl"/>
          <UML:Generalization xmi.idref="2r3GnV1fSDef"/>
         </UML:GeneralizableElement.generalization>
         <UML:Classifier.feature>
          <UML:Attribute visibility="private" isSpecification="false" xmi.id="4sCRvWK5KoP5" type="4LMl5yd8a4h3" name="lastOutput"/>
          <UML:Attribute visibility="private" isSpecification="false" xmi.id="oxaGHwliELwx" type="4LMl5yd8a4h3" name="tmpLastOutput"/>
          <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ROXwkyQpqaGl" name="prepare">
           <UML:BehavioralFeature.parameter>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="SXSJMafEpzWk" type="lf13peG8Sm4e" value="" name="input"/>
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation stereotype="constructor" visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="9yLeOPx2gGR0" name="RecurrentPerceptron">
           <UML:BehavioralFeature.parameter>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="wvVWgH09pRQB" type="lu1WzQU3EpoM" value="" name="dimension"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="z6No3tXDrqpE" type="4LMl5yd8a4h3" value="" name="alpha"/>
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="FkGu1fsxbNRH" name="getLastOutput">
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="dSOQtpbqtwcu" type="4LMl5yd8a4h3"/>
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="p97e0usDf85e" name="update"/>
          <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="oyZNJ0cwQ1MH" name="reset"/>
          <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ov7hrkZerhJp" name="classify">
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="9vFqyoHPv0IV" type="4LMl5yd8a4h3"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="nzT5MLPMIXxM" type="DOICD6ntJvUO" value="" name="input"/>
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
         </UML:Classifier.feature>
        </UML:Class>
        <UML:Class visibility="public" isSpecification="false" namespace="QFWQXDQLlPLZ" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="6XvCF0AVyt7M" name="RecurrentLayer">
         <UML:GeneralizableElement.generalization>
          <UML:Generalization xmi.idref="2kJPCJfGoYR1"/>
          <UML:Generalization xmi.idref="kUcxnhJwhfa1"/>
          <UML:Generalization xmi.idref="S5EALnAOaNVx"/>
          <UML:Generalization xmi.idref="Nbl5UC7P34cN"/>
          <UML:Generalization xmi.idref="JHz8WpPtGThJ"/>
         </UML:GeneralizableElement.generalization>
         <UML:Classifier.feature>
          <UML:Operation stereotype="constructor" visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="bJcPs3QPdvu5" name="RecurrentLayer">
           <UML:BehavioralFeature.parameter>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="Yk4qR8uqG0sX" type="ej9ph9SFjM5c" value="" name="size"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="StreDX0opaBh" type="ej9ph9SFjM5c" value="" name="dimension"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="cb4FXyI3iLt8" type="4LMl5yd8a4h3" value="" name="alpha"/>
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="TlyklrFBk6nv" name="update"/>
          <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="clhRMs6yTABy" name="reset"/>
         </UML:Classifier.feature>
        </UML:Class>
        <UML:Class visibility="public" isSpecification="false" namespace="QFWQXDQLlPLZ" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="453xLErUIRsu" name="DistributedRecurrentLayer">
         <UML:GeneralizableElement.generalization>
          <UML:Generalization xmi.idref="1rhiLKmONjhZ"/>
          <UML:Generalization xmi.idref="i9rcF1uBBstK"/>
          <UML:Generalization xmi.idref="acvBnoqiOoUQ"/>
          <UML:Generalization xmi.idref="Qy4nmWDf8dXH"/>
          <UML:Generalization xmi.idref="cR05h9jHGnbP"/>
          <UML:Generalization xmi.idref="Rrx2GFdIJsTG"/>
         </UML:GeneralizableElement.generalization>
         <UML:Classifier.feature>
          <UML:Operation stereotype="constructor" visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="frTpjN73PZiI" name="DistributedRecurrentLayer">
           <UML:BehavioralFeature.parameter>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="t1MrMz9RjIMP" type="ej9ph9SFjM5c" value="" name="neuronsPerZone"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="FBmMplgTc9GJ" type="ej9ph9SFjM5c" value="" name="w"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="UNKrw2Ap3WeP" type="ej9ph9SFjM5c" value="" name="h"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="VloC2AbHJNd7" type="ej9ph9SFjM5c" value="" name="dimensionW"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="8HaiPqztBJl7" type="ej9ph9SFjM5c" value="" name="dimensionH"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="LtuNNZmqIZ0K" type="4LMl5yd8a4h3" value="" name="alpha"/>
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
         </UML:Classifier.feature>
        </UML:Class>
        <UML:Class visibility="public" isSpecification="false" namespace="QFWQXDQLlPLZ" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="JzGsbheTUlAY" name="NeuralNetwork">
         <UML:Classifier.feature>
          <UML:Attribute visibility="protected" isSpecification="false" xmi.id="1iL4Bb0k6QtJ" type="288UtG3EFnzS" name="layers"/>
          <UML:Operation stereotype="constructor" visibility="protected" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="aUYxK74e5KUg" name="NeuralNetwork"/>
          <UML:Operation stereotype="constructor" visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="91VUan5QXuPd" name="NeuralNetwork">
           <UML:BehavioralFeature.parameter>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="knsPLZWLFpNQ" type="ej9ph9SFjM5c" value="" name="layerCount"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="PN8Vl1nu3GNb" type="ej9ph9SFjM5c" value="" name="sizes[]"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="3SzYMOC4A2TV" type="ej9ph9SFjM5c" value="" name="dimension"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="bxoqlBEAXNdI" type="4LMl5yd8a4h3" value="" name="alpha"/>
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="MQDNgYyi0wEK" name="train">
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="u2Tr1xQStys7" type="4LMl5yd8a4h3"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="WLwWEmwOL5Hr" type="DOICD6ntJvUO" value="" name="input"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="JgXGoxpE1YEb" type="6NtXQnVdx14t" value="" name="target"/>
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="C6q4VcEmJj15" name="classify">
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="Hw0Z3UMK5VHC" type="DOICD6ntJvUO"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="pePBpR0o4Vm6" type="DOICD6ntJvUO" value="" name="input"/>
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ApCLf8Ue7DsO" name="classify1">
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="0JoW9PRYE0Xs" type="4LMl5yd8a4h3"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="V5FcEzwyEb87" type="DOICD6ntJvUO" value="" name="input"/>
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="DcHrkXfDasno" name="discreteClassify">
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="L9UlrNyXgHfZ" type="6NtXQnVdx14t"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="HV8AujEahkFM" type="DOICD6ntJvUO" value="" name="input"/>
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="l5kiProsIUxD" name="saveWeights">
           <UML:BehavioralFeature.parameter>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="pNRITwHo5lXv" type="SnAfcwzpWWmA" value="" name="fname"/>
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="6USnl5MW84DX" name="loadWeights">
           <UML:BehavioralFeature.parameter>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="tzOBTLMHhnZA" type="SnAfcwzpWWmA" value="" name="fname"/>
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
         </UML:Classifier.feature>
        </UML:Class>
        <UML:Class visibility="public" isSpecification="false" namespace="QFWQXDQLlPLZ" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="hhb49XgyNuc9" name="DistributedNeuralNetwork">
         <UML:GeneralizableElement.generalization>
          <UML:Generalization xmi.idref="AgINkiUqJv5g"/>
          <UML:Generalization xmi.idref="NoOk73ni8hrQ"/>
          <UML:Generalization xmi.idref="d5CGQdjTeav5"/>
         </UML:GeneralizableElement.generalization>
         <UML:Classifier.feature>
          <UML:Operation stereotype="constructor" visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="QfohauLudg73" name="DistributedNeuralNetwork">
           <UML:BehavioralFeature.parameter>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="uvAoLJrG8oZp" type="ej9ph9SFjM5c" value="" name="layerCount"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="Qyffipd7USo4" type="ej9ph9SFjM5c" value="" name="sizes[]"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="KAxxq4yix8XH" type="ej9ph9SFjM5c" value="" name="firstLayerW"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="RMXZB4NZ32Cj" type="ej9ph9SFjM5c" value="" name="firstLayerH"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="rqqKIdMcnJXb" type="ej9ph9SFjM5c" value="" name="dimensionW"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="LWJHeoY4B3bM" type="ej9ph9SFjM5c" value="" name="dimensionH"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="6yv9y7qovf8D" type="4LMl5yd8a4h3" value="" name="alpha"/>
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
         </UML:Classifier.feature>
        </UML:Class>
        <UML:Class visibility="public" isSpecification="false" namespace="QFWQXDQLlPLZ" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Z1s60PigJGw5" name="NeuralLayer">
         <UML:Classifier.feature>
          <UML:Attribute visibility="protected" isSpecification="false" xmi.id="gjZ2Zj4NBFTa" type="Q68cBM6Z9X6c" name="neurons"/>
          <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="yUz9P0Yy1R22" name="getWeights">
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="q3dTuHvtPEhR" type="oki70cAhXjbn"/>
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="xkMPGRqtag4L" name="setWeights">
           <UML:BehavioralFeature.parameter>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="URshWpt5aQD0" type="oki70cAhXjbn" value="" name=""/>
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Di2ZTfSQIaTi" name="getDelta">
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="glA8rX73saZA" type="DOICD6ntJvUO"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="KrWZsDc3aa4Z" type="DOICD6ntJvUO" value="" name="output"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="yG35VFiu1tqE" type="6NtXQnVdx14t" value="" name="target"/>
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="avgozR9abjTq" name="trainDelta">
           <UML:BehavioralFeature.parameter>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="wQwLOR0cqSxq" type="DOICD6ntJvUO" value="" name="input"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="N73PDPiuxBga" type="DOICD6ntJvUO" value="" name="delta"/>
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="AuibAFxPwm4a" name="derivativeFunction">
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="0MQw8SUU52y8" type="4LMl5yd8a4h3"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="OdYU56AQECqP" type="4LMl5yd8a4h3" value="" name="x"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="bWJXhx5qsnR0" type="7jtkNnFIgmcs" value="" name="i"/>
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="78ZJKPiutzRb" name="setMomentum">
           <UML:BehavioralFeature.parameter>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="wWPoHopIADCG" type="4LMl5yd8a4h3" value="" name=""/>
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="fhkkhgtomQ77" name="setW0">
           <UML:BehavioralFeature.parameter>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="pnzimQHjugV9" type="4LMl5yd8a4h3" value="" name=""/>
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation stereotype="constructor" visibility="protected" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="SIRcVcs8Hary" name="NeuralLayer"/>
          <UML:Operation visibility="protected" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Gil38q8xe7dQ" name="getError">
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="1AALiYVYgjK5" type="4LMl5yd8a4h3"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="h87qwI26FVHj" type="DOICD6ntJvUO" value="" name=""/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="NnTXT7a2C8cn" type="6NtXQnVdx14t" value="" name=""/>
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation stereotype="constructor" visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="8jnufKPWMh8v" name="NeuralLayer">
           <UML:BehavioralFeature.parameter>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="H36j0ZBeGkep" type="ej9ph9SFjM5c" value="" name="size"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="ThBcweB2Lyv0" type="ej9ph9SFjM5c" value="" name="dimension"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="IKUd1cYGedzc" type="4LMl5yd8a4h3" value="" name="alpha"/>
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="A8HPqtCIaNuU" name="train">
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="V8hIwUrjh8xh" type="4LMl5yd8a4h3"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="3CBlK8TLhPRB" type="DOICD6ntJvUO" value="" name=""/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="RdeTvnhwF8uB" type="6NtXQnVdx14t" value="" name=""/>
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="H4Y0qgWHHAkA" name="classify">
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="x3ztAgeSqp8q" type="DOICD6ntJvUO"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="aKLbeVweVsMp" type="DOICD6ntJvUO" value="" name=""/>
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="1q9BFEAhyElS" name="discreteClassify">
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="kCY2wFY9MqZ7" type="6NtXQnVdx14t"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="Yo8RlmwEz860" type="DOICD6ntJvUO" value="" name=""/>
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
         </UML:Classifier.feature>
         <UML:Namespace.ownedElement>
          <UML:Class visibility="public" isSpecification="false" namespace="Z1s60PigJGw5" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="juZuG1iCnJFG" name="NeuralNetwork"/>
         </UML:Namespace.ownedElement>
        </UML:Class>
        <UML:Class visibility="public" isSpecification="false" namespace="QFWQXDQLlPLZ" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="VNPkKjaMVEIi" name="DistributedNeuralLayer">
         <UML:GeneralizableElement.generalization>
          <UML:Generalization xmi.idref="5rugU0ra5vQ5"/>
          <UML:Generalization xmi.idref="2mbCiF9Gk79K"/>
          <UML:Generalization xmi.idref="uqr8IWRzdDve"/>
         </UML:GeneralizableElement.generalization>
         <UML:Classifier.feature>
          <UML:Attribute visibility="protected" isSpecification="false" xmi.id="SbjXfoPfaQRu" type="ej9ph9SFjM5c" name="neuronsPerZone"/>
          <UML:Attribute visibility="protected" isSpecification="false" xmi.id="yYcNlz8I3gHE" type="ej9ph9SFjM5c" name="width"/>
          <UML:Attribute visibility="protected" isSpecification="false" xmi.id="CzzDRnTrNCN0" type="ej9ph9SFjM5c" name="height"/>
          <UML:Attribute visibility="protected" isSpecification="false" xmi.id="0mgYA5R8c3VN" type="ej9ph9SFjM5c" name="dimensionWidth"/>
          <UML:Attribute visibility="protected" isSpecification="false" xmi.id="2cg5GvISsHdJ" type="ej9ph9SFjM5c" name="dimensionHeight"/>
          <UML:Attribute visibility="protected" isSpecification="false" xmi.id="368QHVOHF4qQ" type="ej9ph9SFjM5c" name="inputWidth"/>
          <UML:Attribute visibility="protected" isSpecification="false" xmi.id="8HWkK07KclOq" type="ej9ph9SFjM5c" name="inputHeight"/>
          <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="EtOKmoNTD4PD" name="prepareInput">
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="G15GohGtYKXp" type="DOICD6ntJvUO"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="Frao2H5mIrib" type="ej9ph9SFjM5c" value="" name="x"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="L6zfK3TYupsg" type="ej9ph9SFjM5c" value="" name="y"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="6FAJzVzNApfC" type="bG9pIY2XNcKQ" value="" name="input"/>
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="jg1UgIMEnqSj" name="trainDelta">
           <UML:BehavioralFeature.parameter>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="v8x510YsO7J5" type="DOICD6ntJvUO" value="" name="input"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="NovMdqPlFRE6" type="DOICD6ntJvUO" value="" name="delta"/>
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation stereotype="constructor" visibility="protected" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="V9OBKVX2TnGk" name="DistributedNeuralLayer">
           <UML:BehavioralFeature.parameter>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="C6IdoyhCkaWN" type="ej9ph9SFjM5c" value="" name="neuronsPerZone"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="Pt6eKKkqR8zj" type="ej9ph9SFjM5c" value="" name="w"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="bUm3H0nT566t" type="ej9ph9SFjM5c" value="" name="h"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="2m3mKX9jRFNl" type="ej9ph9SFjM5c" value="" name="dimensionW"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="Z5ZyBWil0SoI" type="ej9ph9SFjM5c" value="" name="dimensionH"/>
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation stereotype="constructor" visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="egGWvunyywMF" name="DistributedNeuralLayer">
           <UML:BehavioralFeature.parameter>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="PlVfpL5vaZfs" type="ej9ph9SFjM5c" value="" name="neuronsPerZone"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="ZlA9WYzBCGf8" type="ej9ph9SFjM5c" value="" name="w"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="8T46PRKoCpRz" type="ej9ph9SFjM5c" value="" name="h"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="8Uvg4aYdLglq" type="ej9ph9SFjM5c" value="" name="dimensionW"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="DkzPyeV47a9U" type="ej9ph9SFjM5c" value="" name="dimensionH"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="1THBGiAOB34F" type="4LMl5yd8a4h3" value="" name="alpha"/>
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="caqvEbjRKipG" name="train">
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="BSA08AnoWT5c" type="4LMl5yd8a4h3"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="y7pkebjkcU1g" type="DOICD6ntJvUO" value="" name=""/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="LJwnaxILfqlr" type="6NtXQnVdx14t" value="" name=""/>
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="r0UjazLtHHer" name="classify">
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="QKsJUv9lCdwE" type="DOICD6ntJvUO"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="hoXBdjoozQJp" type="DOICD6ntJvUO" value="" name=""/>
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="xfisgdsKmWGJ" name="discreteClassify">
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="joLd5fGn0c3f" type="6NtXQnVdx14t"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="y9P8ldpKAuRh" type="DOICD6ntJvUO" value="" name=""/>
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
         </UML:Classifier.feature>
        </UML:Class>
        <UML:Class visibility="public" isSpecification="false" namespace="QFWQXDQLlPLZ" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="dETz9cSzCHmb" name="Perceptron">
         <UML:Classifier.feature>
          <UML:Attribute visibility="private" isSpecification="false" xmi.id="5WNkBfA6SDI2" type="4LMl5yd8a4h3" name="momentum"/>
          <UML:Attribute visibility="private" isSpecification="false" xmi.id="Sp6wpQSaeHHH" type="4LMl5yd8a4h3" name="w0"/>
          <UML:Attribute visibility="private" isSpecification="false" xmi.id="TO6LrsRNFBXt" type="DOICD6ntJvUO" name="deltaW"/>
          <UML:Attribute visibility="protected" isSpecification="false" xmi.id="8Q3JvubUD8LY" type="4LMl5yd8a4h3" name="alpha"/>
          <UML:Attribute visibility="protected" isSpecification="false" xmi.id="iGYRJMXhOqcI" type="ej9ph9SFjM5c" name="dimension"/>
          <UML:Attribute visibility="protected" isSpecification="false" xmi.id="P6UVP251lEqQ" type="DOICD6ntJvUO" name="weights"/>
          <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="JoXyEHwNPD3Z" name="trainDelta">
           <UML:BehavioralFeature.parameter>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="301QC50PQs66" type="lf13peG8Sm4e" value="" name=""/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="HpT7msCVXEYM" type="4LMl5yd8a4h3" value="" name=""/>
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="true" isLeaf="false" isRoot="false" xmi.id="mTIYXvaWu0ix" name="activationFunction">
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="bd9WbrTaxpO8" type="4LMl5yd8a4h3"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="OGKcmfQW8g5f" type="y7NqBT61wDln" value="" name="input"/>
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="true" isLeaf="false" isRoot="false" xmi.id="IS7Dgqy24Ico" name="derivativeFunction">
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="gF8b4XjLzpWd" type="4LMl5yd8a4h3"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="v2L3iOhK1qoa" type="4LMl5yd8a4h3" value="" name="x"/>
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="dUfikHWgHph0" name="getDelta">
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="YnDpgfD7puVn" type="4LMl5yd8a4h3"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="QBhQyD1chfIP" type="DOICD6ntJvUO" value="" name=""/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="wm5EclCp9U0M" type="7jtkNnFIgmcs" value="" name=""/>
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation visibility="protected" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="JbLXrLTJAZD0" name="prepare">
           <UML:BehavioralFeature.parameter>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="0facuptNDyj2" type="lf13peG8Sm4e" value="" name="input"/>
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation stereotype="constructor" visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="LIg4eleM1DlI" name="Perceptron">
           <UML:BehavioralFeature.parameter>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="XIzt7ZCWfe22" type="ej9ph9SFjM5c" value="" name=""/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="g73QJrqe9Wgm" type="4LMl5yd8a4h3" value="" name=""/>
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="K6FVqX16XuD6" name="train">
           <UML:BehavioralFeature.parameter>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="4ikiikPnon6d" type="DOICD6ntJvUO" value="" name="input"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="din8OXNgbaCR" type="7jtkNnFIgmcs" value="" name="target"/>
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="8BYd5jhAPPs7" name="trainDelta">
           <UML:BehavioralFeature.parameter>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="AFsw2yZeeKm0" type="DOICD6ntJvUO" value="" name="input"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="p7hRirqq2MR7" type="4LMl5yd8a4h3" value="" name="delta"/>
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="68FTY6ZgLRcO" name="classify">
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="XZPZvoezxsTT" type="4LMl5yd8a4h3"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="O922Um3JtiiZ" type="DOICD6ntJvUO" value="" name="input"/>
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="y29JTlfrufsM" name="discreteClassify">
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="4Fqz7HS5JbPl" type="7jtkNnFIgmcs"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="RteJZMs6vGdr" type="DOICD6ntJvUO" value="" name="input"/>
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="M2aFiSb7JFOs" name="randomizeWeights"/>
          <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="aHwVVZKXp9Xw" name="save">
           <UML:BehavioralFeature.parameter>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="Qx0iZNTtP387" type="SnAfcwzpWWmA" value="" name="filename"/>
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="UiDnvbgVqa1L" name="load">
           <UML:BehavioralFeature.parameter>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="AJrxSMtrJrZq" type="SnAfcwzpWWmA" value="" name="filename"/>
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="E2ke5qjZWwLS" name="printWeights"/>
          <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="YzxMZwgjEXeg" name="getWeights">
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="tWVAN41c6lGA" type="DOICD6ntJvUO"/>
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Zzh6u2YQ1Tmb" name="setWeights">
           <UML:BehavioralFeature.parameter>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="OSIazxEqTk1q" type="DOICD6ntJvUO" value="" name=""/>
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="o0Qtjg3IeiOW" name="getDelta">
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="tvxXdK3MCx7W" type="4LMl5yd8a4h3"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="luwkMiLiBcI8" type="4LMl5yd8a4h3" value="" name=""/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="XUx0Ewo1wFuf" type="7jtkNnFIgmcs" value="" name=""/>
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="gQCp2UvZxsXB" name="getError">
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="xJ1uAY3wsEfP" type="4LMl5yd8a4h3"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="oMAiZ4NSxJyZ" type="4LMl5yd8a4h3" value="" name=""/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="bzvnv2IbRUOT" type="7jtkNnFIgmcs" value="" name=""/>
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
         </UML:Classifier.feature>
         <UML:Namespace.ownedElement>
          <UML:Class visibility="public" isSpecification="false" namespace="dETz9cSzCHmb" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="lSF2FoFwKCcD" name="NeuralLayer"/>
         </UML:Namespace.ownedElement>
        </UML:Class>
        <UML:Class visibility="public" isSpecification="false" namespace="QFWQXDQLlPLZ" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="G0qEJmlsjgee" name="ContinuousPerceptron">
         <UML:GeneralizableElement.generalization>
          <UML:Generalization xmi.idref="7JzxVcLldBzu"/>
          <UML:Generalization xmi.idref="eS4MpAs79rJo"/>
          <UML:Generalization xmi.idref="rtUCUJ7NTkOK"/>
          <UML:Generalization xmi.idref="9keilJw33xJl"/>
          <UML:Generalization xmi.idref="Fg8Gcy7ONs4t"/>
          <UML:Generalization xmi.idref="SHSR0EDQa4Od"/>
          <UML:Generalization xmi.idref="f3jAtABD3XHD"/>
          <UML:Generalization xmi.idref="LRKtSqJAdYIq"/>
          <UML:Generalization xmi.idref="qsKbNOIt0b9U"/>
          <UML:Generalization xmi.idref="vz7Jf3KoPfdC"/>
          <UML:Generalization xmi.idref="OdtE59sNsfzO"/>
          <UML:Generalization xmi.idref="SaLs19QxpGqJ"/>
         </UML:GeneralizableElement.generalization>
         <UML:Classifier.feature>
          <UML:Operation visibility="protected" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="adsBmp5fYqKv" name="activationFunction">
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="fATF6mLeNBp8" type="4LMl5yd8a4h3"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="Fbza79IBqNA8" type="y7NqBT61wDln" value="" name=""/>
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation visibility="protected" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="zsnXj5SygPXm" name="derivativeFunction">
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="iOy4XnAWgv1N" type="4LMl5yd8a4h3"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="YpxOA8VpGy4K" type="4LMl5yd8a4h3" value="" name=""/>
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation stereotype="constructor" visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="1RLfqqRMdPln" name="ContinuousPerceptron">
           <UML:BehavioralFeature.parameter>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="VEbjAd4r12vZ" type="ej9ph9SFjM5c" value="" name="dimension"/>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="o33Uw5rxWAdN" type="4LMl5yd8a4h3" value="" name="alpha"/>
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
         </UML:Classifier.feature>
        </UML:Class>
       </UML:Namespace.ownedElement>
      </UML:Package>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="hwD8QbZLtYF3" name="Perceptron"/>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="G0qEJmlsjgee" xmi.id="OdtE59sNsfzO" parent="hwD8QbZLtYF3" name=""/>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="G0qEJmlsjgee" xmi.id="SaLs19QxpGqJ" parent="dETz9cSzCHmb" name=""/>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="6XvCF0AVyt7M" xmi.id="JHz8WpPtGThJ" parent="Z1s60PigJGw5" name=""/>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="VNPkKjaMVEIi" xmi.id="uqr8IWRzdDve" parent="Z1s60PigJGw5" name=""/>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="453xLErUIRsu" xmi.id="acvBnoqiOoUQ" parent="VNPkKjaMVEIi" name=""/>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="453xLErUIRsu" xmi.id="Qy4nmWDf8dXH" parent="6XvCF0AVyt7M" name=""/>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="iBZSGKLq62FS" xmi.id="oITwvyB1NLf5" parent="JzGsbheTUlAY" name=""/>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="hhb49XgyNuc9" xmi.id="NoOk73ni8hrQ" parent="JzGsbheTUlAY" name=""/>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="JsQorP4xUzr8" xmi.id="CWvIDkiPihPi" parent="iBZSGKLq62FS" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="ggcgZ9UaCwWF" xmi.id="k4BS7KIEGRJ9" client="6XvCF0AVyt7M" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="G0qEJmlsjgee" xmi.id="FTfVuycf16OA" client="Z1s60PigJGw5" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="VNPkKjaMVEIi" xmi.id="79z9DNHpUiE0" client="hhb49XgyNuc9" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="453xLErUIRsu" xmi.id="rDWLtlJhZPZr" client="JsQorP4xUzr8" name=""/>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="ggcgZ9UaCwWF" xmi.id="hozEdZiVGwSl" parent="dETz9cSzCHmb" name=""/>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="ggcgZ9UaCwWF" xmi.id="2r3GnV1fSDef" parent="G0qEJmlsjgee" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="Z1s60PigJGw5" xmi.id="4iaxFUGJTaAt" client="JzGsbheTUlAY" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="453xLErUIRsu" xmi.id="yKehencRAqg8" client="JsQorP4xUzr8" name=""/>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="hhb49XgyNuc9" xmi.id="d5CGQdjTeav5" parent="JzGsbheTUlAY" name=""/>
      <UML:Association visibility="public" isSpecification="false" namespace="Logical View" xmi.id="FA25H4ptjxMn" name="">
       <UML:Association.connection>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="false" isSpecification="false" xmi.id="xCQWoLrwbNgz" type="hhb49XgyNuc9" name="" aggregation="none"/>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="true" isSpecification="false" xmi.id="6emPLzNb8NeP" type="VNPkKjaMVEIi" name="" aggregation="none"/>
       </UML:Association.connection>
      </UML:Association>
      <UML:Association visibility="public" isSpecification="false" namespace="Logical View" xmi.id="BOdwKnMobffV" name="">
       <UML:Association.connection>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="false" isSpecification="false" xmi.id="H2AG6o0W80rh" type="JzGsbheTUlAY" name="" aggregation="none"/>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="true" isSpecification="false" xmi.id="8EJVeljn9MjR" type="Z1s60PigJGw5" name="" aggregation="none"/>
       </UML:Association.connection>
      </UML:Association>
      <UML:Association visibility="public" isSpecification="false" namespace="Logical View" xmi.id="uSaGfZOs1d1L" name="">
       <UML:Association.connection>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="false" isSpecification="false" xmi.id="YIsl22jV1rLf" type="iBZSGKLq62FS" name="" aggregation="none"/>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="true" isSpecification="false" xmi.id="QJQCzurrKP5z" type="6XvCF0AVyt7M" name="" aggregation="none"/>
       </UML:Association.connection>
      </UML:Association>
      <UML:Association visibility="public" isSpecification="false" namespace="Logical View" xmi.id="xRpy4qJb6AM8" name="">
       <UML:Association.connection>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="false" isSpecification="false" xmi.id="C6cBvvqLCGV9" type="iBZSGKLq62FS" name="" aggregation="none"/>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="true" isSpecification="false" xmi.id="8L0Tk3ShVGfX" type="Z1s60PigJGw5" name="" aggregation="none"/>
       </UML:Association.connection>
      </UML:Association>
      <UML:Association visibility="public" isSpecification="false" namespace="Logical View" xmi.id="TJHXtQSpGlzV" name="">
       <UML:Association.connection>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="false" isSpecification="false" xmi.id="G9db76MBX1en" type="iBZSGKLq62FS" name="" aggregation="none"/>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="true" isSpecification="false" xmi.id="f9rcI2hjKwGD" type="Z1s60PigJGw5" name="" aggregation="none"/>
       </UML:Association.connection>
      </UML:Association>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="453xLErUIRsu" xmi.id="cR05h9jHGnbP" parent="VNPkKjaMVEIi" name=""/>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="453xLErUIRsu" xmi.id="Rrx2GFdIJsTG" parent="VNPkKjaMVEIi" name=""/>
      <UML:Association visibility="public" isSpecification="false" namespace="Logical View" xmi.id="KeOt5fVi8hdw" name="">
       <UML:Association.connection>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="false" isSpecification="false" xmi.id="o1ybJCdduFNb" type="6XvCF0AVyt7M" name="" aggregation="none"/>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="true" isSpecification="false" xmi.id="JZl8ks92WVwZ" type="ggcgZ9UaCwWF" name="" aggregation="none"/>
       </UML:Association.connection>
      </UML:Association>
     </UML:Namespace.ownedElement>
     <XMI.extension xmi.extender="umbrello">
      <diagrams>
       <diagram showopsig="0" linecolor="#303030" snapx="10" showattribassocs="1" snapy="10" linewidth="0" showattsig="0" isopen="1" showpackage="0" showpubliconly="1" showstereotype="0" name="class diagram" font="Sans Serif,9,-1,0,50,0,0,0,0,0" canvasheight="635" canvaswidth="1080" localid="-1" snapcsgrid="0" showgrid="1" showops="0" griddotcolor="#808080" backgroundcolor="#ffffff" usefillcolor="1" fillcolor="#dcdcdc" zoom="142" xmi.id="RPnKPLq6spQr" documentation="" showscope="0" snapgrid="1" showatts="0" type="1">
        <widgets>
         <classwidget linecolor="none" usesdiagramfillcolor="1" linewidth="none" showoperations="1" usesdiagramusefillcolor="1" showpubliconly="0" showpackage="0" x="230" showattsigs="600" showstereotype="1" y="0" showattributes="0" font="Sans Serif,9,-1,0,75,0,0,0,0,0" width="175" isinstance="0" usefillcolor="1" fillcolor="none" xmi.id="G0qEJmlsjgee" showscope="1" height="63" showopsigs="600"/>
         <classwidget linecolor="none" usesdiagramfillcolor="1" linewidth="none" showoperations="1" usesdiagramusefillcolor="1" showpubliconly="0" showpackage="0" x="0" showattsigs="600" showstereotype="1" y="350" showattributes="0" font="Sans Serif,9,-1,0,75,0,0,0,0,0" width="178" isinstance="0" usefillcolor="1" fillcolor="none" xmi.id="VNPkKjaMVEIi" showscope="1" height="119" showopsigs="600"/>
         <classwidget linecolor="none" usesdiagramfillcolor="1" linewidth="none" showoperations="1" usesdiagramusefillcolor="1" showpubliconly="0" showpackage="0" x="300" showattsigs="600" showstereotype="1" y="440" showattributes="0" font="Sans Serif,9,-1,0,75,0,0,0,0,0" width="198" isinstance="0" usefillcolor="1" fillcolor="none" xmi.id="hhb49XgyNuc9" showscope="1" height="35" showopsigs="600"/>
         <classwidget linecolor="none" usesdiagramfillcolor="1" linewidth="none" showoperations="1" usesdiagramusefillcolor="1" showpubliconly="0" showpackage="0" x="0" showattsigs="600" showstereotype="1" y="540" showattributes="0" font="Sans Serif,9,-1,0,75,0,0,0,0,0" width="201" isinstance="0" usefillcolor="1" fillcolor="none" xmi.id="453xLErUIRsu" showscope="1" height="35" showopsigs="600"/>
         <classwidget linecolor="none" usesdiagramfillcolor="1" linewidth="none" showoperations="1" usesdiagramusefillcolor="1" showpubliconly="0" showpackage="0" x="320" showattsigs="600" showstereotype="1" y="530" showattributes="0" font="Sans Serif,9,-1,0,75,0,0,0,0,0" width="221" isinstance="0" usefillcolor="1" fillcolor="none" xmi.id="JsQorP4xUzr8" showscope="1" height="35" showopsigs="600"/>
         <classwidget linecolor="none" usesdiagramfillcolor="1" linewidth="none" showoperations="1" usesdiagramusefillcolor="1" showpubliconly="0" showpackage="0" x="180" showattsigs="600" showstereotype="1" y="110" showattributes="0" font="Sans Serif,9,-1,0,75,0,0,0,0,0" width="141" isinstance="0" usefillcolor="1" fillcolor="none" xmi.id="Z1s60PigJGw5" showscope="1" height="203" showopsigs="600"/>
         <classwidget linecolor="#303030" usesdiagramfillcolor="0" linewidth="none" showoperations="1" usesdiagramusefillcolor="0" showpubliconly="0" showpackage="0" x="390" showattsigs="600" showstereotype="1" y="140" showattributes="0" font="Sans Serif,9,-1,5,75,0,0,0,0,0" width="131" isinstance="0" usefillcolor="1" fillcolor="#dcdcdc" xmi.id="JzGsbheTUlAY" showscope="1" height="133" showopsigs="600"/>
         <classwidget linecolor="#303030" usesdiagramfillcolor="0" linewidth="none" showoperations="1" usesdiagramusefillcolor="0" showpubliconly="0" showpackage="0" x="0" showattsigs="600" showstereotype="1" y="0" showattributes="0" font="Sans Serif,9,-1,5,50,1,0,0,0,0" width="147" isinstance="0" usefillcolor="1" fillcolor="#dcdcdc" xmi.id="dETz9cSzCHmb" showscope="1" height="273" showopsigs="600"/>
         <classwidget linecolor="none" usesdiagramfillcolor="1" linewidth="none" showoperations="1" usesdiagramusefillcolor="1" showpubliconly="0" showpackage="0" x="220" showattsigs="600" showstereotype="1" y="350" showattributes="0" font="Sans Serif,9,-1,0,75,0,0,0,0,0" width="128" isinstance="0" usefillcolor="1" fillcolor="none" xmi.id="6XvCF0AVyt7M" showscope="1" height="63" showopsigs="600"/>
         <classwidget linecolor="none" usesdiagramfillcolor="1" linewidth="none" showoperations="1" usesdiagramusefillcolor="1" showpubliconly="0" showpackage="0" x="470" showattsigs="600" showstereotype="1" y="300" showattributes="0" font="Sans Serif,9,-1,0,75,0,0,0,0,0" width="146" isinstance="0" usefillcolor="1" fillcolor="none" xmi.id="iBZSGKLq62FS" showscope="1" height="77" showopsigs="600"/>
         <classwidget linecolor="none" usesdiagramfillcolor="1" linewidth="none" showoperations="1" usesdiagramusefillcolor="1" showpubliconly="0" showpackage="0" x="450" showattsigs="600" showstereotype="1" y="0" showattributes="0" font="Sans Serif,9,-1,0,75,0,0,0,0,0" width="165" isinstance="0" usefillcolor="1" fillcolor="none" xmi.id="ggcgZ9UaCwWF" showscope="1" height="105" showopsigs="600"/>
        </widgets>
        <messages/>
        <associations>
         <assocwidget indexa="2" indexb="1" usesdiagramusefillcolor="0" widgetaid="G0qEJmlsjgee" usesdiagramfillcolor="0" fillcolor="#000000" linecolor="none" totalcounta="3" xmi.id="SaLs19QxpGqJ" widgetbid="dETz9cSzCHmb" totalcountb="2" type="500" usefillcolor="1" linewidth="none">
          <linepath>
           <startpoint startx="230" starty="60"/>
           <endpoint endx="150" endy="60"/>
          </linepath>
         </assocwidget>
         <assocwidget indexa="1" indexb="1" usesdiagramusefillcolor="1" widgetaid="6XvCF0AVyt7M" usesdiagramfillcolor="1" fillcolor="none" linecolor="none" totalcounta="3" xmi.id="JHz8WpPtGThJ" widgetbid="Z1s60PigJGw5" totalcountb="2" type="500" usefillcolor="1" linewidth="none">
          <linepath>
           <startpoint startx="320" starty="350"/>
           <endpoint endx="320" endy="310"/>
          </linepath>
         </assocwidget>
         <assocwidget indexa="1" indexb="1" usesdiagramusefillcolor="0" widgetaid="VNPkKjaMVEIi" usesdiagramfillcolor="0" fillcolor="#000000" linecolor="none" totalcounta="2" xmi.id="uqr8IWRzdDve" widgetbid="Z1s60PigJGw5" totalcountb="2" type="500" usefillcolor="1" linewidth="none">
          <linepath>
           <startpoint startx="180" starty="350"/>
           <endpoint endx="180" endy="310"/>
          </linepath>
         </assocwidget>
         <assocwidget indexa="2" indexb="1" usesdiagramusefillcolor="0" widgetaid="453xLErUIRsu" usesdiagramfillcolor="0" fillcolor="#000000" linecolor="none" totalcounta="3" xmi.id="Qy4nmWDf8dXH" widgetbid="6XvCF0AVyt7M" totalcountb="2" type="500" usefillcolor="1" linewidth="none">
          <linepath>
           <startpoint startx="200" starty="540"/>
           <endpoint endx="220" endy="410"/>
          </linepath>
         </assocwidget>
         <assocwidget indexa="1" indexb="2" usesdiagramusefillcolor="0" widgetaid="iBZSGKLq62FS" usesdiagramfillcolor="0" fillcolor="#000000" linecolor="none" totalcounta="2" xmi.id="oITwvyB1NLf5" widgetbid="JzGsbheTUlAY" totalcountb="3" type="500" usefillcolor="1" linewidth="none">
          <linepath>
           <startpoint startx="520" starty="300"/>
           <endpoint endx="520" endy="270"/>
          </linepath>
         </assocwidget>
         <assocwidget indexa="1" indexb="1" usesdiagramusefillcolor="0" widgetaid="JsQorP4xUzr8" usesdiagramfillcolor="0" fillcolor="#000000" linecolor="none" totalcounta="2" xmi.id="CWvIDkiPihPi" widgetbid="iBZSGKLq62FS" totalcountb="2" type="500" usefillcolor="1" linewidth="none">
          <linepath>
           <startpoint startx="540" starty="530"/>
           <endpoint endx="540" endy="380"/>
          </linepath>
         </assocwidget>
         <assocwidget indexa="1" indexb="1" usesdiagramusefillcolor="0" widgetaid="Z1s60PigJGw5" usesdiagramfillcolor="0" fillcolor="#000000" linecolor="none" totalcounta="2" xmi.id="FTfVuycf16OA" widgetbid="G0qEJmlsjgee" totalcountb="3" type="502" usefillcolor="1" linewidth="none">
          <linepath>
           <startpoint startx="250" starty="110"/>
           <endpoint endx="250" endy="60"/>
          </linepath>
         </assocwidget>
         <assocwidget indexa="1" indexb="1" usesdiagramusefillcolor="0" widgetaid="ggcgZ9UaCwWF" usesdiagramfillcolor="0" fillcolor="#000000" linecolor="none" totalcounta="3" xmi.id="2r3GnV1fSDef" widgetbid="G0qEJmlsjgee" totalcountb="2" type="500" usefillcolor="0" linewidth="none">
          <linepath>
           <startpoint startx="450" starty="60"/>
           <endpoint endx="410" endy="60"/>
          </linepath>
         </assocwidget>
         <assocwidget indexa="1" indexb="1" usesdiagramusefillcolor="0" widgetaid="JsQorP4xUzr8" usesdiagramfillcolor="0" fillcolor="#000000" linecolor="none" totalcounta="2" xmi.id="yKehencRAqg8" widgetbid="453xLErUIRsu" totalcountb="2" type="502" usefillcolor="1" linewidth="none">
          <linepath>
           <startpoint startx="320" starty="550"/>
           <endpoint endx="200" endy="550"/>
          </linepath>
         </assocwidget>
         <assocwidget indexa="1" indexb="1" usesdiagramusefillcolor="0" widgetaid="hhb49XgyNuc9" usesdiagramfillcolor="0" fillcolor="#000000" linecolor="none" totalcounta="2" xmi.id="d5CGQdjTeav5" widgetbid="JzGsbheTUlAY" totalcountb="3" type="500" usefillcolor="66" linewidth="none">
          <linepath>
           <startpoint startx="430" starty="440"/>
           <endpoint endx="430" endy="270"/>
          </linepath>
         </assocwidget>
         <assocwidget indexa="1" indexb="1" usesdiagramusefillcolor="0" widgetaid="hhb49XgyNuc9" usesdiagramfillcolor="0" fillcolor="#000000" linecolor="none" totalcounta="2" xmi.id="FA25H4ptjxMn" widgetbid="VNPkKjaMVEIi" totalcountb="2" type="512" usefillcolor="66" linewidth="none">
          <linepath>
           <startpoint startx="300" starty="450"/>
           <endpoint endx="180" endy="450"/>
          </linepath>
         </assocwidget>
         <assocwidget indexa="1" indexb="1" usesdiagramusefillcolor="0" widgetaid="JzGsbheTUlAY" usesdiagramfillcolor="0" fillcolor="#000000" linecolor="none" totalcounta="2" xmi.id="BOdwKnMobffV" widgetbid="Z1s60PigJGw5" totalcountb="3" type="512" usefillcolor="252" linewidth="none">
          <linepath>
           <startpoint startx="390" starty="180"/>
           <endpoint endx="320" endy="180"/>
          </linepath>
         </assocwidget>
         <assocwidget indexa="2" indexb="1" usesdiagramusefillcolor="9" widgetaid="iBZSGKLq62FS" usesdiagramfillcolor="124" fillcolor="none" linecolor="none" totalcounta="3" xmi.id="uSaGfZOs1d1L" widgetbid="6XvCF0AVyt7M" totalcountb="2" type="512" usefillcolor="104" linewidth="none">
          <linepath>
           <startpoint startx="470" starty="350"/>
           <endpoint endx="350" endy="350"/>
          </linepath>
         </assocwidget>
         <assocwidget indexa="1" indexb="2" usesdiagramusefillcolor="0" widgetaid="iBZSGKLq62FS" usesdiagramfillcolor="0" fillcolor="#000000" linecolor="none" totalcounta="3" xmi.id="TJHXtQSpGlzV" widgetbid="Z1s60PigJGw5" totalcountb="3" type="512" usefillcolor="50" linewidth="none">
          <linepath>
           <startpoint startx="470" starty="310"/>
           <endpoint endx="320" endy="310"/>
          </linepath>
         </assocwidget>
         <assocwidget indexa="1" indexb="1" usesdiagramusefillcolor="0" widgetaid="453xLErUIRsu" usesdiagramfillcolor="0" fillcolor="#000000" linecolor="none" totalcounta="3" xmi.id="Rrx2GFdIJsTG" widgetbid="VNPkKjaMVEIi" totalcountb="2" type="500" usefillcolor="65" linewidth="none">
          <linepath>
           <startpoint startx="30" starty="540"/>
           <endpoint endx="30" endy="470"/>
          </linepath>
         </assocwidget>
         <assocwidget indexa="2" indexb="2" usesdiagramusefillcolor="0" widgetaid="6XvCF0AVyt7M" usesdiagramfillcolor="0" fillcolor="#000000" linecolor="none" totalcounta="3" xmi.id="KeOt5fVi8hdw" widgetbid="ggcgZ9UaCwWF" totalcountb="3" type="512" usefillcolor="205" linewidth="none">
          <linepath>
           <startpoint startx="340" starty="350"/>
           <endpoint endx="450" endy="100"/>
           <point x="340" y="100"/>
          </linepath>
         </assocwidget>
        </associations>
       </diagram>
      </diagrams>
     </XMI.extension>
    </UML:Model>
    <UML:Model stereotype="folder" visibility="public" isSpecification="false" namespace="m1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Use Case View" name="Use Case View">
     <UML:Namespace.ownedElement/>
    </UML:Model>
    <UML:Model stereotype="folder" visibility="public" isSpecification="false" namespace="m1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Component View" name="Component View">
     <UML:Namespace.ownedElement>
      <UML:Artifact visibility="public" isSpecification="false" namespace="Component View" drawas="1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="z2jcRSOuezep" comment="/*&#xa; *    Copyright (C) 2012  Michal Hozza (mhozza@gmail.com)&#xa; *&#xa; *    This program is free software: you can redistribute it and/or modify&#xa; *    it under the terms of the GNU General Public License as published by&#xa; *    the Free Software Foundation, either version 3 of the License, or&#xa; *    (at your option) any later version.&#xa; *&#xa; *    This program is distributed in the hope that it will be useful,&#xa; *    but WITHOUT ANY WARRANTY; without even the implied warranty of&#xa; *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#xa; *    GNU General Public License for more details.&#xa; *&#xa; *    You should have received a copy of the GNU General Public License&#xa; *    along with this program.  If not, see &lt;http://www.gnu.org/licenses/>.&#xa; */" name="recurrentperceptron.h"/>
      <UML:Artifact visibility="public" isSpecification="false" namespace="Component View" drawas="1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Gv3LPtNJMS1G" comment="/*&#xa; *    Copyright (C) 2012  Michal Hozza (mhozza@gmail.com)&#xa; *&#xa; *    This program is free software: you can redistribute it and/or modify&#xa; *    it under the terms of the GNU General Public License as published by&#xa; *    the Free Software Foundation, either version 3 of the License, or&#xa; *    (at your option) any later version.&#xa; *&#xa; *    This program is distributed in the hope that it will be useful,&#xa; *    but WITHOUT ANY WARRANTY; without even the implied warranty of&#xa; *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#xa; *    GNU General Public License for more details.&#xa; *&#xa; *    You should have received a copy of the GNU General Public License&#xa; *    along with this program.  If not, see &lt;http://www.gnu.org/licenses/>.&#xa; */" name="recurrentlayer.h"/>
      <UML:Artifact visibility="public" isSpecification="false" namespace="Component View" drawas="1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="6R1nmsvEetwN" comment="/*&#xa; *    Copyright (C) 2012  Michal Hozza (mhozza@gmail.com)&#xa; *&#xa; *    This program is free software: you can redistribute it and/or modify&#xa; *    it under the terms of the GNU General Public License as published by&#xa; *    the Free Software Foundation, either version 3 of the License, or&#xa; *    (at your option) any later version.&#xa; *&#xa; *    This program is distributed in the hope that it will be useful,&#xa; *    but WITHOUT ANY WARRANTY; without even the implied warranty of&#xa; *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#xa; *    GNU General Public License for more details.&#xa; *&#xa; *    You should have received a copy of the GNU General Public License&#xa; *    along with this program.  If not, see &lt;http://www.gnu.org/licenses/>.&#xa; */" name="recurrentnetwork.h"/>
      <UML:Artifact visibility="public" isSpecification="false" namespace="Component View" drawas="1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="dAjVHdgaE3Py" comment="/*&#xa; *    Copyright (C) 2012  Michal Hozza (mhozza@gmail.com)&#xa; *&#xa; *    This program is free software: you can redistribute it and/or modify&#xa; *    it under the terms of the GNU General Public License as published by&#xa; *    the Free Software Foundation, either version 3 of the License, or&#xa; *    (at your option) any later version.&#xa; *&#xa; *    This program is distributed in the hope that it will be useful,&#xa; *    but WITHOUT ANY WARRANTY; without even the implied warranty of&#xa; *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#xa; *    GNU General Public License for more details.&#xa; *&#xa; *    You should have received a copy of the GNU General Public License&#xa; *    along with this program.  If not, see &lt;http://www.gnu.org/licenses/>.&#xa; */" name="elmannetwork.h"/>
      <UML:Artifact visibility="public" isSpecification="false" namespace="Component View" drawas="1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="k9gi0bo7vyJL" comment="/*&#xa; *    Copyright (C) 2012  Michal Hozza (mhozza@gmail.com)&#xa; *&#xa; *    This program is free software: you can redistribute it and/or modify&#xa; *    it under the terms of the GNU General Public License as published by&#xa; *    the Free Software Foundation, either version 3 of the License, or&#xa; *    (at your option) any later version.&#xa; *&#xa; *    This program is distributed in the hope that it will be useful,&#xa; *    but WITHOUT ANY WARRANTY; without even the implied warranty of&#xa; *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#xa; *    GNU General Public License for more details.&#xa; *&#xa; *    You should have received a copy of the GNU General Public License&#xa; *    along with this program.  If not, see &lt;http://www.gnu.org/licenses/>.&#xa; */" name="distributedrecurrentnetwork.h"/>
      <UML:Artifact visibility="public" isSpecification="false" namespace="Component View" drawas="1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="B574s0q0dFaV" comment="/*&#xa; *    Copyright (C) 2011-2011  Michal Hozza (mhozza@gmail.com)&#xa; *&#xa; *    This program is free software: you can redistribute it and/or modify&#xa; *    it under the terms of the GNU General Public License as published by&#xa; *    the Free Software Foundation, either version 3 of the License, or&#xa; *    (at your option) any later version.&#xa; *&#xa; *    This program is distributed in the hope that it will be useful,&#xa; *    but WITHOUT ANY WARRANTY; without even the implied warranty of&#xa; *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#xa; *    GNU General Public License for more details.&#xa; *&#xa; *    You should have received a copy of the GNU General Public License&#xa; *    along with this program.  If not, see &lt;http://www.gnu.org/licenses/>.&#xa; */" name="distributedneurallayer.h"/>
      <UML:Artifact visibility="public" isSpecification="false" namespace="Component View" drawas="1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="pNwzpi3LEhUd" comment="/*&#xa; *    Copyright (C) 2012  Michal Hozza (mhozza@gmail.com)&#xa; *&#xa; *    This program is free software: you can redistribute it and/or modify&#xa; *    it under the terms of the GNU General Public License as published by&#xa; *    the Free Software Foundation, either version 3 of the License, or&#xa; *    (at your option) any later version.&#xa; *&#xa; *    This program is distributed in the hope that it will be useful,&#xa; *    but WITHOUT ANY WARRANTY; without even the implied warranty of&#xa; *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#xa; *    GNU General Public License for more details.&#xa; *&#xa; *    You should have received a copy of the GNU General Public License&#xa; *    along with this program.  If not, see &lt;http://www.gnu.org/licenses/>.&#xa; */" name="distributedrecurrentlayer.h"/>
      <UML:Artifact visibility="public" isSpecification="false" namespace="Component View" drawas="1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="6cSHNRggsiue" comment="/*&#xa; *    Copyright (C) 2011-2011  Michal Hozza (mhozza@gmail.com)&#xa; *&#xa; *    This program is free software: you can redistribute it and/or modify&#xa; *    it under the terms of the GNU General Public License as published by&#xa; *    the Free Software Foundation, either version 3 of the License, or&#xa; *    (at your option) any later version.&#xa; *&#xa; *    This program is distributed in the hope that it will be useful,&#xa; *    but WITHOUT ANY WARRANTY; without even the implied warranty of&#xa; *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#xa; *    GNU General Public License for more details.&#xa; *&#xa; *    You should have received a copy of the GNU General Public License&#xa; *    along with this program.  If not, see &lt;http://www.gnu.org/licenses/>.&#xa; */" name="distributedneuralnetwork.h"/>
     </UML:Namespace.ownedElement>
    </UML:Model>
    <UML:Model stereotype="folder" visibility="public" isSpecification="false" namespace="m1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Deployment View" name="Deployment View">
     <UML:Namespace.ownedElement/>
    </UML:Model>
    <UML:Model stereotype="folder" visibility="public" isSpecification="false" namespace="m1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Entity Relationship Model" name="Entity Relationship Model">
     <UML:Namespace.ownedElement/>
    </UML:Model>
   </UML:Namespace.ownedElement>
  </UML:Model>
 </XMI.content>
 <XMI.extensions xmi.extender="umbrello">
  <docsettings viewid="RPnKPLq6spQr" uniqueid="JZl8ks92WVwZ" documentation=""/>
  <listview>
   <listitem open="1" type="800" id="Views">
    <listitem open="1" type="821" id="Component View">
     <listitem open="0" type="824" id="B574s0q0dFaV"/>
     <listitem open="0" type="824" id="6cSHNRggsiue"/>
     <listitem open="0" type="824" id="pNwzpi3LEhUd"/>
     <listitem open="0" type="824" id="k9gi0bo7vyJL"/>
     <listitem open="0" type="824" id="dAjVHdgaE3Py"/>
     <listitem open="0" type="824" id="Gv3LPtNJMS1G"/>
     <listitem open="0" type="824" id="6R1nmsvEetwN"/>
     <listitem open="0" type="824" id="z2jcRSOuezep"/>
    </listitem>
    <listitem open="1" type="827" id="Deployment View"/>
    <listitem open="1" type="836" id="Entity Relationship Model"/>
    <listitem open="1" type="801" id="Logical View">
     <listitem open="0" type="807" id="RPnKPLq6spQr" label="class diagram"/>
     <listitem open="0" type="813" id="lUmu57t5oVVF"/>
     <listitem open="0" type="830" id="Datatypes">
      <listitem open="1" type="829" id="bzTTHzQNiJ53"/>
      <listitem open="0" type="829" id="y7NqBT61wDln"/>
      <listitem open="1" type="829" id="kAKxLlfxk7Q0"/>
      <listitem open="1" type="829" id="4LMl5yd8a4h3"/>
      <listitem open="1" type="829" id="2eRbSgTHDDTi"/>
      <listitem open="1" type="829" id="7jtkNnFIgmcs"/>
      <listitem open="1" type="829" id="4YvfdciLl0H4"/>
      <listitem open="1" type="829" id="4qNk8QoCj8xp"/>
      <listitem open="1" type="829" id="SnAfcwzpWWmA"/>
      <listitem open="1" type="829" id="lu1WzQU3EpoM"/>
      <listitem open="1" type="829" id="F3xy3E3n72J6"/>
      <listitem open="1" type="829" id="FaXzgUmk1fNe"/>
      <listitem open="0" type="829" id="DOICD6ntJvUO"/>
      <listitem open="0" type="829" id="lf13peG8Sm4e"/>
      <listitem open="0" type="829" id="bG9pIY2XNcKQ"/>
      <listitem open="0" type="829" id="6NtXQnVdx14t"/>
      <listitem open="0" type="829" id="288UtG3EFnzS"/>
      <listitem open="0" type="829" id="Q68cBM6Z9X6c"/>
      <listitem open="0" type="829" id="oki70cAhXjbn"/>
     </listitem>
     <listitem open="0" type="813" id="Cd3ZMk7tuypu"/>
     <listitem open="0" type="813" id="Yhu5mh83d9O0"/>
     <listitem open="1" type="818" id="QFWQXDQLlPLZ">
      <listitem open="0" type="813" id="G0qEJmlsjgee">
       <listitem open="0" type="815" id="adsBmp5fYqKv"/>
       <listitem open="0" type="815" id="1RLfqqRMdPln"/>
       <listitem open="0" type="815" id="zsnXj5SygPXm"/>
      </listitem>
      <listitem open="0" type="813" id="VNPkKjaMVEIi">
       <listitem open="0" type="815" id="r0UjazLtHHer"/>
       <listitem open="0" type="814" id="2cg5GvISsHdJ"/>
       <listitem open="0" type="814" id="0mgYA5R8c3VN"/>
       <listitem open="0" type="815" id="xfisgdsKmWGJ"/>
       <listitem open="0" type="815" id="egGWvunyywMF"/>
       <listitem open="0" type="815" id="V9OBKVX2TnGk"/>
       <listitem open="0" type="814" id="CzzDRnTrNCN0"/>
       <listitem open="0" type="814" id="8HWkK07KclOq"/>
       <listitem open="0" type="814" id="368QHVOHF4qQ"/>
       <listitem open="0" type="814" id="SbjXfoPfaQRu"/>
       <listitem open="0" type="815" id="EtOKmoNTD4PD"/>
       <listitem open="0" type="815" id="caqvEbjRKipG"/>
       <listitem open="0" type="815" id="jg1UgIMEnqSj"/>
       <listitem open="0" type="814" id="yYcNlz8I3gHE"/>
      </listitem>
      <listitem open="0" type="813" id="hhb49XgyNuc9">
       <listitem open="0" type="815" id="QfohauLudg73"/>
      </listitem>
      <listitem open="0" type="813" id="453xLErUIRsu">
       <listitem open="0" type="815" id="frTpjN73PZiI"/>
      </listitem>
      <listitem open="0" type="813" id="JsQorP4xUzr8">
       <listitem open="0" type="815" id="3McxqJfi4L1m"/>
      </listitem>
      <listitem open="0" type="813" id="lq5kDDwdDmaM">
       <listitem open="0" type="815" id="oQuzMLh88udJ"/>
       <listitem open="0" type="815" id="acfZ31GZpGod"/>
       <listitem open="0" type="814" id="jTjo55ulSb3S"/>
       <listitem open="0" type="814" id="K6X5GOdjkjks"/>
       <listitem open="0" type="815" id="Fyu647NkVJ7Z"/>
       <listitem open="0" type="814" id="Yn0EooloUsDg"/>
       <listitem open="0" type="815" id="1Ri8PeJlEA35"/>
       <listitem open="0" type="815" id="MarKs3KAWuGD"/>
      </listitem>
      <listitem open="0" type="813" id="Z1s60PigJGw5">
       <listitem open="0" type="815" id="H4Y0qgWHHAkA"/>
       <listitem open="0" type="815" id="AuibAFxPwm4a"/>
       <listitem open="0" type="815" id="1q9BFEAhyElS"/>
       <listitem open="0" type="815" id="Di2ZTfSQIaTi"/>
       <listitem open="0" type="815" id="Gil38q8xe7dQ"/>
       <listitem open="0" type="815" id="yUz9P0Yy1R22"/>
       <listitem open="0" type="815" id="SIRcVcs8Hary"/>
       <listitem open="0" type="815" id="8jnufKPWMh8v"/>
       <listitem open="0" type="813" id="juZuG1iCnJFG"/>
       <listitem open="0" type="814" id="gjZ2Zj4NBFTa"/>
       <listitem open="0" type="815" id="78ZJKPiutzRb"/>
       <listitem open="0" type="815" id="fhkkhgtomQ77"/>
       <listitem open="0" type="815" id="xkMPGRqtag4L"/>
       <listitem open="0" type="815" id="A8HPqtCIaNuU"/>
       <listitem open="0" type="815" id="avgozR9abjTq"/>
      </listitem>
      <listitem open="0" type="813" id="JzGsbheTUlAY">
       <listitem open="0" type="815" id="C6q4VcEmJj15"/>
       <listitem open="0" type="815" id="ApCLf8Ue7DsO"/>
       <listitem open="0" type="815" id="DcHrkXfDasno"/>
       <listitem open="0" type="814" id="1iL4Bb0k6QtJ"/>
       <listitem open="0" type="815" id="6USnl5MW84DX"/>
       <listitem open="0" type="815" id="aUYxK74e5KUg"/>
       <listitem open="0" type="815" id="91VUan5QXuPd"/>
       <listitem open="0" type="815" id="l5kiProsIUxD"/>
       <listitem open="0" type="815" id="MQDNgYyi0wEK"/>
      </listitem>
      <listitem open="0" type="813" id="dETz9cSzCHmb">
       <listitem open="0" type="815" id="mTIYXvaWu0ix"/>
       <listitem open="0" type="814" id="8Q3JvubUD8LY"/>
       <listitem open="0" type="815" id="68FTY6ZgLRcO"/>
       <listitem open="0" type="814" id="TO6LrsRNFBXt"/>
       <listitem open="0" type="815" id="IS7Dgqy24Ico"/>
       <listitem open="0" type="814" id="iGYRJMXhOqcI"/>
       <listitem open="0" type="815" id="y29JTlfrufsM"/>
       <listitem open="0" type="815" id="o0Qtjg3IeiOW"/>
       <listitem open="0" type="815" id="dUfikHWgHph0"/>
       <listitem open="0" type="815" id="gQCp2UvZxsXB"/>
       <listitem open="0" type="815" id="YzxMZwgjEXeg"/>
       <listitem open="0" type="815" id="UiDnvbgVqa1L"/>
       <listitem open="0" type="814" id="5WNkBfA6SDI2"/>
       <listitem open="0" type="813" id="lSF2FoFwKCcD"/>
       <listitem open="0" type="815" id="LIg4eleM1DlI"/>
       <listitem open="0" type="815" id="JbLXrLTJAZD0"/>
       <listitem open="0" type="815" id="E2ke5qjZWwLS"/>
       <listitem open="0" type="815" id="M2aFiSb7JFOs"/>
       <listitem open="0" type="815" id="aHwVVZKXp9Xw"/>
       <listitem open="0" type="815" id="Zzh6u2YQ1Tmb"/>
       <listitem open="0" type="815" id="K6FVqX16XuD6"/>
       <listitem open="0" type="815" id="JoXyEHwNPD3Z"/>
       <listitem open="0" type="815" id="8BYd5jhAPPs7"/>
       <listitem open="0" type="814" id="Sp6wpQSaeHHH"/>
       <listitem open="0" type="814" id="P6UVP251lEqQ"/>
      </listitem>
      <listitem open="0" type="813" id="6XvCF0AVyt7M">
       <listitem open="0" type="815" id="bJcPs3QPdvu5"/>
       <listitem open="0" type="815" id="clhRMs6yTABy"/>
       <listitem open="0" type="815" id="TlyklrFBk6nv"/>
      </listitem>
      <listitem open="0" type="813" id="iBZSGKLq62FS">
       <listitem open="0" type="814" id="kUBkDTxE51Oj"/>
       <listitem open="0" type="815" id="pz5uyTbHMnDD"/>
       <listitem open="0" type="815" id="LvDxr01F5ecQ"/>
       <listitem open="0" type="815" id="urL3Bl0ZPRc8"/>
       <listitem open="0" type="815" id="JwRnsuFFwzwl"/>
      </listitem>
      <listitem open="0" type="813" id="ggcgZ9UaCwWF">
       <listitem open="0" type="815" id="ov7hrkZerhJp"/>
       <listitem open="0" type="815" id="FkGu1fsxbNRH"/>
       <listitem open="0" type="814" id="4sCRvWK5KoP5"/>
       <listitem open="0" type="815" id="ROXwkyQpqaGl"/>
       <listitem open="0" type="815" id="9yLeOPx2gGR0"/>
       <listitem open="0" type="815" id="oyZNJ0cwQ1MH"/>
       <listitem open="0" type="814" id="oxaGHwliELwx"/>
       <listitem open="0" type="815" id="p97e0usDf85e"/>
      </listitem>
     </listitem>
     <listitem open="0" type="813" id="sLOKTXIZwIMh"/>
     <listitem open="0" type="813" id="hwD8QbZLtYF3"/>
     <listitem open="0" type="813" id="vDoENs1imyWU"/>
     <listitem open="0" type="813" id="PVxsSYZCgFsg"/>
     <listitem open="0" type="813" id="ej9ph9SFjM5c"/>
     <listitem open="0" type="813" id="DNuggPjPsyP5"/>
    </listitem>
    <listitem open="1" type="802" id="Use Case View"/>
   </listitem>
  </listview>
  <codegeneration>
   <codegenerator language="C++">
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="DNuggPjPsyP5" id="DNuggPjPsyP5" fileName="vector" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;vector.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Methods"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="ej9ph9SFjM5c" id="ej9ph9SFjM5c" fileName="unsigned" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;unsigned.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Methods"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="PVxsSYZCgFsg" id="PVxsSYZCgFsg" fileName="RecurrentNetwork" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;recurrentnetwork.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Methods"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="lUmu57t5oVVF" id="lUmu57t5oVVF" fileName="ContinuousPerceptron" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;continuousperceptron.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Methods"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="vDoENs1imyWU" id="vDoENs1imyWU" fileName="RecurrentLayer" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;recurrentlayer.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Methods"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="Cd3ZMk7tuypu" id="Cd3ZMk7tuypu" fileName="DistributedNeuralLayer" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;distributedneurallayer.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Methods"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="sLOKTXIZwIMh" id="sLOKTXIZwIMh" fileName="NeuralNetwork" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;neuralnetwork.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Methods"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="Yhu5mh83d9O0" id="Yhu5mh83d9O0" fileName="NeuralLayer" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;neurallayer.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Methods"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="QFWQXDQLlPLZ" fileExt=".cpp" parent_class="lq5kDDwdDmaM" id="lq5kDDwdDmaM" fileName="ElmanNetwork" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;elmannetwork.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors"/>
       </header>
       <textblocks>
        <codeoperation tag="operation_acfZ31GZpGod" parent_id="acfZ31GZpGod" writeOutText="false" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Methods"/>
       </header>
       <textblocks>
        <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="jTjo55ulSb3S" writeOutText="false" classfield_id="jTjo55ulSb3S" text="return hiddenCopy;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="jTjo55ulSb3S" writeOutText="false" classfield_id="jTjo55ulSb3S" text="hiddenCopy = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_2" accessType="0" parent_id="Yn0EooloUsDg" writeOutText="false" classfield_id="Yn0EooloUsDg" text="return tmpHiddenCopy;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_3" accessType="1" parent_id="Yn0EooloUsDg" writeOutText="false" classfield_id="Yn0EooloUsDg" text="tmpHiddenCopy = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_4" accessType="0" parent_id="K6X5GOdjkjks" writeOutText="false" classfield_id="K6X5GOdjkjks" text="return hiddenSize;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_5" accessType="1" parent_id="K6X5GOdjkjks" writeOutText="false" classfield_id="K6X5GOdjkjks" text="hiddenSize = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeoperation tag="operation_MarKs3KAWuGD" parent_id="MarKs3KAWuGD" writeOutText="false" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeoperation>
        <codeoperation tag="operation_Fyu647NkVJ7Z" parent_id="Fyu647NkVJ7Z" writeOutText="false" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeoperation>
        <codeoperation tag="operation_1Ri8PeJlEA35" parent_id="1Ri8PeJlEA35" writeOutText="false" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeoperation>
        <codeoperation tag="operation_oQuzMLh88udJ" parent_id="oQuzMLh88udJ" writeOutText="false" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="jTjo55ulSb3S" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="jTjo55ulSb3S" indentLevel="1" text="private vector&lt; float > hiddenCopy;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="jTjo55ulSb3S" writeOutText="false" classfield_id="jTjo55ulSb3S" text="return hiddenCopy;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="jTjo55ulSb3S" writeOutText="false" classfield_id="jTjo55ulSb3S" text="hiddenCopy = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="Yn0EooloUsDg" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="Yn0EooloUsDg" indentLevel="1" text="private vector&lt; float > tmpHiddenCopy;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_2" accessType="0" parent_id="Yn0EooloUsDg" writeOutText="false" classfield_id="Yn0EooloUsDg" text="return tmpHiddenCopy;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_3" accessType="1" parent_id="Yn0EooloUsDg" writeOutText="false" classfield_id="Yn0EooloUsDg" text="tmpHiddenCopy = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="K6X5GOdjkjks" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="K6X5GOdjkjks" indentLevel="1" text="private unsigned hiddenSize;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_4" accessType="0" parent_id="K6X5GOdjkjks" writeOutText="false" classfield_id="K6X5GOdjkjks" text="return hiddenSize;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_5" accessType="1" parent_id="K6X5GOdjkjks" writeOutText="false" classfield_id="K6X5GOdjkjks" text="hiddenSize = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="QFWQXDQLlPLZ" fileExt=".cpp" parent_class="iBZSGKLq62FS" id="iBZSGKLq62FS" fileName="RecurrentNetwork" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;recurrentnetwork.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors"/>
       </header>
       <textblocks>
        <codeoperation tag="operation_LvDxr01F5ecQ" parent_id="LvDxr01F5ecQ" writeOutText="false" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeoperation>
        <codeoperation tag="operation_pz5uyTbHMnDD" parent_id="pz5uyTbHMnDD" writeOutText="false" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Methods"/>
       </header>
       <textblocks>
        <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="kUBkDTxE51Oj" writeOutText="false" classfield_id="kUBkDTxE51Oj" text="return recurrentLayerIndex;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="kUBkDTxE51Oj" writeOutText="false" classfield_id="kUBkDTxE51Oj" text="recurrentLayerIndex = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeoperation tag="operation_JwRnsuFFwzwl" parent_id="JwRnsuFFwzwl" writeOutText="false" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeoperation>
        <codeoperation tag="operation_urL3Bl0ZPRc8" parent_id="urL3Bl0ZPRc8" writeOutText="false" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="kUBkDTxE51Oj" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="kUBkDTxE51Oj" indentLevel="1" text="private unsigned recurrentLayerIndex;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="kUBkDTxE51Oj" writeOutText="false" classfield_id="kUBkDTxE51Oj" text="return recurrentLayerIndex;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="kUBkDTxE51Oj" writeOutText="false" classfield_id="kUBkDTxE51Oj" text="recurrentLayerIndex = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="158670344" parent_id="uSaGfZOs1d1L" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="uSaGfZOs1d1L" writeOutText="false" indentLevel="1" text="public RecurrentLayer ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="uSaGfZOs1d1L" writeOutText="false" classfield_id="uSaGfZOs1d1L" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="uSaGfZOs1d1L" writeOutText="false" classfield_id="uSaGfZOs1d1L" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="uSaGfZOs1d1L" writeOutText="false" classfield_id="uSaGfZOs1d1L" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="uSaGfZOs1d1L" writeOutText="false" classfield_id="uSaGfZOs1d1L" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;RecurrentLayer item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;RecurrentLayer>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="uSaGfZOs1d1L" writeOutText="false" classfield_id="uSaGfZOs1d1L" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="158670344" parent_id="xRpy4qJb6AM8" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="xRpy4qJb6AM8" writeOutText="false" indentLevel="1" text="public NeuralLayer ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="xRpy4qJb6AM8" writeOutText="false" classfield_id="xRpy4qJb6AM8" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="xRpy4qJb6AM8" writeOutText="false" classfield_id="xRpy4qJb6AM8" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="xRpy4qJb6AM8" writeOutText="false" classfield_id="xRpy4qJb6AM8" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="xRpy4qJb6AM8" writeOutText="false" classfield_id="xRpy4qJb6AM8" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;NeuralLayer item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;NeuralLayer>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="xRpy4qJb6AM8" writeOutText="false" classfield_id="xRpy4qJb6AM8" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="158670344" parent_id="TJHXtQSpGlzV" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="TJHXtQSpGlzV" writeOutText="false" indentLevel="1" text="public NeuralLayer ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="TJHXtQSpGlzV" writeOutText="false" classfield_id="TJHXtQSpGlzV" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="TJHXtQSpGlzV" writeOutText="false" classfield_id="TJHXtQSpGlzV" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="TJHXtQSpGlzV" writeOutText="false" classfield_id="TJHXtQSpGlzV" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="TJHXtQSpGlzV" writeOutText="false" classfield_id="TJHXtQSpGlzV" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;NeuralLayer item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;NeuralLayer>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="TJHXtQSpGlzV" writeOutText="false" classfield_id="TJHXtQSpGlzV" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="QFWQXDQLlPLZ" fileExt=".cpp" parent_class="JsQorP4xUzr8" id="JsQorP4xUzr8" fileName="DistributedRecurrentNetwork" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;distributedrecurrentnetwork.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors"/>
       </header>
       <textblocks>
        <codeoperation tag="operation_3McxqJfi4L1m" parent_id="3McxqJfi4L1m" writeOutText="false" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Methods"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="QFWQXDQLlPLZ" fileExt=".cpp" parent_class="ggcgZ9UaCwWF" id="ggcgZ9UaCwWF" fileName="RecurrentPerceptron" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;recurrentperceptron.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors"/>
       </header>
       <textblocks>
        <codeoperation tag="operation_9yLeOPx2gGR0" parent_id="9yLeOPx2gGR0" writeOutText="false" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Methods"/>
       </header>
       <textblocks>
        <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="4sCRvWK5KoP5" writeOutText="false" classfield_id="4sCRvWK5KoP5" text="return lastOutput;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="4sCRvWK5KoP5" writeOutText="false" classfield_id="4sCRvWK5KoP5" text="lastOutput = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_2" accessType="0" parent_id="oxaGHwliELwx" writeOutText="false" classfield_id="oxaGHwliELwx" text="return tmpLastOutput;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_3" accessType="1" parent_id="oxaGHwliELwx" writeOutText="false" classfield_id="oxaGHwliELwx" text="tmpLastOutput = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeoperation tag="operation_ROXwkyQpqaGl" parent_id="ROXwkyQpqaGl" writeOutText="false" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeoperation>
        <codeoperation tag="operation_FkGu1fsxbNRH" parent_id="FkGu1fsxbNRH" writeOutText="false" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeoperation>
        <codeoperation tag="operation_p97e0usDf85e" parent_id="p97e0usDf85e" writeOutText="false" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeoperation>
        <codeoperation tag="operation_oyZNJ0cwQ1MH" parent_id="oyZNJ0cwQ1MH" writeOutText="false" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeoperation>
        <codeoperation tag="operation_ov7hrkZerhJp" parent_id="ov7hrkZerhJp" writeOutText="false" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="4sCRvWK5KoP5" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="4sCRvWK5KoP5" indentLevel="1" text="private float lastOutput;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="4sCRvWK5KoP5" writeOutText="false" classfield_id="4sCRvWK5KoP5" text="return lastOutput;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="4sCRvWK5KoP5" writeOutText="false" classfield_id="4sCRvWK5KoP5" text="lastOutput = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="oxaGHwliELwx" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="oxaGHwliELwx" indentLevel="1" text="private float tmpLastOutput;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_2" accessType="0" parent_id="oxaGHwliELwx" writeOutText="false" classfield_id="oxaGHwliELwx" text="return tmpLastOutput;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_3" accessType="1" parent_id="oxaGHwliELwx" writeOutText="false" classfield_id="oxaGHwliELwx" text="tmpLastOutput = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="7602288" parent_id="KeOt5fVi8hdw" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="KeOt5fVi8hdw" writeOutText="false" indentLevel="1" text="public RecurrentLayer ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="" accessType="0" parent_id="KeOt5fVi8hdw" writeOutText="false" classfield_id="KeOt5fVi8hdw" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="1" parent_id="KeOt5fVi8hdw" writeOutText="false" classfield_id="KeOt5fVi8hdw" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="2" parent_id="KeOt5fVi8hdw" writeOutText="false" classfield_id="KeOt5fVi8hdw" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="3" parent_id="KeOt5fVi8hdw" writeOutText="false" classfield_id="KeOt5fVi8hdw" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;RecurrentLayer item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;RecurrentLayer>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="4" parent_id="KeOt5fVi8hdw" writeOutText="false" classfield_id="KeOt5fVi8hdw" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="QFWQXDQLlPLZ" fileExt=".cpp" parent_class="6XvCF0AVyt7M" id="6XvCF0AVyt7M" fileName="RecurrentLayer" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;recurrentlayer.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors"/>
       </header>
       <textblocks>
        <codeoperation tag="operation_bJcPs3QPdvu5" parent_id="bJcPs3QPdvu5" writeOutText="false" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Methods"/>
       </header>
       <textblocks>
        <codeoperation tag="operation_TlyklrFBk6nv" parent_id="TlyklrFBk6nv" writeOutText="false" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeoperation>
        <codeoperation tag="operation_clhRMs6yTABy" parent_id="clhRMs6yTABy" writeOutText="false" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields>
      <codeclassfield role_id="0" listClassName="" field_type="158550824" parent_id="uSaGfZOs1d1L" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="uSaGfZOs1d1L" writeOutText="false" indentLevel="1" text="public RecurrentNetwork ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="" accessType="0" parent_id="uSaGfZOs1d1L" writeOutText="false" classfield_id="uSaGfZOs1d1L" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="1" parent_id="uSaGfZOs1d1L" writeOutText="false" classfield_id="uSaGfZOs1d1L" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="2" parent_id="uSaGfZOs1d1L" writeOutText="false" classfield_id="uSaGfZOs1d1L" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="3" parent_id="uSaGfZOs1d1L" writeOutText="false" classfield_id="uSaGfZOs1d1L" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;RecurrentNetwork item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;RecurrentNetwork>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="4" parent_id="uSaGfZOs1d1L" writeOutText="false" classfield_id="uSaGfZOs1d1L" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="158550824" parent_id="KeOt5fVi8hdw" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="KeOt5fVi8hdw" writeOutText="false" indentLevel="1" text="public RecurrentPerceptron ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="KeOt5fVi8hdw" writeOutText="false" classfield_id="KeOt5fVi8hdw" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="KeOt5fVi8hdw" writeOutText="false" classfield_id="KeOt5fVi8hdw" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="KeOt5fVi8hdw" writeOutText="false" classfield_id="KeOt5fVi8hdw" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="KeOt5fVi8hdw" writeOutText="false" classfield_id="KeOt5fVi8hdw" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;RecurrentPerceptron item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;RecurrentPerceptron>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="KeOt5fVi8hdw" writeOutText="false" classfield_id="KeOt5fVi8hdw" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="QFWQXDQLlPLZ" fileExt=".cpp" parent_class="453xLErUIRsu" id="453xLErUIRsu" fileName="DistributedRecurrentLayer" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;distributedrecurrentlayer.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors"/>
       </header>
       <textblocks>
        <codeoperation tag="operation_frTpjN73PZiI" parent_id="frTpjN73PZiI" writeOutText="false" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Methods"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields>
      <codeclassfield role_id="1" listClassName="" field_type="158635368" parent_id="cR05h9jHGnbP" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="cR05h9jHGnbP" writeOutText="false" indentLevel="1" text="public DistributedNeuralLayer ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="cR05h9jHGnbP" writeOutText="false" classfield_id="cR05h9jHGnbP" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="cR05h9jHGnbP" writeOutText="false" classfield_id="cR05h9jHGnbP" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="cR05h9jHGnbP" writeOutText="false" classfield_id="cR05h9jHGnbP" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="cR05h9jHGnbP" writeOutText="false" classfield_id="cR05h9jHGnbP" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;DistributedNeuralLayer item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;DistributedNeuralLayer>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="cR05h9jHGnbP" writeOutText="false" classfield_id="cR05h9jHGnbP" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="158635368" parent_id="Rrx2GFdIJsTG" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="Rrx2GFdIJsTG" writeOutText="false" indentLevel="1" text="public DistributedNeuralLayer ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="Rrx2GFdIJsTG" writeOutText="false" classfield_id="Rrx2GFdIJsTG" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="Rrx2GFdIJsTG" writeOutText="false" classfield_id="Rrx2GFdIJsTG" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="Rrx2GFdIJsTG" writeOutText="false" classfield_id="Rrx2GFdIJsTG" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="Rrx2GFdIJsTG" writeOutText="false" classfield_id="Rrx2GFdIJsTG" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;DistributedNeuralLayer item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;DistributedNeuralLayer>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="Rrx2GFdIJsTG" writeOutText="false" classfield_id="Rrx2GFdIJsTG" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="QFWQXDQLlPLZ" fileExt=".cpp" parent_class="JzGsbheTUlAY" id="JzGsbheTUlAY" fileName="NeuralNetwork" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;neuralnetwork.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors"/>
       </header>
       <textblocks>
        <codeoperation tag="operation_aUYxK74e5KUg" parent_id="aUYxK74e5KUg" writeOutText="false" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeoperation>
        <codeoperation tag="operation_91VUan5QXuPd" parent_id="91VUan5QXuPd" writeOutText="false" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Methods"/>
       </header>
       <textblocks>
        <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="1iL4Bb0k6QtJ" writeOutText="false" classfield_id="1iL4Bb0k6QtJ" text="return layers;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="1iL4Bb0k6QtJ" writeOutText="false" classfield_id="1iL4Bb0k6QtJ" text="layers = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeoperation tag="operation_MQDNgYyi0wEK" parent_id="MQDNgYyi0wEK" writeOutText="false" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeoperation>
        <codeoperation tag="operation_C6q4VcEmJj15" parent_id="C6q4VcEmJj15" writeOutText="false" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeoperation>
        <codeoperation tag="operation_ApCLf8Ue7DsO" parent_id="ApCLf8Ue7DsO" writeOutText="false" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeoperation>
        <codeoperation tag="operation_DcHrkXfDasno" parent_id="DcHrkXfDasno" writeOutText="false" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeoperation>
        <codeoperation tag="operation_l5kiProsIUxD" parent_id="l5kiProsIUxD" writeOutText="false" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeoperation>
        <codeoperation tag="operation_6USnl5MW84DX" parent_id="6USnl5MW84DX" writeOutText="false" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="1iL4Bb0k6QtJ" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="1iL4Bb0k6QtJ" indentLevel="1" text="protected vector&lt; NeuralLayer * > layers;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="1iL4Bb0k6QtJ" writeOutText="false" classfield_id="1iL4Bb0k6QtJ" text="return layers;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="1iL4Bb0k6QtJ" writeOutText="false" classfield_id="1iL4Bb0k6QtJ" text="layers = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="157945320" parent_id="d5CGQdjTeav5" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="d5CGQdjTeav5" writeOutText="false" indentLevel="1" text="public DistributedNeuralNetwork ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="" accessType="0" parent_id="d5CGQdjTeav5" writeOutText="false" classfield_id="d5CGQdjTeav5" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="1" parent_id="d5CGQdjTeav5" writeOutText="false" classfield_id="d5CGQdjTeav5" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="2" parent_id="d5CGQdjTeav5" writeOutText="false" classfield_id="d5CGQdjTeav5" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="3" parent_id="d5CGQdjTeav5" writeOutText="false" classfield_id="d5CGQdjTeav5" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;DistributedNeuralNetwork item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;DistributedNeuralNetwork>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="4" parent_id="d5CGQdjTeav5" writeOutText="false" classfield_id="d5CGQdjTeav5" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="2097251" parent_id="BOdwKnMobffV" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="BOdwKnMobffV" writeOutText="false" indentLevel="1" text="public NeuralLayer ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="BOdwKnMobffV" writeOutText="false" classfield_id="BOdwKnMobffV" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="BOdwKnMobffV" writeOutText="false" classfield_id="BOdwKnMobffV" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="BOdwKnMobffV" writeOutText="false" classfield_id="BOdwKnMobffV" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="BOdwKnMobffV" writeOutText="false" classfield_id="BOdwKnMobffV" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;NeuralLayer item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;NeuralLayer>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="BOdwKnMobffV" writeOutText="false" classfield_id="BOdwKnMobffV" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="QFWQXDQLlPLZ" fileExt=".cpp" parent_class="hhb49XgyNuc9" id="hhb49XgyNuc9" fileName="DistributedNeuralNetwork" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;distributedneuralnetwork.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors"/>
       </header>
       <textblocks>
        <codeoperation tag="operation_QfohauLudg73" parent_id="QfohauLudg73" writeOutText="false" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Methods"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields>
      <codeclassfield role_id="1" listClassName="" field_type="158675632" parent_id="d5CGQdjTeav5" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="d5CGQdjTeav5" writeOutText="false" indentLevel="1" text="public NeuralNetwork ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="d5CGQdjTeav5" writeOutText="false" classfield_id="d5CGQdjTeav5" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="d5CGQdjTeav5" writeOutText="false" classfield_id="d5CGQdjTeav5" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="d5CGQdjTeav5" writeOutText="false" classfield_id="d5CGQdjTeav5" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="d5CGQdjTeav5" writeOutText="false" classfield_id="d5CGQdjTeav5" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;NeuralNetwork item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;NeuralNetwork>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="d5CGQdjTeav5" writeOutText="false" classfield_id="d5CGQdjTeav5" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="158675632" parent_id="FA25H4ptjxMn" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="FA25H4ptjxMn" writeOutText="false" indentLevel="1" text="public DistributedNeuralLayer ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="FA25H4ptjxMn" writeOutText="false" classfield_id="FA25H4ptjxMn" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="FA25H4ptjxMn" writeOutText="false" classfield_id="FA25H4ptjxMn" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="FA25H4ptjxMn" writeOutText="false" classfield_id="FA25H4ptjxMn" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="FA25H4ptjxMn" writeOutText="false" classfield_id="FA25H4ptjxMn" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;DistributedNeuralLayer item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;DistributedNeuralLayer>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="FA25H4ptjxMn" writeOutText="false" classfield_id="FA25H4ptjxMn" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="QFWQXDQLlPLZ" fileExt=".cpp" parent_class="Z1s60PigJGw5" id="Z1s60PigJGw5" fileName="NeuralLayer" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;neurallayer.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors"/>
       </header>
       <textblocks>
        <codeoperation tag="operation_SIRcVcs8Hary" parent_id="SIRcVcs8Hary" writeOutText="false" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeoperation>
        <codeoperation tag="operation_8jnufKPWMh8v" parent_id="8jnufKPWMh8v" writeOutText="false" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Methods"/>
       </header>
       <textblocks>
        <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="gjZ2Zj4NBFTa" writeOutText="false" classfield_id="gjZ2Zj4NBFTa" text="return neurons;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="gjZ2Zj4NBFTa" writeOutText="false" classfield_id="gjZ2Zj4NBFTa" text="neurons = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeoperation tag="operation_yUz9P0Yy1R22" parent_id="yUz9P0Yy1R22" writeOutText="false" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeoperation>
        <codeoperation tag="operation_xkMPGRqtag4L" parent_id="xkMPGRqtag4L" writeOutText="false" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeoperation>
        <codeoperation tag="operation_Di2ZTfSQIaTi" parent_id="Di2ZTfSQIaTi" writeOutText="false" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeoperation>
        <codeoperation tag="operation_avgozR9abjTq" parent_id="avgozR9abjTq" writeOutText="false" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeoperation>
        <codeoperation tag="operation_AuibAFxPwm4a" parent_id="AuibAFxPwm4a" writeOutText="false" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeoperation>
        <codeoperation tag="operation_78ZJKPiutzRb" parent_id="78ZJKPiutzRb" writeOutText="false" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeoperation>
        <codeoperation tag="operation_fhkkhgtomQ77" parent_id="fhkkhgtomQ77" writeOutText="false" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeoperation>
        <codeoperation tag="operation_Gil38q8xe7dQ" parent_id="Gil38q8xe7dQ" writeOutText="false" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeoperation>
        <codeoperation tag="operation_A8HPqtCIaNuU" parent_id="A8HPqtCIaNuU" writeOutText="false" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeoperation>
        <codeoperation tag="operation_H4Y0qgWHHAkA" parent_id="H4Y0qgWHHAkA" writeOutText="false" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeoperation>
        <codeoperation tag="operation_1q9BFEAhyElS" parent_id="1q9BFEAhyElS" writeOutText="false" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="gjZ2Zj4NBFTa" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="gjZ2Zj4NBFTa" indentLevel="1" text="protected vector&lt; Perceptron * > neurons;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="gjZ2Zj4NBFTa" writeOutText="false" classfield_id="gjZ2Zj4NBFTa" text="return neurons;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="gjZ2Zj4NBFTa" writeOutText="false" classfield_id="gjZ2Zj4NBFTa" text="neurons = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="4980844" parent_id="BOdwKnMobffV" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="BOdwKnMobffV" writeOutText="false" indentLevel="1" text="public NeuralNetwork ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="" accessType="0" parent_id="BOdwKnMobffV" writeOutText="false" classfield_id="BOdwKnMobffV" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="1" parent_id="BOdwKnMobffV" writeOutText="false" classfield_id="BOdwKnMobffV" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="2" parent_id="BOdwKnMobffV" writeOutText="false" classfield_id="BOdwKnMobffV" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="3" parent_id="BOdwKnMobffV" writeOutText="false" classfield_id="BOdwKnMobffV" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;NeuralNetwork item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;NeuralNetwork>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="4" parent_id="BOdwKnMobffV" writeOutText="false" classfield_id="BOdwKnMobffV" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="4980844" parent_id="xRpy4qJb6AM8" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="xRpy4qJb6AM8" writeOutText="false" indentLevel="1" text="public RecurrentNetwork ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="" accessType="0" parent_id="xRpy4qJb6AM8" writeOutText="false" classfield_id="xRpy4qJb6AM8" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="1" parent_id="xRpy4qJb6AM8" writeOutText="false" classfield_id="xRpy4qJb6AM8" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="2" parent_id="xRpy4qJb6AM8" writeOutText="false" classfield_id="xRpy4qJb6AM8" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="3" parent_id="xRpy4qJb6AM8" writeOutText="false" classfield_id="xRpy4qJb6AM8" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;RecurrentNetwork item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;RecurrentNetwork>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="4" parent_id="xRpy4qJb6AM8" writeOutText="false" classfield_id="xRpy4qJb6AM8" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="4980844" parent_id="TJHXtQSpGlzV" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="TJHXtQSpGlzV" writeOutText="false" indentLevel="1" text="public RecurrentNetwork ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="" accessType="0" parent_id="TJHXtQSpGlzV" writeOutText="false" classfield_id="TJHXtQSpGlzV" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="1" parent_id="TJHXtQSpGlzV" writeOutText="false" classfield_id="TJHXtQSpGlzV" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="2" parent_id="TJHXtQSpGlzV" writeOutText="false" classfield_id="TJHXtQSpGlzV" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="3" parent_id="TJHXtQSpGlzV" writeOutText="false" classfield_id="TJHXtQSpGlzV" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;RecurrentNetwork item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;RecurrentNetwork>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="4" parent_id="TJHXtQSpGlzV" writeOutText="false" classfield_id="TJHXtQSpGlzV" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="QFWQXDQLlPLZ" fileExt=".cpp" parent_class="VNPkKjaMVEIi" id="VNPkKjaMVEIi" fileName="DistributedNeuralLayer" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;distributedneurallayer.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors"/>
       </header>
       <textblocks>
        <codeoperation tag="operation_V9OBKVX2TnGk" parent_id="V9OBKVX2TnGk" writeOutText="false" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeoperation>
        <codeoperation tag="operation_egGWvunyywMF" parent_id="egGWvunyywMF" writeOutText="false" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Methods"/>
       </header>
       <textblocks>
        <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="SbjXfoPfaQRu" writeOutText="false" classfield_id="SbjXfoPfaQRu" text="return neuronsPerZone;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="SbjXfoPfaQRu" writeOutText="false" classfield_id="SbjXfoPfaQRu" text="neuronsPerZone = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_2" accessType="0" parent_id="yYcNlz8I3gHE" writeOutText="false" classfield_id="yYcNlz8I3gHE" text="return width;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_3" accessType="1" parent_id="yYcNlz8I3gHE" writeOutText="false" classfield_id="yYcNlz8I3gHE" text="width = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_4" accessType="0" parent_id="CzzDRnTrNCN0" writeOutText="false" classfield_id="CzzDRnTrNCN0" text="return height;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_5" accessType="1" parent_id="CzzDRnTrNCN0" writeOutText="false" classfield_id="CzzDRnTrNCN0" text="height = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_6" accessType="0" parent_id="0mgYA5R8c3VN" writeOutText="false" classfield_id="0mgYA5R8c3VN" text="return dimensionWidth;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_7" accessType="1" parent_id="0mgYA5R8c3VN" writeOutText="false" classfield_id="0mgYA5R8c3VN" text="dimensionWidth = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_8" accessType="0" parent_id="2cg5GvISsHdJ" writeOutText="false" classfield_id="2cg5GvISsHdJ" text="return dimensionHeight;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_9" accessType="1" parent_id="2cg5GvISsHdJ" writeOutText="false" classfield_id="2cg5GvISsHdJ" text="dimensionHeight = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_10" accessType="0" parent_id="368QHVOHF4qQ" writeOutText="false" classfield_id="368QHVOHF4qQ" text="return inputWidth;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_11" accessType="1" parent_id="368QHVOHF4qQ" writeOutText="false" classfield_id="368QHVOHF4qQ" text="inputWidth = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_12" accessType="0" parent_id="8HWkK07KclOq" writeOutText="false" classfield_id="8HWkK07KclOq" text="return inputHeight;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_13" accessType="1" parent_id="8HWkK07KclOq" writeOutText="false" classfield_id="8HWkK07KclOq" text="inputHeight = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeoperation tag="operation_EtOKmoNTD4PD" parent_id="EtOKmoNTD4PD" writeOutText="false" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeoperation>
        <codeoperation tag="operation_jg1UgIMEnqSj" parent_id="jg1UgIMEnqSj" writeOutText="false" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeoperation>
        <codeoperation tag="operation_caqvEbjRKipG" parent_id="caqvEbjRKipG" writeOutText="false" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeoperation>
        <codeoperation tag="operation_r0UjazLtHHer" parent_id="r0UjazLtHHer" writeOutText="false" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeoperation>
        <codeoperation tag="operation_xfisgdsKmWGJ" parent_id="xfisgdsKmWGJ" writeOutText="false" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="SbjXfoPfaQRu" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="SbjXfoPfaQRu" indentLevel="1" text="protected unsigned neuronsPerZone;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="SbjXfoPfaQRu" writeOutText="false" classfield_id="SbjXfoPfaQRu" text="return neuronsPerZone;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="SbjXfoPfaQRu" writeOutText="false" classfield_id="SbjXfoPfaQRu" text="neuronsPerZone = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="yYcNlz8I3gHE" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="yYcNlz8I3gHE" indentLevel="1" text="protected unsigned width;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_2" accessType="0" parent_id="yYcNlz8I3gHE" writeOutText="false" classfield_id="yYcNlz8I3gHE" text="return width;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_3" accessType="1" parent_id="yYcNlz8I3gHE" writeOutText="false" classfield_id="yYcNlz8I3gHE" text="width = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="CzzDRnTrNCN0" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="CzzDRnTrNCN0" indentLevel="1" text="protected unsigned height;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_4" accessType="0" parent_id="CzzDRnTrNCN0" writeOutText="false" classfield_id="CzzDRnTrNCN0" text="return height;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_5" accessType="1" parent_id="CzzDRnTrNCN0" writeOutText="false" classfield_id="CzzDRnTrNCN0" text="height = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="0mgYA5R8c3VN" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="0mgYA5R8c3VN" indentLevel="1" text="protected unsigned dimensionWidth;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_6" accessType="0" parent_id="0mgYA5R8c3VN" writeOutText="false" classfield_id="0mgYA5R8c3VN" text="return dimensionWidth;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_7" accessType="1" parent_id="0mgYA5R8c3VN" writeOutText="false" classfield_id="0mgYA5R8c3VN" text="dimensionWidth = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="2cg5GvISsHdJ" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="2cg5GvISsHdJ" indentLevel="1" text="protected unsigned dimensionHeight;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_8" accessType="0" parent_id="2cg5GvISsHdJ" writeOutText="false" classfield_id="2cg5GvISsHdJ" text="return dimensionHeight;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_9" accessType="1" parent_id="2cg5GvISsHdJ" writeOutText="false" classfield_id="2cg5GvISsHdJ" text="dimensionHeight = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="368QHVOHF4qQ" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="368QHVOHF4qQ" indentLevel="1" text="protected unsigned inputWidth;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_10" accessType="0" parent_id="368QHVOHF4qQ" writeOutText="false" classfield_id="368QHVOHF4qQ" text="return inputWidth;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_11" accessType="1" parent_id="368QHVOHF4qQ" writeOutText="false" classfield_id="368QHVOHF4qQ" text="inputWidth = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="8HWkK07KclOq" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="8HWkK07KclOq" indentLevel="1" text="protected unsigned inputHeight;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_12" accessType="0" parent_id="8HWkK07KclOq" writeOutText="false" classfield_id="8HWkK07KclOq" text="return inputHeight;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_13" accessType="1" parent_id="8HWkK07KclOq" writeOutText="false" classfield_id="8HWkK07KclOq" text="inputHeight = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="4980844" parent_id="FA25H4ptjxMn" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="FA25H4ptjxMn" writeOutText="false" indentLevel="1" text="public DistributedNeuralNetwork ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="" accessType="0" parent_id="FA25H4ptjxMn" writeOutText="false" classfield_id="FA25H4ptjxMn" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="1" parent_id="FA25H4ptjxMn" writeOutText="false" classfield_id="FA25H4ptjxMn" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="2" parent_id="FA25H4ptjxMn" writeOutText="false" classfield_id="FA25H4ptjxMn" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="3" parent_id="FA25H4ptjxMn" writeOutText="false" classfield_id="FA25H4ptjxMn" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;DistributedNeuralNetwork item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;DistributedNeuralNetwork>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="4" parent_id="FA25H4ptjxMn" writeOutText="false" classfield_id="FA25H4ptjxMn" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="4980844" parent_id="cR05h9jHGnbP" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="cR05h9jHGnbP" writeOutText="false" indentLevel="1" text="public DistributedRecurrentLayer ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="" accessType="0" parent_id="cR05h9jHGnbP" writeOutText="false" classfield_id="cR05h9jHGnbP" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="1" parent_id="cR05h9jHGnbP" writeOutText="false" classfield_id="cR05h9jHGnbP" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="2" parent_id="cR05h9jHGnbP" writeOutText="false" classfield_id="cR05h9jHGnbP" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="3" parent_id="cR05h9jHGnbP" writeOutText="false" classfield_id="cR05h9jHGnbP" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;DistributedRecurrentLayer item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;DistributedRecurrentLayer>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="4" parent_id="cR05h9jHGnbP" writeOutText="false" classfield_id="cR05h9jHGnbP" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="4980844" parent_id="Rrx2GFdIJsTG" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="Rrx2GFdIJsTG" writeOutText="false" indentLevel="1" text="public DistributedRecurrentLayer ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="" accessType="0" parent_id="Rrx2GFdIJsTG" writeOutText="false" classfield_id="Rrx2GFdIJsTG" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="1" parent_id="Rrx2GFdIJsTG" writeOutText="false" classfield_id="Rrx2GFdIJsTG" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="2" parent_id="Rrx2GFdIJsTG" writeOutText="false" classfield_id="Rrx2GFdIJsTG" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="3" parent_id="Rrx2GFdIJsTG" writeOutText="false" classfield_id="Rrx2GFdIJsTG" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;DistributedRecurrentLayer item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;DistributedRecurrentLayer>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="4" parent_id="Rrx2GFdIJsTG" writeOutText="false" classfield_id="Rrx2GFdIJsTG" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="QFWQXDQLlPLZ" fileExt=".cpp" parent_class="dETz9cSzCHmb" id="dETz9cSzCHmb" fileName="Perceptron" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;perceptron.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors"/>
       </header>
       <textblocks>
        <codeoperation tag="operation_LIg4eleM1DlI" parent_id="LIg4eleM1DlI" writeOutText="false" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Methods"/>
       </header>
       <textblocks>
        <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="5WNkBfA6SDI2" writeOutText="false" classfield_id="5WNkBfA6SDI2" text="return momentum;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="5WNkBfA6SDI2" writeOutText="false" classfield_id="5WNkBfA6SDI2" text="momentum = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_2" accessType="0" parent_id="Sp6wpQSaeHHH" writeOutText="false" classfield_id="Sp6wpQSaeHHH" text="return w0;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_3" accessType="1" parent_id="Sp6wpQSaeHHH" writeOutText="false" classfield_id="Sp6wpQSaeHHH" text="w0 = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_4" accessType="0" parent_id="TO6LrsRNFBXt" writeOutText="false" classfield_id="TO6LrsRNFBXt" text="return deltaW;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_5" accessType="1" parent_id="TO6LrsRNFBXt" writeOutText="false" classfield_id="TO6LrsRNFBXt" text="deltaW = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_6" accessType="0" parent_id="8Q3JvubUD8LY" writeOutText="false" classfield_id="8Q3JvubUD8LY" text="return alpha;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_7" accessType="1" parent_id="8Q3JvubUD8LY" writeOutText="false" classfield_id="8Q3JvubUD8LY" text="alpha = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_8" accessType="0" parent_id="iGYRJMXhOqcI" writeOutText="false" classfield_id="iGYRJMXhOqcI" text="return dimension;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_9" accessType="1" parent_id="iGYRJMXhOqcI" writeOutText="false" classfield_id="iGYRJMXhOqcI" text="dimension = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_10" accessType="0" parent_id="P6UVP251lEqQ" writeOutText="false" classfield_id="P6UVP251lEqQ" text="return weights;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_11" accessType="1" parent_id="P6UVP251lEqQ" writeOutText="false" classfield_id="P6UVP251lEqQ" text="weights = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeoperation tag="operation_JoXyEHwNPD3Z" parent_id="JoXyEHwNPD3Z" writeOutText="false" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeoperation>
        <codeoperation tag="operation_mTIYXvaWu0ix" parent_id="mTIYXvaWu0ix" writeOutText="false" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeoperation>
        <codeoperation tag="operation_IS7Dgqy24Ico" parent_id="IS7Dgqy24Ico" writeOutText="false" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeoperation>
        <codeoperation tag="operation_dUfikHWgHph0" parent_id="dUfikHWgHph0" writeOutText="false" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeoperation>
        <codeoperation tag="operation_JbLXrLTJAZD0" parent_id="JbLXrLTJAZD0" writeOutText="false" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeoperation>
        <codeoperation tag="operation_K6FVqX16XuD6" parent_id="K6FVqX16XuD6" writeOutText="false" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeoperation>
        <codeoperation tag="operation_8BYd5jhAPPs7" parent_id="8BYd5jhAPPs7" writeOutText="false" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeoperation>
        <codeoperation tag="operation_68FTY6ZgLRcO" parent_id="68FTY6ZgLRcO" writeOutText="false" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeoperation>
        <codeoperation tag="operation_y29JTlfrufsM" parent_id="y29JTlfrufsM" writeOutText="false" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeoperation>
        <codeoperation tag="operation_M2aFiSb7JFOs" parent_id="M2aFiSb7JFOs" writeOutText="false" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeoperation>
        <codeoperation tag="operation_aHwVVZKXp9Xw" parent_id="aHwVVZKXp9Xw" writeOutText="false" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeoperation>
        <codeoperation tag="operation_UiDnvbgVqa1L" parent_id="UiDnvbgVqa1L" writeOutText="false" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeoperation>
        <codeoperation tag="operation_E2ke5qjZWwLS" parent_id="E2ke5qjZWwLS" writeOutText="false" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeoperation>
        <codeoperation tag="operation_YzxMZwgjEXeg" parent_id="YzxMZwgjEXeg" writeOutText="false" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeoperation>
        <codeoperation tag="operation_Zzh6u2YQ1Tmb" parent_id="Zzh6u2YQ1Tmb" writeOutText="false" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeoperation>
        <codeoperation tag="operation_o0Qtjg3IeiOW" parent_id="o0Qtjg3IeiOW" writeOutText="false" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeoperation>
        <codeoperation tag="operation_gQCp2UvZxsXB" parent_id="gQCp2UvZxsXB" writeOutText="false" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="5WNkBfA6SDI2" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="5WNkBfA6SDI2" indentLevel="1" text="private float momentum;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="5WNkBfA6SDI2" writeOutText="false" classfield_id="5WNkBfA6SDI2" text="return momentum;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="5WNkBfA6SDI2" writeOutText="false" classfield_id="5WNkBfA6SDI2" text="momentum = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="Sp6wpQSaeHHH" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="Sp6wpQSaeHHH" indentLevel="1" text="private float w0;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_2" accessType="0" parent_id="Sp6wpQSaeHHH" writeOutText="false" classfield_id="Sp6wpQSaeHHH" text="return w0;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_3" accessType="1" parent_id="Sp6wpQSaeHHH" writeOutText="false" classfield_id="Sp6wpQSaeHHH" text="w0 = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="TO6LrsRNFBXt" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="TO6LrsRNFBXt" indentLevel="1" text="private vector&lt; float > deltaW;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_4" accessType="0" parent_id="TO6LrsRNFBXt" writeOutText="false" classfield_id="TO6LrsRNFBXt" text="return deltaW;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_5" accessType="1" parent_id="TO6LrsRNFBXt" writeOutText="false" classfield_id="TO6LrsRNFBXt" text="deltaW = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="8Q3JvubUD8LY" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="8Q3JvubUD8LY" indentLevel="1" text="protected float alpha;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_6" accessType="0" parent_id="8Q3JvubUD8LY" writeOutText="false" classfield_id="8Q3JvubUD8LY" text="return alpha;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_7" accessType="1" parent_id="8Q3JvubUD8LY" writeOutText="false" classfield_id="8Q3JvubUD8LY" text="alpha = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="iGYRJMXhOqcI" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="iGYRJMXhOqcI" indentLevel="1" text="protected unsigned dimension;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_8" accessType="0" parent_id="iGYRJMXhOqcI" writeOutText="false" classfield_id="iGYRJMXhOqcI" text="return dimension;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_9" accessType="1" parent_id="iGYRJMXhOqcI" writeOutText="false" classfield_id="iGYRJMXhOqcI" text="dimension = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="P6UVP251lEqQ" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="P6UVP251lEqQ" indentLevel="1" text="protected vector&lt; float > weights;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_10" accessType="0" parent_id="P6UVP251lEqQ" writeOutText="false" classfield_id="P6UVP251lEqQ" text="return weights;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_11" accessType="1" parent_id="P6UVP251lEqQ" writeOutText="false" classfield_id="P6UVP251lEqQ" text="weights = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="QFWQXDQLlPLZ" fileExt=".cpp" parent_class="G0qEJmlsjgee" id="G0qEJmlsjgee" fileName="ContinuousPerceptron" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;continuousperceptron.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors"/>
       </header>
       <textblocks>
        <codeoperation tag="operation_1RLfqqRMdPln" parent_id="1RLfqqRMdPln" writeOutText="false" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Methods"/>
       </header>
       <textblocks>
        <codeoperation tag="operation_adsBmp5fYqKv" parent_id="adsBmp5fYqKv" writeOutText="false" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeoperation>
        <codeoperation tag="operation_zsnXj5SygPXm" parent_id="zsnXj5SygPXm" writeOutText="false" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="hwD8QbZLtYF3" id="hwD8QbZLtYF3" fileName="Perceptron" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;perceptron.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Methods"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="DNuggPjPsyP5" id="cppheaderDNuggPjPsyP5" fileName="vector" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef VECTOR_H&amp;#010;#define VECTOR_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Namespace"/>
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false">
         <header>
          <cppcodedocumentation tag="" writeOutText="false"/>
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="DNuggPjPsyP5" canDelete="false">
         <header>
          <cppcodedocumentation tag="" text="Class vector&amp;#010;"/>
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Public stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="vector ( ) { }">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor"/>
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Protected stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Private stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //VECTOR_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="ej9ph9SFjM5c" id="cppheaderej9ph9SFjM5c" fileName="unsigned" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef UNSIGNED_H&amp;#010;#define UNSIGNED_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Namespace"/>
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false">
         <header>
          <cppcodedocumentation tag="" writeOutText="false"/>
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="ej9ph9SFjM5c" canDelete="false">
         <header>
          <cppcodedocumentation tag="" text="Class unsigned&amp;#010;"/>
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Public stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="unsigned ( ) { }">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor"/>
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Protected stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Private stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //UNSIGNED_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="PVxsSYZCgFsg" id="cppheaderPVxsSYZCgFsg" fileName="RecurrentNetwork" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef RECURRENTNETWORK_H&amp;#010;#define RECURRENTNETWORK_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Namespace"/>
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false">
         <header>
          <cppcodedocumentation tag="" writeOutText="false"/>
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="PVxsSYZCgFsg" canDelete="false">
         <header>
          <cppcodedocumentation tag="" text="Class RecurrentNetwork&amp;#010;"/>
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Public stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="RecurrentNetwork ( ) { }">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor"/>
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Protected stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Private stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //RECURRENTNETWORK_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="lUmu57t5oVVF" id="cppheaderlUmu57t5oVVF" fileName="ContinuousPerceptron" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef CONTINUOUSPERCEPTRON_H&amp;#010;#define CONTINUOUSPERCEPTRON_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Namespace"/>
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false">
         <header>
          <cppcodedocumentation tag="" writeOutText="false"/>
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="lUmu57t5oVVF" canDelete="false">
         <header>
          <cppcodedocumentation tag="" text="Class ContinuousPerceptron&amp;#010;"/>
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Public stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="ContinuousPerceptron ( ) { }">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor"/>
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Protected stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Private stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //CONTINUOUSPERCEPTRON_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="vDoENs1imyWU" id="cppheadervDoENs1imyWU" fileName="RecurrentLayer" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef RECURRENTLAYER_H&amp;#010;#define RECURRENTLAYER_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Namespace"/>
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false">
         <header>
          <cppcodedocumentation tag="" writeOutText="false"/>
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="vDoENs1imyWU" canDelete="false">
         <header>
          <cppcodedocumentation tag="" text="Class RecurrentLayer&amp;#010;"/>
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Public stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="RecurrentLayer ( ) { }">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor"/>
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Protected stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Private stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //RECURRENTLAYER_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="Cd3ZMk7tuypu" id="cppheaderCd3ZMk7tuypu" fileName="DistributedNeuralLayer" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef DISTRIBUTEDNEURALLAYER_H&amp;#010;#define DISTRIBUTEDNEURALLAYER_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Namespace"/>
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false">
         <header>
          <cppcodedocumentation tag="" writeOutText="false"/>
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="Cd3ZMk7tuypu" canDelete="false">
         <header>
          <cppcodedocumentation tag="" text="Class DistributedNeuralLayer&amp;#010;"/>
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Public stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="DistributedNeuralLayer ( ) { }">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor"/>
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Protected stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Private stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //DISTRIBUTEDNEURALLAYER_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="sLOKTXIZwIMh" id="cppheadersLOKTXIZwIMh" fileName="NeuralNetwork" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef NEURALNETWORK_H&amp;#010;#define NEURALNETWORK_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Namespace"/>
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false">
         <header>
          <cppcodedocumentation tag="" writeOutText="false"/>
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="sLOKTXIZwIMh" canDelete="false">
         <header>
          <cppcodedocumentation tag="" text="Class NeuralNetwork&amp;#010;"/>
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Public stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="NeuralNetwork ( ) { }">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor"/>
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Protected stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Private stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //NEURALNETWORK_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="Yhu5mh83d9O0" id="cppheaderYhu5mh83d9O0" fileName="NeuralLayer" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef NEURALLAYER_H&amp;#010;#define NEURALLAYER_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Namespace"/>
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false">
         <header>
          <cppcodedocumentation tag="" writeOutText="false"/>
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="Yhu5mh83d9O0" canDelete="false">
         <header>
          <cppcodedocumentation tag="" text="Class NeuralLayer&amp;#010;"/>
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Public stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="NeuralLayer ( ) { }">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor"/>
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Protected stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Private stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //NEURALLAYER_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="QFWQXDQLlPLZ" fileExt=".h" parent_class="lq5kDDwdDmaM" id="cppheaderlq5kDDwdDmaM" fileName="ElmanNetwork" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef ELMANNETWORK_H&amp;#010;#define ELMANNETWORK_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;neuralnetwork.h&quot;&amp;#010;#include &quot;.h&quot;&amp;#010;#include &quot;unsigned.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Namespace"/>
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false">
         <header>
          <cppcodedocumentation tag="" writeOutText="false"/>
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="lq5kDDwdDmaM" canDelete="false">
         <header>
          <cppcodedocumentation tag="" text="Class ElmanNetwork&amp;#010;"/>
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Public stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="ElmanNetwork ( ) { }">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor"/>
                 </header>
                </codeblockwithcomments>
                <codeoperation tag="operation_acfZ31GZpGod" parent_id="acfZ31GZpGod" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param layerCount &amp;#010;@param sizes[] &amp;#010;@param dimension &amp;#010;@param alpha "/>
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks>
                  <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="jTjo55ulSb3S" indentLevel="1" classfield_id="jTjo55ulSb3S" text="return hiddenCopy;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_2" accessType="1" parent_id="jTjo55ulSb3S" indentLevel="1" classfield_id="jTjo55ulSb3S" text="hiddenCopy = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_3" accessType="0" parent_id="Yn0EooloUsDg" indentLevel="1" classfield_id="Yn0EooloUsDg" text="return tmpHiddenCopy;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_4" accessType="1" parent_id="Yn0EooloUsDg" indentLevel="1" classfield_id="Yn0EooloUsDg" text="tmpHiddenCopy = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_5" accessType="0" parent_id="K6X5GOdjkjks" indentLevel="1" classfield_id="K6X5GOdjkjks" text="return hiddenSize;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_6" accessType="1" parent_id="K6X5GOdjkjks" indentLevel="1" classfield_id="K6X5GOdjkjks" text="hiddenSize = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks>
                <codeoperation tag="operation_MarKs3KAWuGD" parent_id="MarKs3KAWuGD" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1"/>
                 </header>
                </codeoperation>
                <codeoperation tag="operation_Fyu647NkVJ7Z" parent_id="Fyu647NkVJ7Z" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1"/>
                 </header>
                </codeoperation>
                <codeoperation tag="operation_1Ri8PeJlEA35" parent_id="1Ri8PeJlEA35" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param input &amp;#010;@param target "/>
                 </header>
                </codeoperation>
                <codeoperation tag="operation_oQuzMLh88udJ" parent_id="oQuzMLh88udJ" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param input "/>
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Protected stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Private stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks>
              <ccfdeclarationcodeblock tag="tblock_0" parent_id="jTjo55ulSb3S" indentLevel="1" text=" vector&lt; float > hiddenCopy;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_0" parent_id="Yn0EooloUsDg" indentLevel="1" text=" vector&lt; float > tmpHiddenCopy;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_1" parent_id="K6X5GOdjkjks" indentLevel="1" text=" unsigned hiddenSize;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //ELMANNETWORK_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="jTjo55ulSb3S" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock tag="tblock_0" parent_id="jTjo55ulSb3S" indentLevel="1" text=" vector&lt; float > hiddenCopy;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="jTjo55ulSb3S" indentLevel="1" classfield_id="jTjo55ulSb3S" text="return hiddenCopy;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_2" accessType="1" parent_id="jTjo55ulSb3S" indentLevel="1" classfield_id="jTjo55ulSb3S" text="hiddenCopy = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="Yn0EooloUsDg" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock tag="_0" parent_id="Yn0EooloUsDg" indentLevel="1" text=" vector&lt; float > tmpHiddenCopy;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_3" accessType="0" parent_id="Yn0EooloUsDg" indentLevel="1" classfield_id="Yn0EooloUsDg" text="return tmpHiddenCopy;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_4" accessType="1" parent_id="Yn0EooloUsDg" indentLevel="1" classfield_id="Yn0EooloUsDg" text="tmpHiddenCopy = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="K6X5GOdjkjks" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock tag="_1" parent_id="K6X5GOdjkjks" indentLevel="1" text=" unsigned hiddenSize;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_5" accessType="0" parent_id="K6X5GOdjkjks" indentLevel="1" classfield_id="K6X5GOdjkjks" text="return hiddenSize;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_6" accessType="1" parent_id="K6X5GOdjkjks" indentLevel="1" classfield_id="K6X5GOdjkjks" text="hiddenSize = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="QFWQXDQLlPLZ" fileExt=".h" parent_class="iBZSGKLq62FS" id="cppheaderiBZSGKLq62FS" fileName="RecurrentNetwork" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef RECURRENTNETWORK_H&amp;#010;#define RECURRENTNETWORK_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;neuralnetwork.h&quot;&amp;#010;#include &quot;neuralnetwork.h&quot;&amp;#010;#include &quot;recurrentlayer.h&quot;&amp;#010;#include &quot;neurallayer.h&quot;&amp;#010;#include &quot;unsigned.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Namespace"/>
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false">
         <header>
          <cppcodedocumentation tag="" writeOutText="false"/>
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="iBZSGKLq62FS" canDelete="false">
         <header>
          <cppcodedocumentation tag="" text="Class RecurrentNetwork&amp;#010;"/>
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Public stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="RecurrentNetwork ( ) { }">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor"/>
                 </header>
                </codeblockwithcomments>
                <codeoperation tag="operation_pz5uyTbHMnDD" parent_id="pz5uyTbHMnDD" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param layerCount &amp;#010;@param sizes[] &amp;#010;@param dimension &amp;#010;@param alpha "/>
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks>
                  <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="kUBkDTxE51Oj" indentLevel="1" classfield_id="kUBkDTxE51Oj" text="return recurrentLayerIndex;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="kUBkDTxE51Oj" indentLevel="1" classfield_id="kUBkDTxE51Oj" text="recurrentLayerIndex = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks>
                <codeoperation tag="operation_JwRnsuFFwzwl" parent_id="JwRnsuFFwzwl" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1"/>
                 </header>
                </codeoperation>
                <codeoperation tag="operation_urL3Bl0ZPRc8" parent_id="urL3Bl0ZPRc8" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1"/>
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Protected stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks>
                <codeoperation tag="operation_LvDxr01F5ecQ" parent_id="LvDxr01F5ecQ" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param recurrentLayerIndex "/>
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Private stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks>
              <ccfdeclarationcodeblock tag="tblock_0" parent_id="kUBkDTxE51Oj" indentLevel="1" text=" unsigned recurrentLayerIndex;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //RECURRENTNETWORK_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="kUBkDTxE51Oj" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock tag="tblock_0" parent_id="kUBkDTxE51Oj" indentLevel="1" text=" unsigned recurrentLayerIndex;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="kUBkDTxE51Oj" indentLevel="1" classfield_id="kUBkDTxE51Oj" text="return recurrentLayerIndex;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="kUBkDTxE51Oj" indentLevel="1" classfield_id="kUBkDTxE51Oj" text="recurrentLayerIndex = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="158603088" parent_id="uSaGfZOs1d1L" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="uSaGfZOs1d1L" writeOutText="false" indentLevel="1" text=" RecurrentLayer ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="uSaGfZOs1d1L" writeOutText="false" indentLevel="1" classfield_id="uSaGfZOs1d1L" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="uSaGfZOs1d1L" writeOutText="false" indentLevel="1" classfield_id="uSaGfZOs1d1L" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="uSaGfZOs1d1L" writeOutText="false" indentLevel="1" classfield_id="uSaGfZOs1d1L" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="uSaGfZOs1d1L" writeOutText="false" indentLevel="1" classfield_id="uSaGfZOs1d1L" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;RecurrentLayer item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;RecurrentLayer>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="uSaGfZOs1d1L" writeOutText="false" indentLevel="1" classfield_id="uSaGfZOs1d1L" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="158603088" parent_id="xRpy4qJb6AM8" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="xRpy4qJb6AM8" writeOutText="false" indentLevel="1" text=" NeuralLayer ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="xRpy4qJb6AM8" writeOutText="false" indentLevel="1" classfield_id="xRpy4qJb6AM8" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="xRpy4qJb6AM8" writeOutText="false" indentLevel="1" classfield_id="xRpy4qJb6AM8" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="xRpy4qJb6AM8" writeOutText="false" indentLevel="1" classfield_id="xRpy4qJb6AM8" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="xRpy4qJb6AM8" writeOutText="false" indentLevel="1" classfield_id="xRpy4qJb6AM8" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;NeuralLayer item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;NeuralLayer>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="xRpy4qJb6AM8" writeOutText="false" indentLevel="1" classfield_id="xRpy4qJb6AM8" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="158603088" parent_id="TJHXtQSpGlzV" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="TJHXtQSpGlzV" writeOutText="false" indentLevel="1" text=" NeuralLayer ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="TJHXtQSpGlzV" writeOutText="false" indentLevel="1" classfield_id="TJHXtQSpGlzV" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="TJHXtQSpGlzV" writeOutText="false" indentLevel="1" classfield_id="TJHXtQSpGlzV" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="TJHXtQSpGlzV" writeOutText="false" indentLevel="1" classfield_id="TJHXtQSpGlzV" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="TJHXtQSpGlzV" writeOutText="false" indentLevel="1" classfield_id="TJHXtQSpGlzV" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;NeuralLayer item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;NeuralLayer>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="TJHXtQSpGlzV" writeOutText="false" indentLevel="1" classfield_id="TJHXtQSpGlzV" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="QFWQXDQLlPLZ" fileExt=".h" parent_class="JsQorP4xUzr8" id="cppheaderJsQorP4xUzr8" fileName="DistributedRecurrentNetwork" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef DISTRIBUTEDRECURRENTNETWORK_H&amp;#010;#define DISTRIBUTEDRECURRENTNETWORK_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;recurrentnetwork.h&quot;&amp;#010;#include &quot;recurrentnetwork.h&quot;&amp;#010;#include &quot;distributedrecurrentlayer.h&quot;&amp;#010;#include &quot;unsigned.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Namespace"/>
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false">
         <header>
          <cppcodedocumentation tag="" writeOutText="false"/>
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="JsQorP4xUzr8" canDelete="false">
         <header>
          <cppcodedocumentation tag="" text="Class DistributedRecurrentNetwork&amp;#010;"/>
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Public stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="DistributedRecurrentNetwork ( ) { }">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor"/>
                 </header>
                </codeblockwithcomments>
                <codeoperation tag="operation_3McxqJfi4L1m" parent_id="3McxqJfi4L1m" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param layerCount &amp;#010;@param sizes[] &amp;#010;@param firstLayerW &amp;#010;@param firstLayerH &amp;#010;@param dimensionW &amp;#010;@param dimensionH &amp;#010;@param alpha "/>
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Protected stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Private stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //DISTRIBUTEDRECURRENTNETWORK_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="QFWQXDQLlPLZ" fileExt=".h" parent_class="ggcgZ9UaCwWF" id="cppheaderggcgZ9UaCwWF" fileName="RecurrentPerceptron" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef RECURRENTPERCEPTRON_H&amp;#010;#define RECURRENTPERCEPTRON_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;continuousperceptron.h&quot;&amp;#010;#include &quot;.h&quot;&amp;#010;#include &quot;perceptron.h&quot;&amp;#010;#include &quot;continuousperceptron.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Namespace"/>
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false">
         <header>
          <cppcodedocumentation tag="" writeOutText="false"/>
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="ggcgZ9UaCwWF" canDelete="false">
         <header>
          <cppcodedocumentation tag="" text="Class RecurrentPerceptron&amp;#010;"/>
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Public stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="RecurrentPerceptron ( ) { }">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor"/>
                 </header>
                </codeblockwithcomments>
                <codeoperation tag="operation_9yLeOPx2gGR0" parent_id="9yLeOPx2gGR0" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param dimension &amp;#010;@param alpha "/>
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks>
                  <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="4sCRvWK5KoP5" indentLevel="1" classfield_id="4sCRvWK5KoP5" text="return lastOutput;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="4sCRvWK5KoP5" indentLevel="1" classfield_id="4sCRvWK5KoP5" text="lastOutput = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_2" accessType="0" parent_id="oxaGHwliELwx" indentLevel="1" classfield_id="oxaGHwliELwx" text="return tmpLastOutput;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_3" accessType="1" parent_id="oxaGHwliELwx" indentLevel="1" classfield_id="oxaGHwliELwx" text="tmpLastOutput = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks>
                <codeoperation tag="operation_FkGu1fsxbNRH" parent_id="FkGu1fsxbNRH" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1"/>
                 </header>
                </codeoperation>
                <codeoperation tag="operation_p97e0usDf85e" parent_id="p97e0usDf85e" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1"/>
                 </header>
                </codeoperation>
                <codeoperation tag="operation_oyZNJ0cwQ1MH" parent_id="oyZNJ0cwQ1MH" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1"/>
                 </header>
                </codeoperation>
                <codeoperation tag="operation_ov7hrkZerhJp" parent_id="ov7hrkZerhJp" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param input "/>
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Protected stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Private stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks>
              <ccfdeclarationcodeblock tag="tblock_0" parent_id="4sCRvWK5KoP5" indentLevel="1" text=" float lastOutput;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_0" parent_id="oxaGHwliELwx" indentLevel="1" text=" float tmpLastOutput;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks>
                <codeoperation tag="operation_ROXwkyQpqaGl" parent_id="ROXwkyQpqaGl" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param input "/>
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //RECURRENTPERCEPTRON_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="4sCRvWK5KoP5" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock tag="tblock_0" parent_id="4sCRvWK5KoP5" indentLevel="1" text=" float lastOutput;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="4sCRvWK5KoP5" indentLevel="1" classfield_id="4sCRvWK5KoP5" text="return lastOutput;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="4sCRvWK5KoP5" indentLevel="1" classfield_id="4sCRvWK5KoP5" text="lastOutput = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="oxaGHwliELwx" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock tag="_0" parent_id="oxaGHwliELwx" indentLevel="1" text=" float tmpLastOutput;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_2" accessType="0" parent_id="oxaGHwliELwx" indentLevel="1" classfield_id="oxaGHwliELwx" text="return tmpLastOutput;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_3" accessType="1" parent_id="oxaGHwliELwx" indentLevel="1" classfield_id="oxaGHwliELwx" text="tmpLastOutput = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="7667826" parent_id="KeOt5fVi8hdw" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="KeOt5fVi8hdw" writeOutText="false" indentLevel="1" text=" RecurrentLayer ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="" accessType="0" parent_id="KeOt5fVi8hdw" writeOutText="false" indentLevel="1" classfield_id="KeOt5fVi8hdw" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="1" parent_id="KeOt5fVi8hdw" writeOutText="false" indentLevel="1" classfield_id="KeOt5fVi8hdw" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="2" parent_id="KeOt5fVi8hdw" writeOutText="false" indentLevel="1" classfield_id="KeOt5fVi8hdw" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="3" parent_id="KeOt5fVi8hdw" writeOutText="false" indentLevel="1" classfield_id="KeOt5fVi8hdw" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;RecurrentLayer item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;RecurrentLayer>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="4" parent_id="KeOt5fVi8hdw" writeOutText="false" indentLevel="1" classfield_id="KeOt5fVi8hdw" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="QFWQXDQLlPLZ" fileExt=".h" parent_class="6XvCF0AVyt7M" id="cppheader6XvCF0AVyt7M" fileName="RecurrentLayer" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef RECURRENTLAYER_H&amp;#010;#define RECURRENTLAYER_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;neurallayer.h&quot;&amp;#010;#include &quot;neurallayer.h&quot;&amp;#010;#include &quot;recurrentperceptron.h&quot;&amp;#010;#include &quot;unsigned.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Namespace"/>
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false">
         <header>
          <cppcodedocumentation tag="" writeOutText="false"/>
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="6XvCF0AVyt7M" canDelete="false">
         <header>
          <cppcodedocumentation tag="" text="Class RecurrentLayer&amp;#010;"/>
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Public stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="RecurrentLayer ( ) { }">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor"/>
                 </header>
                </codeblockwithcomments>
                <codeoperation tag="operation_bJcPs3QPdvu5" parent_id="bJcPs3QPdvu5" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param size &amp;#010;@param dimension &amp;#010;@param alpha "/>
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks>
                <codeoperation tag="operation_TlyklrFBk6nv" parent_id="TlyklrFBk6nv" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1"/>
                 </header>
                </codeoperation>
                <codeoperation tag="operation_clhRMs6yTABy" parent_id="clhRMs6yTABy" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1"/>
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Protected stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Private stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //RECURRENTLAYER_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields>
      <codeclassfield role_id="0" listClassName="" field_type="7667826" parent_id="uSaGfZOs1d1L" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="uSaGfZOs1d1L" writeOutText="false" indentLevel="1" text=" RecurrentNetwork ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="" accessType="0" parent_id="uSaGfZOs1d1L" writeOutText="false" indentLevel="1" classfield_id="uSaGfZOs1d1L" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="1" parent_id="uSaGfZOs1d1L" writeOutText="false" indentLevel="1" classfield_id="uSaGfZOs1d1L" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="2" parent_id="uSaGfZOs1d1L" writeOutText="false" indentLevel="1" classfield_id="uSaGfZOs1d1L" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="3" parent_id="uSaGfZOs1d1L" writeOutText="false" indentLevel="1" classfield_id="uSaGfZOs1d1L" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;RecurrentNetwork item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;RecurrentNetwork>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="4" parent_id="uSaGfZOs1d1L" writeOutText="false" indentLevel="1" classfield_id="uSaGfZOs1d1L" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="7667826" parent_id="KeOt5fVi8hdw" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="KeOt5fVi8hdw" writeOutText="false" indentLevel="1" text=" RecurrentPerceptron ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="KeOt5fVi8hdw" writeOutText="false" indentLevel="1" classfield_id="KeOt5fVi8hdw" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="KeOt5fVi8hdw" writeOutText="false" indentLevel="1" classfield_id="KeOt5fVi8hdw" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="KeOt5fVi8hdw" writeOutText="false" indentLevel="1" classfield_id="KeOt5fVi8hdw" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="KeOt5fVi8hdw" writeOutText="false" indentLevel="1" classfield_id="KeOt5fVi8hdw" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;RecurrentPerceptron item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;RecurrentPerceptron>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="KeOt5fVi8hdw" writeOutText="false" indentLevel="1" classfield_id="KeOt5fVi8hdw" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="QFWQXDQLlPLZ" fileExt=".h" parent_class="453xLErUIRsu" id="cppheader453xLErUIRsu" fileName="DistributedRecurrentLayer" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef DISTRIBUTEDRECURRENTLAYER_H&amp;#010;#define DISTRIBUTEDRECURRENTLAYER_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;recurrentlayer.h&quot;&amp;#010;#include &quot;distributedneurallayer.h&quot;&amp;#010;#include &quot;distributedneurallayer.h&quot;&amp;#010;#include &quot;recurrentlayer.h&quot;&amp;#010;#include &quot;unsigned.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Namespace"/>
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false">
         <header>
          <cppcodedocumentation tag="" writeOutText="false"/>
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="453xLErUIRsu" canDelete="false">
         <header>
          <cppcodedocumentation tag="" text="Class DistributedRecurrentLayer&amp;#010;"/>
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Public stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="DistributedRecurrentLayer ( ) { }">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor"/>
                 </header>
                </codeblockwithcomments>
                <codeoperation tag="operation_frTpjN73PZiI" parent_id="frTpjN73PZiI" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param neuronsPerZone &amp;#010;@param w &amp;#010;@param h &amp;#010;@param dimensionW &amp;#010;@param dimensionH &amp;#010;@param alpha "/>
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Protected stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Private stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //DISTRIBUTEDRECURRENTLAYER_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields>
      <codeclassfield role_id="1" listClassName="" field_type="7667826" parent_id="cR05h9jHGnbP" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="cR05h9jHGnbP" writeOutText="false" indentLevel="1" text=" DistributedNeuralLayer ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="cR05h9jHGnbP" writeOutText="false" indentLevel="1" classfield_id="cR05h9jHGnbP" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="cR05h9jHGnbP" writeOutText="false" indentLevel="1" classfield_id="cR05h9jHGnbP" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="cR05h9jHGnbP" writeOutText="false" indentLevel="1" classfield_id="cR05h9jHGnbP" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="cR05h9jHGnbP" writeOutText="false" indentLevel="1" classfield_id="cR05h9jHGnbP" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;DistributedNeuralLayer item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;DistributedNeuralLayer>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="cR05h9jHGnbP" writeOutText="false" indentLevel="1" classfield_id="cR05h9jHGnbP" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="7667826" parent_id="Rrx2GFdIJsTG" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="Rrx2GFdIJsTG" writeOutText="false" indentLevel="1" text=" DistributedNeuralLayer ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="Rrx2GFdIJsTG" writeOutText="false" indentLevel="1" classfield_id="Rrx2GFdIJsTG" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="Rrx2GFdIJsTG" writeOutText="false" indentLevel="1" classfield_id="Rrx2GFdIJsTG" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="Rrx2GFdIJsTG" writeOutText="false" indentLevel="1" classfield_id="Rrx2GFdIJsTG" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="Rrx2GFdIJsTG" writeOutText="false" indentLevel="1" classfield_id="Rrx2GFdIJsTG" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;DistributedNeuralLayer item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;DistributedNeuralLayer>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="Rrx2GFdIJsTG" writeOutText="false" indentLevel="1" classfield_id="Rrx2GFdIJsTG" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="QFWQXDQLlPLZ" fileExt=".h" parent_class="JzGsbheTUlAY" id="cppheaderJzGsbheTUlAY" fileName="NeuralNetwork" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef NEURALNETWORK_H&amp;#010;#define NEURALNETWORK_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;.h&quot;&amp;#010;#include &quot;neurallayer.h&quot;&amp;#010;#include &quot;unsigned.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Namespace"/>
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false">
         <header>
          <cppcodedocumentation tag="" writeOutText="false"/>
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="JzGsbheTUlAY" canDelete="false">
         <header>
          <cppcodedocumentation tag="" text="Class NeuralNetwork&amp;#010;"/>
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Public stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="NeuralNetwork ( ) { }">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor"/>
                 </header>
                </codeblockwithcomments>
                <codeoperation tag="operation_91VUan5QXuPd" parent_id="91VUan5QXuPd" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param layerCount &amp;#010;@param sizes[] &amp;#010;@param dimension &amp;#010;@param alpha "/>
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks>
                  <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="1iL4Bb0k6QtJ" indentLevel="1" classfield_id="1iL4Bb0k6QtJ" text="return layers;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="1iL4Bb0k6QtJ" indentLevel="1" classfield_id="1iL4Bb0k6QtJ" text="layers = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks>
                <codeoperation tag="operation_MQDNgYyi0wEK" parent_id="MQDNgYyi0wEK" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param input &amp;#010;@param target "/>
                 </header>
                </codeoperation>
                <codeoperation tag="operation_C6q4VcEmJj15" parent_id="C6q4VcEmJj15" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param input "/>
                 </header>
                </codeoperation>
                <codeoperation tag="operation_ApCLf8Ue7DsO" parent_id="ApCLf8Ue7DsO" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param input "/>
                 </header>
                </codeoperation>
                <codeoperation tag="operation_DcHrkXfDasno" parent_id="DcHrkXfDasno" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param input "/>
                 </header>
                </codeoperation>
                <codeoperation tag="operation_l5kiProsIUxD" parent_id="l5kiProsIUxD" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param fname "/>
                 </header>
                </codeoperation>
                <codeoperation tag="operation_6USnl5MW84DX" parent_id="6USnl5MW84DX" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param fname "/>
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Protected stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks>
              <ccfdeclarationcodeblock tag="tblock_0" parent_id="1iL4Bb0k6QtJ" indentLevel="1" text=" vector&lt; NeuralLayer * > layers;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks>
                <codeoperation tag="operation_aUYxK74e5KUg" parent_id="aUYxK74e5KUg" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1"/>
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Private stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //NEURALNETWORK_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="1iL4Bb0k6QtJ" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock tag="tblock_0" parent_id="1iL4Bb0k6QtJ" indentLevel="1" text=" vector&lt; NeuralLayer * > layers;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="1iL4Bb0k6QtJ" indentLevel="1" classfield_id="1iL4Bb0k6QtJ" text="return layers;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="1iL4Bb0k6QtJ" indentLevel="1" classfield_id="1iL4Bb0k6QtJ" text="layers = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="2097255" parent_id="d5CGQdjTeav5" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="d5CGQdjTeav5" writeOutText="false" indentLevel="1" text=" DistributedNeuralNetwork ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="" accessType="0" parent_id="d5CGQdjTeav5" writeOutText="false" indentLevel="1" classfield_id="d5CGQdjTeav5" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="1" parent_id="d5CGQdjTeav5" writeOutText="false" indentLevel="1" classfield_id="d5CGQdjTeav5" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="2" parent_id="d5CGQdjTeav5" writeOutText="false" indentLevel="1" classfield_id="d5CGQdjTeav5" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="3" parent_id="d5CGQdjTeav5" writeOutText="false" indentLevel="1" classfield_id="d5CGQdjTeav5" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;DistributedNeuralNetwork item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;DistributedNeuralNetwork>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="4" parent_id="d5CGQdjTeav5" writeOutText="false" indentLevel="1" classfield_id="d5CGQdjTeav5" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="2097255" parent_id="BOdwKnMobffV" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="BOdwKnMobffV" writeOutText="false" indentLevel="1" text=" NeuralLayer ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="BOdwKnMobffV" writeOutText="false" indentLevel="1" classfield_id="BOdwKnMobffV" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="BOdwKnMobffV" writeOutText="false" indentLevel="1" classfield_id="BOdwKnMobffV" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="BOdwKnMobffV" writeOutText="false" indentLevel="1" classfield_id="BOdwKnMobffV" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="BOdwKnMobffV" writeOutText="false" indentLevel="1" classfield_id="BOdwKnMobffV" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;NeuralLayer item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;NeuralLayer>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="BOdwKnMobffV" writeOutText="false" indentLevel="1" classfield_id="BOdwKnMobffV" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="QFWQXDQLlPLZ" fileExt=".h" parent_class="hhb49XgyNuc9" id="cppheaderhhb49XgyNuc9" fileName="DistributedNeuralNetwork" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef DISTRIBUTEDNEURALNETWORK_H&amp;#010;#define DISTRIBUTEDNEURALNETWORK_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;neuralnetwork.h&quot;&amp;#010;#include &quot;neuralnetwork.h&quot;&amp;#010;#include &quot;distributedneurallayer.h&quot;&amp;#010;#include &quot;unsigned.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Namespace"/>
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false">
         <header>
          <cppcodedocumentation tag="" writeOutText="false"/>
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="hhb49XgyNuc9" canDelete="false">
         <header>
          <cppcodedocumentation tag="" text="Class DistributedNeuralNetwork&amp;#010;"/>
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Public stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="DistributedNeuralNetwork ( ) { }">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor"/>
                 </header>
                </codeblockwithcomments>
                <codeoperation tag="operation_QfohauLudg73" parent_id="QfohauLudg73" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param layerCount &amp;#010;@param sizes[] &amp;#010;@param firstLayerW &amp;#010;@param firstLayerH &amp;#010;@param dimensionW &amp;#010;@param dimensionH &amp;#010;@param alpha "/>
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Protected stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Private stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //DISTRIBUTEDNEURALNETWORK_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields>
      <codeclassfield role_id="1" listClassName="" field_type="2097258" parent_id="d5CGQdjTeav5" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="d5CGQdjTeav5" writeOutText="false" indentLevel="1" text=" NeuralNetwork ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="d5CGQdjTeav5" writeOutText="false" indentLevel="1" classfield_id="d5CGQdjTeav5" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="d5CGQdjTeav5" writeOutText="false" indentLevel="1" classfield_id="d5CGQdjTeav5" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="d5CGQdjTeav5" writeOutText="false" indentLevel="1" classfield_id="d5CGQdjTeav5" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="d5CGQdjTeav5" writeOutText="false" indentLevel="1" classfield_id="d5CGQdjTeav5" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;NeuralNetwork item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;NeuralNetwork>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="d5CGQdjTeav5" writeOutText="false" indentLevel="1" classfield_id="d5CGQdjTeav5" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="2424864" parent_id="FA25H4ptjxMn" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="FA25H4ptjxMn" writeOutText="false" indentLevel="1" text=" DistributedNeuralLayer ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="FA25H4ptjxMn" writeOutText="false" indentLevel="1" classfield_id="FA25H4ptjxMn" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="FA25H4ptjxMn" writeOutText="false" indentLevel="1" classfield_id="FA25H4ptjxMn" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="FA25H4ptjxMn" writeOutText="false" indentLevel="1" classfield_id="FA25H4ptjxMn" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="FA25H4ptjxMn" writeOutText="false" indentLevel="1" classfield_id="FA25H4ptjxMn" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;DistributedNeuralLayer item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;DistributedNeuralLayer>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="FA25H4ptjxMn" writeOutText="false" indentLevel="1" classfield_id="FA25H4ptjxMn" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="QFWQXDQLlPLZ" fileExt=".h" parent_class="Z1s60PigJGw5" id="cppheaderZ1s60PigJGw5" fileName="NeuralLayer" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef NEURALLAYER_H&amp;#010;#define NEURALLAYER_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;.h&quot;&amp;#010;#include &quot;vector.h&quot;&amp;#010;#include &quot;perceptron.h&quot;&amp;#010;#include &quot;continuousperceptron.h&quot;&amp;#010;#include &quot;unsigned.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Namespace"/>
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false">
         <header>
          <cppcodedocumentation tag="" writeOutText="false"/>
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="Z1s60PigJGw5" canDelete="false">
         <header>
          <cppcodedocumentation tag="" text="Class NeuralLayer&amp;#010;"/>
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Public stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="NeuralLayer ( ) { }">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor"/>
                 </header>
                </codeblockwithcomments>
                <codeoperation tag="operation_8jnufKPWMh8v" parent_id="8jnufKPWMh8v" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param size &amp;#010;@param dimension &amp;#010;@param alpha "/>
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks>
                  <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="gjZ2Zj4NBFTa" indentLevel="1" classfield_id="gjZ2Zj4NBFTa" text="return neurons;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="gjZ2Zj4NBFTa" indentLevel="1" classfield_id="gjZ2Zj4NBFTa" text="neurons = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks>
                <codeoperation tag="operation_A8HPqtCIaNuU" parent_id="A8HPqtCIaNuU" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param  &amp;#010;@param  "/>
                 </header>
                </codeoperation>
                <codeoperation tag="operation_H4Y0qgWHHAkA" parent_id="H4Y0qgWHHAkA" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param  "/>
                 </header>
                </codeoperation>
                <codeoperation tag="operation_1q9BFEAhyElS" parent_id="1q9BFEAhyElS" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param  "/>
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Protected stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks>
              <ccfdeclarationcodeblock tag="tblock_0" parent_id="gjZ2Zj4NBFTa" indentLevel="1" text=" vector&lt; Perceptron * > neurons;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks>
                <codeoperation tag="operation_SIRcVcs8Hary" parent_id="SIRcVcs8Hary" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1"/>
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks>
                <codeoperation tag="operation_Gil38q8xe7dQ" parent_id="Gil38q8xe7dQ" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param  &amp;#010;@param  "/>
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Private stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks>
                <codeoperation tag="operation_yUz9P0Yy1R22" parent_id="yUz9P0Yy1R22" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1"/>
                 </header>
                </codeoperation>
                <codeoperation tag="operation_xkMPGRqtag4L" parent_id="xkMPGRqtag4L" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param  "/>
                 </header>
                </codeoperation>
                <codeoperation tag="operation_Di2ZTfSQIaTi" parent_id="Di2ZTfSQIaTi" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param output &amp;#010;@param target "/>
                 </header>
                </codeoperation>
                <codeoperation tag="operation_avgozR9abjTq" parent_id="avgozR9abjTq" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param input &amp;#010;@param delta "/>
                 </header>
                </codeoperation>
                <codeoperation tag="operation_AuibAFxPwm4a" parent_id="AuibAFxPwm4a" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param x &amp;#010;@param i "/>
                 </header>
                </codeoperation>
                <codeoperation tag="operation_78ZJKPiutzRb" parent_id="78ZJKPiutzRb" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param  "/>
                 </header>
                </codeoperation>
                <codeoperation tag="operation_fhkkhgtomQ77" parent_id="fhkkhgtomQ77" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param  "/>
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //NEURALLAYER_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="gjZ2Zj4NBFTa" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock tag="tblock_0" parent_id="gjZ2Zj4NBFTa" indentLevel="1" text=" vector&lt; Perceptron * > neurons;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="gjZ2Zj4NBFTa" indentLevel="1" classfield_id="gjZ2Zj4NBFTa" text="return neurons;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="gjZ2Zj4NBFTa" indentLevel="1" classfield_id="gjZ2Zj4NBFTa" text="neurons = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="4980844" parent_id="BOdwKnMobffV" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="BOdwKnMobffV" writeOutText="false" indentLevel="1" text=" NeuralNetwork ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="" accessType="0" parent_id="BOdwKnMobffV" writeOutText="false" indentLevel="1" classfield_id="BOdwKnMobffV" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="1" parent_id="BOdwKnMobffV" writeOutText="false" indentLevel="1" classfield_id="BOdwKnMobffV" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="2" parent_id="BOdwKnMobffV" writeOutText="false" indentLevel="1" classfield_id="BOdwKnMobffV" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="3" parent_id="BOdwKnMobffV" writeOutText="false" indentLevel="1" classfield_id="BOdwKnMobffV" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;NeuralNetwork item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;NeuralNetwork>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="4" parent_id="BOdwKnMobffV" writeOutText="false" indentLevel="1" classfield_id="BOdwKnMobffV" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="4980844" parent_id="xRpy4qJb6AM8" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="xRpy4qJb6AM8" writeOutText="false" indentLevel="1" text=" RecurrentNetwork ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="" accessType="0" parent_id="xRpy4qJb6AM8" writeOutText="false" indentLevel="1" classfield_id="xRpy4qJb6AM8" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="1" parent_id="xRpy4qJb6AM8" writeOutText="false" indentLevel="1" classfield_id="xRpy4qJb6AM8" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="2" parent_id="xRpy4qJb6AM8" writeOutText="false" indentLevel="1" classfield_id="xRpy4qJb6AM8" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="3" parent_id="xRpy4qJb6AM8" writeOutText="false" indentLevel="1" classfield_id="xRpy4qJb6AM8" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;RecurrentNetwork item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;RecurrentNetwork>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="4" parent_id="xRpy4qJb6AM8" writeOutText="false" indentLevel="1" classfield_id="xRpy4qJb6AM8" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="4980844" parent_id="TJHXtQSpGlzV" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="TJHXtQSpGlzV" writeOutText="false" indentLevel="1" text=" RecurrentNetwork ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="" accessType="0" parent_id="TJHXtQSpGlzV" writeOutText="false" indentLevel="1" classfield_id="TJHXtQSpGlzV" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="1" parent_id="TJHXtQSpGlzV" writeOutText="false" indentLevel="1" classfield_id="TJHXtQSpGlzV" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="2" parent_id="TJHXtQSpGlzV" writeOutText="false" indentLevel="1" classfield_id="TJHXtQSpGlzV" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="3" parent_id="TJHXtQSpGlzV" writeOutText="false" indentLevel="1" classfield_id="TJHXtQSpGlzV" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;RecurrentNetwork item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;RecurrentNetwork>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="4" parent_id="TJHXtQSpGlzV" writeOutText="false" indentLevel="1" classfield_id="TJHXtQSpGlzV" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="QFWQXDQLlPLZ" fileExt=".h" parent_class="VNPkKjaMVEIi" id="cppheaderVNPkKjaMVEIi" fileName="DistributedNeuralLayer" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef DISTRIBUTEDNEURALLAYER_H&amp;#010;#define DISTRIBUTEDNEURALLAYER_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;neurallayer.h&quot;&amp;#010;#include &quot;.h&quot;&amp;#010;#include &quot;neurallayer.h&quot;&amp;#010;#include &quot;unsigned.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Namespace"/>
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false">
         <header>
          <cppcodedocumentation tag="" writeOutText="false"/>
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="VNPkKjaMVEIi" canDelete="false">
         <header>
          <cppcodedocumentation tag="" text="Class DistributedNeuralLayer&amp;#010;"/>
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Public stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="DistributedNeuralLayer ( ) { }">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor"/>
                 </header>
                </codeblockwithcomments>
                <codeoperation tag="operation_egGWvunyywMF" parent_id="egGWvunyywMF" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param neuronsPerZone &amp;#010;@param w &amp;#010;@param h &amp;#010;@param dimensionW &amp;#010;@param dimensionH &amp;#010;@param alpha "/>
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks>
                  <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="SbjXfoPfaQRu" indentLevel="1" classfield_id="SbjXfoPfaQRu" text="return neuronsPerZone;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_6" accessType="1" parent_id="SbjXfoPfaQRu" indentLevel="1" classfield_id="SbjXfoPfaQRu" text="neuronsPerZone = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_7" accessType="0" parent_id="yYcNlz8I3gHE" indentLevel="1" classfield_id="yYcNlz8I3gHE" text="return width;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_8" accessType="1" parent_id="yYcNlz8I3gHE" indentLevel="1" classfield_id="yYcNlz8I3gHE" text="width = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_9" accessType="0" parent_id="CzzDRnTrNCN0" indentLevel="1" classfield_id="CzzDRnTrNCN0" text="return height;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_10" accessType="1" parent_id="CzzDRnTrNCN0" indentLevel="1" classfield_id="CzzDRnTrNCN0" text="height = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_11" accessType="0" parent_id="0mgYA5R8c3VN" indentLevel="1" classfield_id="0mgYA5R8c3VN" text="return dimensionWidth;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_12" accessType="1" parent_id="0mgYA5R8c3VN" indentLevel="1" classfield_id="0mgYA5R8c3VN" text="dimensionWidth = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_13" accessType="0" parent_id="2cg5GvISsHdJ" indentLevel="1" classfield_id="2cg5GvISsHdJ" text="return dimensionHeight;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_14" accessType="1" parent_id="2cg5GvISsHdJ" indentLevel="1" classfield_id="2cg5GvISsHdJ" text="dimensionHeight = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_15" accessType="0" parent_id="368QHVOHF4qQ" indentLevel="1" classfield_id="368QHVOHF4qQ" text="return inputWidth;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_16" accessType="1" parent_id="368QHVOHF4qQ" indentLevel="1" classfield_id="368QHVOHF4qQ" text="inputWidth = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_17" accessType="0" parent_id="8HWkK07KclOq" indentLevel="1" classfield_id="8HWkK07KclOq" text="return inputHeight;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_18" accessType="1" parent_id="8HWkK07KclOq" indentLevel="1" classfield_id="8HWkK07KclOq" text="inputHeight = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks>
                <codeoperation tag="operation_caqvEbjRKipG" parent_id="caqvEbjRKipG" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param  &amp;#010;@param  "/>
                 </header>
                </codeoperation>
                <codeoperation tag="operation_r0UjazLtHHer" parent_id="r0UjazLtHHer" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param  "/>
                 </header>
                </codeoperation>
                <codeoperation tag="operation_xfisgdsKmWGJ" parent_id="xfisgdsKmWGJ" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param  "/>
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Protected stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks>
              <ccfdeclarationcodeblock tag="tblock_0" parent_id="SbjXfoPfaQRu" indentLevel="1" text=" unsigned neuronsPerZone;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_0" parent_id="yYcNlz8I3gHE" indentLevel="1" text=" unsigned width;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_1" parent_id="CzzDRnTrNCN0" indentLevel="1" text=" unsigned height;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_2" parent_id="0mgYA5R8c3VN" indentLevel="1" text=" unsigned dimensionWidth;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_3" parent_id="2cg5GvISsHdJ" indentLevel="1" text=" unsigned dimensionHeight;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_4" parent_id="368QHVOHF4qQ" indentLevel="1" text=" unsigned inputWidth;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_5" parent_id="8HWkK07KclOq" indentLevel="1" text=" unsigned inputHeight;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks>
                <codeoperation tag="operation_V9OBKVX2TnGk" parent_id="V9OBKVX2TnGk" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param neuronsPerZone &amp;#010;@param w &amp;#010;@param h &amp;#010;@param dimensionW &amp;#010;@param dimensionH "/>
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Private stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks>
                <codeoperation tag="operation_EtOKmoNTD4PD" parent_id="EtOKmoNTD4PD" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param x &amp;#010;@param y &amp;#010;@param input "/>
                 </header>
                </codeoperation>
                <codeoperation tag="operation_jg1UgIMEnqSj" parent_id="jg1UgIMEnqSj" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param input &amp;#010;@param delta "/>
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //DISTRIBUTEDNEURALLAYER_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="SbjXfoPfaQRu" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock tag="tblock_0" parent_id="SbjXfoPfaQRu" indentLevel="1" text=" unsigned neuronsPerZone;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="SbjXfoPfaQRu" indentLevel="1" classfield_id="SbjXfoPfaQRu" text="return neuronsPerZone;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_6" accessType="1" parent_id="SbjXfoPfaQRu" indentLevel="1" classfield_id="SbjXfoPfaQRu" text="neuronsPerZone = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="yYcNlz8I3gHE" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock tag="_0" parent_id="yYcNlz8I3gHE" indentLevel="1" text=" unsigned width;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_7" accessType="0" parent_id="yYcNlz8I3gHE" indentLevel="1" classfield_id="yYcNlz8I3gHE" text="return width;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_8" accessType="1" parent_id="yYcNlz8I3gHE" indentLevel="1" classfield_id="yYcNlz8I3gHE" text="width = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="CzzDRnTrNCN0" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock tag="_1" parent_id="CzzDRnTrNCN0" indentLevel="1" text=" unsigned height;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_9" accessType="0" parent_id="CzzDRnTrNCN0" indentLevel="1" classfield_id="CzzDRnTrNCN0" text="return height;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_10" accessType="1" parent_id="CzzDRnTrNCN0" indentLevel="1" classfield_id="CzzDRnTrNCN0" text="height = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="0mgYA5R8c3VN" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock tag="_2" parent_id="0mgYA5R8c3VN" indentLevel="1" text=" unsigned dimensionWidth;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_11" accessType="0" parent_id="0mgYA5R8c3VN" indentLevel="1" classfield_id="0mgYA5R8c3VN" text="return dimensionWidth;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_12" accessType="1" parent_id="0mgYA5R8c3VN" indentLevel="1" classfield_id="0mgYA5R8c3VN" text="dimensionWidth = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="2cg5GvISsHdJ" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock tag="_3" parent_id="2cg5GvISsHdJ" indentLevel="1" text=" unsigned dimensionHeight;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_13" accessType="0" parent_id="2cg5GvISsHdJ" indentLevel="1" classfield_id="2cg5GvISsHdJ" text="return dimensionHeight;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_14" accessType="1" parent_id="2cg5GvISsHdJ" indentLevel="1" classfield_id="2cg5GvISsHdJ" text="dimensionHeight = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="368QHVOHF4qQ" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock tag="_4" parent_id="368QHVOHF4qQ" indentLevel="1" text=" unsigned inputWidth;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_15" accessType="0" parent_id="368QHVOHF4qQ" indentLevel="1" classfield_id="368QHVOHF4qQ" text="return inputWidth;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_16" accessType="1" parent_id="368QHVOHF4qQ" indentLevel="1" classfield_id="368QHVOHF4qQ" text="inputWidth = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="8HWkK07KclOq" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock tag="_5" parent_id="8HWkK07KclOq" indentLevel="1" text=" unsigned inputHeight;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_17" accessType="0" parent_id="8HWkK07KclOq" indentLevel="1" classfield_id="8HWkK07KclOq" text="return inputHeight;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_18" accessType="1" parent_id="8HWkK07KclOq" indentLevel="1" classfield_id="8HWkK07KclOq" text="inputHeight = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="7667826" parent_id="FA25H4ptjxMn" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="FA25H4ptjxMn" writeOutText="false" indentLevel="1" text=" DistributedNeuralNetwork ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="" accessType="0" parent_id="FA25H4ptjxMn" writeOutText="false" indentLevel="1" classfield_id="FA25H4ptjxMn" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="1" parent_id="FA25H4ptjxMn" writeOutText="false" indentLevel="1" classfield_id="FA25H4ptjxMn" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="2" parent_id="FA25H4ptjxMn" writeOutText="false" indentLevel="1" classfield_id="FA25H4ptjxMn" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="3" parent_id="FA25H4ptjxMn" writeOutText="false" indentLevel="1" classfield_id="FA25H4ptjxMn" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;DistributedNeuralNetwork item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;DistributedNeuralNetwork>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="4" parent_id="FA25H4ptjxMn" writeOutText="false" indentLevel="1" classfield_id="FA25H4ptjxMn" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="7667826" parent_id="cR05h9jHGnbP" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="cR05h9jHGnbP" writeOutText="false" indentLevel="1" text=" DistributedRecurrentLayer ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="" accessType="0" parent_id="cR05h9jHGnbP" writeOutText="false" indentLevel="1" classfield_id="cR05h9jHGnbP" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="1" parent_id="cR05h9jHGnbP" writeOutText="false" indentLevel="1" classfield_id="cR05h9jHGnbP" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="2" parent_id="cR05h9jHGnbP" writeOutText="false" indentLevel="1" classfield_id="cR05h9jHGnbP" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="3" parent_id="cR05h9jHGnbP" writeOutText="false" indentLevel="1" classfield_id="cR05h9jHGnbP" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;DistributedRecurrentLayer item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;DistributedRecurrentLayer>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="4" parent_id="cR05h9jHGnbP" writeOutText="false" indentLevel="1" classfield_id="cR05h9jHGnbP" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="7667826" parent_id="Rrx2GFdIJsTG" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="Rrx2GFdIJsTG" writeOutText="false" indentLevel="1" text=" DistributedRecurrentLayer ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="" accessType="0" parent_id="Rrx2GFdIJsTG" writeOutText="false" indentLevel="1" classfield_id="Rrx2GFdIJsTG" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="1" parent_id="Rrx2GFdIJsTG" writeOutText="false" indentLevel="1" classfield_id="Rrx2GFdIJsTG" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="2" parent_id="Rrx2GFdIJsTG" writeOutText="false" indentLevel="1" classfield_id="Rrx2GFdIJsTG" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="3" parent_id="Rrx2GFdIJsTG" writeOutText="false" indentLevel="1" classfield_id="Rrx2GFdIJsTG" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;DistributedRecurrentLayer item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;DistributedRecurrentLayer>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="4" parent_id="Rrx2GFdIJsTG" writeOutText="false" indentLevel="1" classfield_id="Rrx2GFdIJsTG" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="QFWQXDQLlPLZ" fileExt=".h" parent_class="dETz9cSzCHmb" id="cppheaderdETz9cSzCHmb" fileName="Perceptron" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef PERCEPTRON_H&amp;#010;#define PERCEPTRON_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;.h&quot;&amp;#010;#include &quot;unsigned.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Namespace"/>
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false">
         <header>
          <cppcodedocumentation tag="" writeOutText="false"/>
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="dETz9cSzCHmb" canDelete="false">
         <header>
          <cppcodedocumentation tag="" text="Class Perceptron&amp;#010;"/>
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Public stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="Perceptron ( ) { }">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor"/>
                 </header>
                </codeblockwithcomments>
                <codeoperation tag="operation_LIg4eleM1DlI" parent_id="LIg4eleM1DlI" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param  &amp;#010;@param  "/>
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks>
                  <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="5WNkBfA6SDI2" indentLevel="1" classfield_id="5WNkBfA6SDI2" text="return momentum;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_5" accessType="1" parent_id="5WNkBfA6SDI2" indentLevel="1" classfield_id="5WNkBfA6SDI2" text="momentum = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_6" accessType="0" parent_id="Sp6wpQSaeHHH" indentLevel="1" classfield_id="Sp6wpQSaeHHH" text="return w0;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_7" accessType="1" parent_id="Sp6wpQSaeHHH" indentLevel="1" classfield_id="Sp6wpQSaeHHH" text="w0 = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_8" accessType="0" parent_id="TO6LrsRNFBXt" indentLevel="1" classfield_id="TO6LrsRNFBXt" text="return deltaW;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_9" accessType="1" parent_id="TO6LrsRNFBXt" indentLevel="1" classfield_id="TO6LrsRNFBXt" text="deltaW = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_10" accessType="0" parent_id="8Q3JvubUD8LY" indentLevel="1" classfield_id="8Q3JvubUD8LY" text="return alpha;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_11" accessType="1" parent_id="8Q3JvubUD8LY" indentLevel="1" classfield_id="8Q3JvubUD8LY" text="alpha = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_12" accessType="0" parent_id="iGYRJMXhOqcI" indentLevel="1" classfield_id="iGYRJMXhOqcI" text="return dimension;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_13" accessType="1" parent_id="iGYRJMXhOqcI" indentLevel="1" classfield_id="iGYRJMXhOqcI" text="dimension = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_14" accessType="0" parent_id="P6UVP251lEqQ" indentLevel="1" classfield_id="P6UVP251lEqQ" text="return weights;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_15" accessType="1" parent_id="P6UVP251lEqQ" indentLevel="1" classfield_id="P6UVP251lEqQ" text="weights = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks>
                <codeoperation tag="operation_K6FVqX16XuD6" parent_id="K6FVqX16XuD6" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param input &amp;#010;@param target "/>
                 </header>
                </codeoperation>
                <codeoperation tag="operation_8BYd5jhAPPs7" parent_id="8BYd5jhAPPs7" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param input &amp;#010;@param delta "/>
                 </header>
                </codeoperation>
                <codeoperation tag="operation_68FTY6ZgLRcO" parent_id="68FTY6ZgLRcO" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param input "/>
                 </header>
                </codeoperation>
                <codeoperation tag="operation_y29JTlfrufsM" parent_id="y29JTlfrufsM" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param input "/>
                 </header>
                </codeoperation>
                <codeoperation tag="operation_M2aFiSb7JFOs" parent_id="M2aFiSb7JFOs" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1"/>
                 </header>
                </codeoperation>
                <codeoperation tag="operation_aHwVVZKXp9Xw" parent_id="aHwVVZKXp9Xw" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param filename "/>
                 </header>
                </codeoperation>
                <codeoperation tag="operation_UiDnvbgVqa1L" parent_id="UiDnvbgVqa1L" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param filename "/>
                 </header>
                </codeoperation>
                <codeoperation tag="operation_E2ke5qjZWwLS" parent_id="E2ke5qjZWwLS" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1"/>
                 </header>
                </codeoperation>
                <codeoperation tag="operation_YzxMZwgjEXeg" parent_id="YzxMZwgjEXeg" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1"/>
                 </header>
                </codeoperation>
                <codeoperation tag="operation_Zzh6u2YQ1Tmb" parent_id="Zzh6u2YQ1Tmb" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param  "/>
                 </header>
                </codeoperation>
                <codeoperation tag="operation_o0Qtjg3IeiOW" parent_id="o0Qtjg3IeiOW" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param  &amp;#010;@param  "/>
                 </header>
                </codeoperation>
                <codeoperation tag="operation_gQCp2UvZxsXB" parent_id="gQCp2UvZxsXB" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param  &amp;#010;@param  "/>
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Protected stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks>
              <ccfdeclarationcodeblock tag="tblock_0" parent_id="8Q3JvubUD8LY" indentLevel="1" text=" float alpha;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_0" parent_id="iGYRJMXhOqcI" indentLevel="1" text=" unsigned dimension;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_1" parent_id="P6UVP251lEqQ" indentLevel="1" text=" vector&lt; float > weights;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks>
                <codeoperation tag="operation_JbLXrLTJAZD0" parent_id="JbLXrLTJAZD0" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param input "/>
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Private stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks>
              <ccfdeclarationcodeblock tag="_2" parent_id="5WNkBfA6SDI2" indentLevel="1" text=" float momentum;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_3" parent_id="Sp6wpQSaeHHH" indentLevel="1" text=" float w0;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_4" parent_id="TO6LrsRNFBXt" indentLevel="1" text=" vector&lt; float > deltaW;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks>
                <codeoperation tag="operation_JoXyEHwNPD3Z" parent_id="JoXyEHwNPD3Z" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param  &amp;#010;@param  "/>
                 </header>
                </codeoperation>
                <codeoperation tag="operation_mTIYXvaWu0ix" parent_id="mTIYXvaWu0ix" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param input "/>
                 </header>
                </codeoperation>
                <codeoperation tag="operation_IS7Dgqy24Ico" parent_id="IS7Dgqy24Ico" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param x "/>
                 </header>
                </codeoperation>
                <codeoperation tag="operation_dUfikHWgHph0" parent_id="dUfikHWgHph0" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param  &amp;#010;@param  "/>
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //PERCEPTRON_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="5WNkBfA6SDI2" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock tag="_2" parent_id="5WNkBfA6SDI2" indentLevel="1" text=" float momentum;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="5WNkBfA6SDI2" indentLevel="1" classfield_id="5WNkBfA6SDI2" text="return momentum;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_5" accessType="1" parent_id="5WNkBfA6SDI2" indentLevel="1" classfield_id="5WNkBfA6SDI2" text="momentum = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="Sp6wpQSaeHHH" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock tag="_3" parent_id="Sp6wpQSaeHHH" indentLevel="1" text=" float w0;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_6" accessType="0" parent_id="Sp6wpQSaeHHH" indentLevel="1" classfield_id="Sp6wpQSaeHHH" text="return w0;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_7" accessType="1" parent_id="Sp6wpQSaeHHH" indentLevel="1" classfield_id="Sp6wpQSaeHHH" text="w0 = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="TO6LrsRNFBXt" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock tag="_4" parent_id="TO6LrsRNFBXt" indentLevel="1" text=" vector&lt; float > deltaW;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_8" accessType="0" parent_id="TO6LrsRNFBXt" indentLevel="1" classfield_id="TO6LrsRNFBXt" text="return deltaW;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_9" accessType="1" parent_id="TO6LrsRNFBXt" indentLevel="1" classfield_id="TO6LrsRNFBXt" text="deltaW = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="8Q3JvubUD8LY" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock tag="tblock_0" parent_id="8Q3JvubUD8LY" indentLevel="1" text=" float alpha;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_10" accessType="0" parent_id="8Q3JvubUD8LY" indentLevel="1" classfield_id="8Q3JvubUD8LY" text="return alpha;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_11" accessType="1" parent_id="8Q3JvubUD8LY" indentLevel="1" classfield_id="8Q3JvubUD8LY" text="alpha = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="iGYRJMXhOqcI" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock tag="_0" parent_id="iGYRJMXhOqcI" indentLevel="1" text=" unsigned dimension;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_12" accessType="0" parent_id="iGYRJMXhOqcI" indentLevel="1" classfield_id="iGYRJMXhOqcI" text="return dimension;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_13" accessType="1" parent_id="iGYRJMXhOqcI" indentLevel="1" classfield_id="iGYRJMXhOqcI" text="dimension = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="P6UVP251lEqQ" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock tag="_1" parent_id="P6UVP251lEqQ" indentLevel="1" text=" vector&lt; float > weights;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_14" accessType="0" parent_id="P6UVP251lEqQ" indentLevel="1" classfield_id="P6UVP251lEqQ" text="return weights;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_15" accessType="1" parent_id="P6UVP251lEqQ" indentLevel="1" classfield_id="P6UVP251lEqQ" text="weights = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="QFWQXDQLlPLZ" fileExt=".h" parent_class="G0qEJmlsjgee" id="cppheaderG0qEJmlsjgee" fileName="ContinuousPerceptron" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef CONTINUOUSPERCEPTRON_H&amp;#010;#define CONTINUOUSPERCEPTRON_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;perceptron.h&quot;&amp;#010;#include &quot;perceptron.h&quot;&amp;#010;#include &quot;unsigned.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Namespace"/>
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false">
         <header>
          <cppcodedocumentation tag="" writeOutText="false"/>
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="G0qEJmlsjgee" canDelete="false">
         <header>
          <cppcodedocumentation tag="" text="Class ContinuousPerceptron&amp;#010;"/>
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Public stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="ContinuousPerceptron ( ) { }">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor"/>
                 </header>
                </codeblockwithcomments>
                <codeoperation tag="operation_1RLfqqRMdPln" parent_id="1RLfqqRMdPln" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param dimension &amp;#010;@param alpha "/>
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Protected stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks>
                <codeoperation tag="operation_adsBmp5fYqKv" parent_id="adsBmp5fYqKv" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param  "/>
                 </header>
                </codeoperation>
                <codeoperation tag="operation_zsnXj5SygPXm" parent_id="zsnXj5SygPXm" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param  "/>
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Private stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //CONTINUOUSPERCEPTRON_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="hwD8QbZLtYF3" id="cppheaderhwD8QbZLtYF3" fileName="Perceptron" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef PERCEPTRON_H&amp;#010;#define PERCEPTRON_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Namespace"/>
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false">
         <header>
          <cppcodedocumentation tag="" writeOutText="false"/>
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="hwD8QbZLtYF3" canDelete="false">
         <header>
          <cppcodedocumentation tag="" text="Class Perceptron&amp;#010;"/>
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Public stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="Perceptron ( ) { }">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor"/>
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Protected stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Private stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //PERCEPTRON_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields/>
    </classifiercodedocument>
   </codegenerator>
  </codegeneration>
 </XMI.extensions>
</XMI>
